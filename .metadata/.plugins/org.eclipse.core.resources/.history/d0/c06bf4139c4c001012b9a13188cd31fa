#include "stm32f4xx.h"

#define GPIOBEN	(1U<<1)
#define TIM3EN	(1U<<1)


void tim3_gpio_init(void);
void tim3_pwm_init(void);

/*PWM on TIM3_CH1 (PB4)*/
int main(void)
{
	tim3_gpio_init();
	tim3_pwm_init();

	while(1)
	{

	}
}

void tim3_gpio_init(void)
{
	//enable GPIOB clock
	RCC->AHB1ENR |= GPIOBEN;

	//Set PB4 to alternate function
	GPIOB->MODER &= ~(3U<<(2*4));
	GPIOB->MODER |= (2U<<(2*4));

	//Set AF2 (TIM3_CH1) for PB4
	GPIOB->AFR[0] &= ~(0xF<<(4 * 4));
	GPIOB->AFR[0] |= (2U<<(4 * 4));
}

void tim3_pwm_init(void)
{
	//enable tim3 clock
	RCC->APB1ENR |= TIM3EN;

	//Timer Configuration for PWM
	TIM3->PSC = 16 - 1; //16Mhz/16 = 1Mhz timer ticks
	TIM3->ARR = 1000 - 1; // 1Mhz/1000 = 1Khz
	TIM3->CCR1 = 750; // for 75% duty cycle

	//Set PWM mode 1 on CH1 (OC1M = 110), enable preload (OC1PE = 1)
	TIM3->CCMR1 &= ~(7U<<4);
	TIM3->CCMR1 |= (6U<<4); // PWM mode 1
	TIM3->CCMR1 |= (1U<<3); // Output compare preload enable

	//Enable output on channel 1
	TIM3->CCER |= (1U<<0); // CC1E

	TIM3->CR1 |= (1U<<7);
	TIM3->CR1 |= (1U<<0);

}
