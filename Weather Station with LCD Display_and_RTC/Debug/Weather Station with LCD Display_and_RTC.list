
Weather Station with LCD Display_and_RTC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000045fc  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003a8  080047d0  080047d0  000057d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004b78  08004b78  000061c8  2**0
                  CONTENTS
  4 .ARM          00000008  08004b78  08004b78  00005b78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004b80  08004b80  000061c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004b80  08004b80  00005b80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004b84  08004b84  00005b84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001c8  20000000  08004b88  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001c0  200001c8  08004d50  000061c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000388  08004d50  00006388  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000061c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001f0d  00000000  00000000  000061f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000ace  00000000  00000000  00008105  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002c0  00000000  00000000  00008bd8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001e4  00000000  00000000  00008e98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001ae9f  00000000  00000000  0000907c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003971  00000000  00000000  00023f1b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0009180f  00000000  00000000  0002788c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b909b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001aa4  00000000  00000000  000b90e0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000064  00000000  00000000  000bab84  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001c8 	.word	0x200001c8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080047b4 	.word	0x080047b4

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001cc 	.word	0x200001cc
 800020c:	080047b4 	.word	0x080047b4

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <adc_init>:
#include "stm32f4xx.h"
#include "adc.h"

void adc_init(void)
{
 8000c88:	b480      	push	{r7}
 8000c8a:	af00      	add	r7, sp, #0
    // Enable clocks for GPIOA and ADC1
    RCC->AHB1ENR |= (1U << 0);   // GPIOA
 8000c8c:	4b1a      	ldr	r3, [pc, #104]	@ (8000cf8 <adc_init+0x70>)
 8000c8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c90:	4a19      	ldr	r2, [pc, #100]	@ (8000cf8 <adc_init+0x70>)
 8000c92:	f043 0301 	orr.w	r3, r3, #1
 8000c96:	6313      	str	r3, [r2, #48]	@ 0x30
    RCC->APB2ENR |= (1U << 8);   // ADC1
 8000c98:	4b17      	ldr	r3, [pc, #92]	@ (8000cf8 <adc_init+0x70>)
 8000c9a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c9c:	4a16      	ldr	r2, [pc, #88]	@ (8000cf8 <adc_init+0x70>)
 8000c9e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000ca2:	6453      	str	r3, [r2, #68]	@ 0x44

    // Configure PA1 as analog (assume thermistor connected to PA1)
    GPIOA->MODER |= (3U << (2 * 1)); // Analog mode
 8000ca4:	4b15      	ldr	r3, [pc, #84]	@ (8000cfc <adc_init+0x74>)
 8000ca6:	681b      	ldr	r3, [r3, #0]
 8000ca8:	4a14      	ldr	r2, [pc, #80]	@ (8000cfc <adc_init+0x74>)
 8000caa:	f043 030c 	orr.w	r3, r3, #12
 8000cae:	6013      	str	r3, [r2, #0]

    // ADC Common config (prescaler /4)
    ADC->CCR &= ~(3U << 16);
 8000cb0:	4b13      	ldr	r3, [pc, #76]	@ (8000d00 <adc_init+0x78>)
 8000cb2:	685b      	ldr	r3, [r3, #4]
 8000cb4:	4a12      	ldr	r2, [pc, #72]	@ (8000d00 <adc_init+0x78>)
 8000cb6:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8000cba:	6053      	str	r3, [r2, #4]
    ADC->CCR |=  (1U << 16);    // PCLK2 / 4
 8000cbc:	4b10      	ldr	r3, [pc, #64]	@ (8000d00 <adc_init+0x78>)
 8000cbe:	685b      	ldr	r3, [r3, #4]
 8000cc0:	4a0f      	ldr	r2, [pc, #60]	@ (8000d00 <adc_init+0x78>)
 8000cc2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000cc6:	6053      	str	r3, [r2, #4]

    // ADC1 Config
    ADC1->CR2 = 0;               // Clear CR2
 8000cc8:	4b0e      	ldr	r3, [pc, #56]	@ (8000d04 <adc_init+0x7c>)
 8000cca:	2200      	movs	r2, #0
 8000ccc:	609a      	str	r2, [r3, #8]
    ADC1->SQR3 = 1;              // First conversion on channel 1 (PA1)
 8000cce:	4b0d      	ldr	r3, [pc, #52]	@ (8000d04 <adc_init+0x7c>)
 8000cd0:	2201      	movs	r2, #1
 8000cd2:	635a      	str	r2, [r3, #52]	@ 0x34
    ADC1->SMPR2 |= (3U << 3);    // Sampling time for channel 1 = 56 cycles
 8000cd4:	4b0b      	ldr	r3, [pc, #44]	@ (8000d04 <adc_init+0x7c>)
 8000cd6:	691b      	ldr	r3, [r3, #16]
 8000cd8:	4a0a      	ldr	r2, [pc, #40]	@ (8000d04 <adc_init+0x7c>)
 8000cda:	f043 0318 	orr.w	r3, r3, #24
 8000cde:	6113      	str	r3, [r2, #16]
    ADC1->CR2 |= (1U << 0);      // Enable ADC1
 8000ce0:	4b08      	ldr	r3, [pc, #32]	@ (8000d04 <adc_init+0x7c>)
 8000ce2:	689b      	ldr	r3, [r3, #8]
 8000ce4:	4a07      	ldr	r2, [pc, #28]	@ (8000d04 <adc_init+0x7c>)
 8000ce6:	f043 0301 	orr.w	r3, r3, #1
 8000cea:	6093      	str	r3, [r2, #8]
}
 8000cec:	bf00      	nop
 8000cee:	46bd      	mov	sp, r7
 8000cf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cf4:	4770      	bx	lr
 8000cf6:	bf00      	nop
 8000cf8:	40023800 	.word	0x40023800
 8000cfc:	40020000 	.word	0x40020000
 8000d00:	40012300 	.word	0x40012300
 8000d04:	40012000 	.word	0x40012000

08000d08 <adc_read>:

uint16_t adc_read(uint8_t channel)
{
 8000d08:	b480      	push	{r7}
 8000d0a:	b083      	sub	sp, #12
 8000d0c:	af00      	add	r7, sp, #0
 8000d0e:	4603      	mov	r3, r0
 8000d10:	71fb      	strb	r3, [r7, #7]
    // Select ADC channel
    ADC1->SQR3 = channel;
 8000d12:	4a0c      	ldr	r2, [pc, #48]	@ (8000d44 <adc_read+0x3c>)
 8000d14:	79fb      	ldrb	r3, [r7, #7]
 8000d16:	6353      	str	r3, [r2, #52]	@ 0x34

    // Start conversion
    ADC1->CR2 |= (1U << 30);
 8000d18:	4b0a      	ldr	r3, [pc, #40]	@ (8000d44 <adc_read+0x3c>)
 8000d1a:	689b      	ldr	r3, [r3, #8]
 8000d1c:	4a09      	ldr	r2, [pc, #36]	@ (8000d44 <adc_read+0x3c>)
 8000d1e:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8000d22:	6093      	str	r3, [r2, #8]

    // Wait until EOC (End Of Conversion)
    while (!(ADC1->SR & (1U << 1)));
 8000d24:	bf00      	nop
 8000d26:	4b07      	ldr	r3, [pc, #28]	@ (8000d44 <adc_read+0x3c>)
 8000d28:	681b      	ldr	r3, [r3, #0]
 8000d2a:	f003 0302 	and.w	r3, r3, #2
 8000d2e:	2b00      	cmp	r3, #0
 8000d30:	d0f9      	beq.n	8000d26 <adc_read+0x1e>

    // Return converted value
    return ADC1->DR;
 8000d32:	4b04      	ldr	r3, [pc, #16]	@ (8000d44 <adc_read+0x3c>)
 8000d34:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000d36:	b29b      	uxth	r3, r3
}
 8000d38:	4618      	mov	r0, r3
 8000d3a:	370c      	adds	r7, #12
 8000d3c:	46bd      	mov	sp, r7
 8000d3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d42:	4770      	bx	lr
 8000d44:	40012000 	.word	0x40012000

08000d48 <delay_init>:
#include "delay.h"

// Assumes system clock = 16 MHz
#define SYSCLK_HZ 16000000U

void delay_init(void) {
 8000d48:	b480      	push	{r7}
 8000d4a:	af00      	add	r7, sp, #0
    // SysTick configuration for 1us tick
    SysTick->LOAD = (SYSCLK_HZ / 1000000U) - 1;  // 1us reload
 8000d4c:	4b06      	ldr	r3, [pc, #24]	@ (8000d68 <delay_init+0x20>)
 8000d4e:	220f      	movs	r2, #15
 8000d50:	605a      	str	r2, [r3, #4]
    SysTick->VAL = 0;                            // Clear current value
 8000d52:	4b05      	ldr	r3, [pc, #20]	@ (8000d68 <delay_init+0x20>)
 8000d54:	2200      	movs	r2, #0
 8000d56:	609a      	str	r2, [r3, #8]
    SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk;
 8000d58:	4b03      	ldr	r3, [pc, #12]	@ (8000d68 <delay_init+0x20>)
 8000d5a:	2205      	movs	r2, #5
 8000d5c:	601a      	str	r2, [r3, #0]
}
 8000d5e:	bf00      	nop
 8000d60:	46bd      	mov	sp, r7
 8000d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d66:	4770      	bx	lr
 8000d68:	e000e010 	.word	0xe000e010

08000d6c <delay_us>:

void delay_us(uint32_t us) {
 8000d6c:	b480      	push	{r7}
 8000d6e:	b083      	sub	sp, #12
 8000d70:	af00      	add	r7, sp, #0
 8000d72:	6078      	str	r0, [r7, #4]
    while (us--) {
 8000d74:	e006      	b.n	8000d84 <delay_us+0x18>
        // Wait for COUNTFLAG to set (indicates 1us passed)
        while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk));
 8000d76:	bf00      	nop
 8000d78:	4b08      	ldr	r3, [pc, #32]	@ (8000d9c <delay_us+0x30>)
 8000d7a:	681b      	ldr	r3, [r3, #0]
 8000d7c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	d0f9      	beq.n	8000d78 <delay_us+0xc>
    while (us--) {
 8000d84:	687b      	ldr	r3, [r7, #4]
 8000d86:	1e5a      	subs	r2, r3, #1
 8000d88:	607a      	str	r2, [r7, #4]
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	d1f3      	bne.n	8000d76 <delay_us+0xa>
    }
}
 8000d8e:	bf00      	nop
 8000d90:	bf00      	nop
 8000d92:	370c      	adds	r7, #12
 8000d94:	46bd      	mov	sp, r7
 8000d96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d9a:	4770      	bx	lr
 8000d9c:	e000e010 	.word	0xe000e010

08000da0 <delay_ms>:

void delay_ms(uint32_t ms) {
 8000da0:	b580      	push	{r7, lr}
 8000da2:	b082      	sub	sp, #8
 8000da4:	af00      	add	r7, sp, #0
 8000da6:	6078      	str	r0, [r7, #4]
    while (ms--) {
 8000da8:	e003      	b.n	8000db2 <delay_ms+0x12>
        delay_us(1000);
 8000daa:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000dae:	f7ff ffdd 	bl	8000d6c <delay_us>
    while (ms--) {
 8000db2:	687b      	ldr	r3, [r7, #4]
 8000db4:	1e5a      	subs	r2, r3, #1
 8000db6:	607a      	str	r2, [r7, #4]
 8000db8:	2b00      	cmp	r3, #0
 8000dba:	d1f6      	bne.n	8000daa <delay_ms+0xa>
    }
}
 8000dbc:	bf00      	nop
 8000dbe:	bf00      	nop
 8000dc0:	3708      	adds	r7, #8
 8000dc2:	46bd      	mov	sp, r7
 8000dc4:	bd80      	pop	{r7, pc}

08000dc6 <i2c_delay>:

#define I2C_GPIO GPIOB
#define SDA_PIN 7
#define SCL_PIN 6

static void i2c_delay(void) {
 8000dc6:	b580      	push	{r7, lr}
 8000dc8:	af00      	add	r7, sp, #0
    delay_us(5); // ~100 kHz I2C
 8000dca:	2005      	movs	r0, #5
 8000dcc:	f7ff ffce 	bl	8000d6c <delay_us>
}
 8000dd0:	bf00      	nop
 8000dd2:	bd80      	pop	{r7, pc}

08000dd4 <sda_output>:

static void sda_output(void) {
 8000dd4:	b480      	push	{r7}
 8000dd6:	af00      	add	r7, sp, #0
    I2C_GPIO->MODER &= ~(3U << (2 * SDA_PIN));
 8000dd8:	4b08      	ldr	r3, [pc, #32]	@ (8000dfc <sda_output+0x28>)
 8000dda:	681b      	ldr	r3, [r3, #0]
 8000ddc:	4a07      	ldr	r2, [pc, #28]	@ (8000dfc <sda_output+0x28>)
 8000dde:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000de2:	6013      	str	r3, [r2, #0]
    I2C_GPIO->MODER |=  (1U << (2 * SDA_PIN)); // Output
 8000de4:	4b05      	ldr	r3, [pc, #20]	@ (8000dfc <sda_output+0x28>)
 8000de6:	681b      	ldr	r3, [r3, #0]
 8000de8:	4a04      	ldr	r2, [pc, #16]	@ (8000dfc <sda_output+0x28>)
 8000dea:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000dee:	6013      	str	r3, [r2, #0]
}
 8000df0:	bf00      	nop
 8000df2:	46bd      	mov	sp, r7
 8000df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000df8:	4770      	bx	lr
 8000dfa:	bf00      	nop
 8000dfc:	40020400 	.word	0x40020400

08000e00 <sda_input>:

static void sda_input(void) {
 8000e00:	b480      	push	{r7}
 8000e02:	af00      	add	r7, sp, #0
    I2C_GPIO->MODER &= ~(3U << (2 * SDA_PIN)); // Input
 8000e04:	4b05      	ldr	r3, [pc, #20]	@ (8000e1c <sda_input+0x1c>)
 8000e06:	681b      	ldr	r3, [r3, #0]
 8000e08:	4a04      	ldr	r2, [pc, #16]	@ (8000e1c <sda_input+0x1c>)
 8000e0a:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000e0e:	6013      	str	r3, [r2, #0]
}
 8000e10:	bf00      	nop
 8000e12:	46bd      	mov	sp, r7
 8000e14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e18:	4770      	bx	lr
 8000e1a:	bf00      	nop
 8000e1c:	40020400 	.word	0x40020400

08000e20 <scl_high>:

static void scl_high(void) {
 8000e20:	b480      	push	{r7}
 8000e22:	af00      	add	r7, sp, #0
    I2C_GPIO->BSRR = (1U << SCL_PIN);
 8000e24:	4b03      	ldr	r3, [pc, #12]	@ (8000e34 <scl_high+0x14>)
 8000e26:	2240      	movs	r2, #64	@ 0x40
 8000e28:	619a      	str	r2, [r3, #24]
}
 8000e2a:	bf00      	nop
 8000e2c:	46bd      	mov	sp, r7
 8000e2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e32:	4770      	bx	lr
 8000e34:	40020400 	.word	0x40020400

08000e38 <scl_low>:

static void scl_low(void) {
 8000e38:	b480      	push	{r7}
 8000e3a:	af00      	add	r7, sp, #0
    I2C_GPIO->BSRR = (1U << (SCL_PIN + 16));
 8000e3c:	4b04      	ldr	r3, [pc, #16]	@ (8000e50 <scl_low+0x18>)
 8000e3e:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8000e42:	619a      	str	r2, [r3, #24]
}
 8000e44:	bf00      	nop
 8000e46:	46bd      	mov	sp, r7
 8000e48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e4c:	4770      	bx	lr
 8000e4e:	bf00      	nop
 8000e50:	40020400 	.word	0x40020400

08000e54 <sda_high>:

static void sda_high(void) {
 8000e54:	b480      	push	{r7}
 8000e56:	af00      	add	r7, sp, #0
    I2C_GPIO->BSRR = (1U << SDA_PIN);
 8000e58:	4b03      	ldr	r3, [pc, #12]	@ (8000e68 <sda_high+0x14>)
 8000e5a:	2280      	movs	r2, #128	@ 0x80
 8000e5c:	619a      	str	r2, [r3, #24]
}
 8000e5e:	bf00      	nop
 8000e60:	46bd      	mov	sp, r7
 8000e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e66:	4770      	bx	lr
 8000e68:	40020400 	.word	0x40020400

08000e6c <sda_low>:

static void sda_low(void) {
 8000e6c:	b480      	push	{r7}
 8000e6e:	af00      	add	r7, sp, #0
    I2C_GPIO->BSRR = (1U << (SDA_PIN + 16));
 8000e70:	4b04      	ldr	r3, [pc, #16]	@ (8000e84 <sda_low+0x18>)
 8000e72:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000e76:	619a      	str	r2, [r3, #24]
}
 8000e78:	bf00      	nop
 8000e7a:	46bd      	mov	sp, r7
 8000e7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e80:	4770      	bx	lr
 8000e82:	bf00      	nop
 8000e84:	40020400 	.word	0x40020400

08000e88 <i2c_init>:

void i2c_init(void) {
 8000e88:	b580      	push	{r7, lr}
 8000e8a:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000e8c:	4b14      	ldr	r3, [pc, #80]	@ (8000ee0 <i2c_init+0x58>)
 8000e8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e90:	4a13      	ldr	r2, [pc, #76]	@ (8000ee0 <i2c_init+0x58>)
 8000e92:	f043 0302 	orr.w	r3, r3, #2
 8000e96:	6313      	str	r3, [r2, #48]	@ 0x30

    I2C_GPIO->MODER &= ~((3U << (2 * SDA_PIN)) | (3U << (2 * SCL_PIN)));
 8000e98:	4b12      	ldr	r3, [pc, #72]	@ (8000ee4 <i2c_init+0x5c>)
 8000e9a:	681b      	ldr	r3, [r3, #0]
 8000e9c:	4a11      	ldr	r2, [pc, #68]	@ (8000ee4 <i2c_init+0x5c>)
 8000e9e:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8000ea2:	6013      	str	r3, [r2, #0]
    I2C_GPIO->MODER |=  ((1U << (2 * SDA_PIN)) | (1U << (2 * SCL_PIN))); // Output
 8000ea4:	4b0f      	ldr	r3, [pc, #60]	@ (8000ee4 <i2c_init+0x5c>)
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	4a0e      	ldr	r2, [pc, #56]	@ (8000ee4 <i2c_init+0x5c>)
 8000eaa:	f443 43a0 	orr.w	r3, r3, #20480	@ 0x5000
 8000eae:	6013      	str	r3, [r2, #0]

    I2C_GPIO->OTYPER |= (1U << SDA_PIN) | (1U << SCL_PIN);  // Open-drain
 8000eb0:	4b0c      	ldr	r3, [pc, #48]	@ (8000ee4 <i2c_init+0x5c>)
 8000eb2:	685b      	ldr	r3, [r3, #4]
 8000eb4:	4a0b      	ldr	r2, [pc, #44]	@ (8000ee4 <i2c_init+0x5c>)
 8000eb6:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8000eba:	6053      	str	r3, [r2, #4]
    I2C_GPIO->PUPDR &= ~((3U << (2 * SDA_PIN)) | (3U << (2 * SCL_PIN))); // No pull
 8000ebc:	4b09      	ldr	r3, [pc, #36]	@ (8000ee4 <i2c_init+0x5c>)
 8000ebe:	68db      	ldr	r3, [r3, #12]
 8000ec0:	4a08      	ldr	r2, [pc, #32]	@ (8000ee4 <i2c_init+0x5c>)
 8000ec2:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8000ec6:	60d3      	str	r3, [r2, #12]
    I2C_GPIO->PUPDR |=  ((1U << (2 * SDA_PIN)) | (1U << (2 * SCL_PIN))); // Pull-up
 8000ec8:	4b06      	ldr	r3, [pc, #24]	@ (8000ee4 <i2c_init+0x5c>)
 8000eca:	68db      	ldr	r3, [r3, #12]
 8000ecc:	4a05      	ldr	r2, [pc, #20]	@ (8000ee4 <i2c_init+0x5c>)
 8000ece:	f443 43a0 	orr.w	r3, r3, #20480	@ 0x5000
 8000ed2:	60d3      	str	r3, [r2, #12]

    sda_high();
 8000ed4:	f7ff ffbe 	bl	8000e54 <sda_high>
    scl_high();
 8000ed8:	f7ff ffa2 	bl	8000e20 <scl_high>
}
 8000edc:	bf00      	nop
 8000ede:	bd80      	pop	{r7, pc}
 8000ee0:	40023800 	.word	0x40023800
 8000ee4:	40020400 	.word	0x40020400

08000ee8 <i2c_start>:

void i2c_start(void) {
 8000ee8:	b580      	push	{r7, lr}
 8000eea:	af00      	add	r7, sp, #0
    sda_high(); scl_high(); i2c_delay();
 8000eec:	f7ff ffb2 	bl	8000e54 <sda_high>
 8000ef0:	f7ff ff96 	bl	8000e20 <scl_high>
 8000ef4:	f7ff ff67 	bl	8000dc6 <i2c_delay>
    sda_low();  i2c_delay();
 8000ef8:	f7ff ffb8 	bl	8000e6c <sda_low>
 8000efc:	f7ff ff63 	bl	8000dc6 <i2c_delay>
    scl_low();  i2c_delay();
 8000f00:	f7ff ff9a 	bl	8000e38 <scl_low>
 8000f04:	f7ff ff5f 	bl	8000dc6 <i2c_delay>
}
 8000f08:	bf00      	nop
 8000f0a:	bd80      	pop	{r7, pc}

08000f0c <i2c_stop>:

void i2c_stop(void) {
 8000f0c:	b580      	push	{r7, lr}
 8000f0e:	af00      	add	r7, sp, #0
    scl_low();  sda_low(); i2c_delay();
 8000f10:	f7ff ff92 	bl	8000e38 <scl_low>
 8000f14:	f7ff ffaa 	bl	8000e6c <sda_low>
 8000f18:	f7ff ff55 	bl	8000dc6 <i2c_delay>
    scl_high(); i2c_delay();
 8000f1c:	f7ff ff80 	bl	8000e20 <scl_high>
 8000f20:	f7ff ff51 	bl	8000dc6 <i2c_delay>
    sda_high(); i2c_delay();
 8000f24:	f7ff ff96 	bl	8000e54 <sda_high>
 8000f28:	f7ff ff4d 	bl	8000dc6 <i2c_delay>
}
 8000f2c:	bf00      	nop
 8000f2e:	bd80      	pop	{r7, pc}

08000f30 <i2c_write>:

uint8_t i2c_write(uint8_t data) {
 8000f30:	b580      	push	{r7, lr}
 8000f32:	b084      	sub	sp, #16
 8000f34:	af00      	add	r7, sp, #0
 8000f36:	4603      	mov	r3, r0
 8000f38:	71fb      	strb	r3, [r7, #7]
    for (int i = 0; i < 8; i++) {
 8000f3a:	2300      	movs	r3, #0
 8000f3c:	60fb      	str	r3, [r7, #12]
 8000f3e:	e016      	b.n	8000f6e <i2c_write+0x3e>
        if (data & 0x80) sda_high(); else sda_low();
 8000f40:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f44:	2b00      	cmp	r3, #0
 8000f46:	da02      	bge.n	8000f4e <i2c_write+0x1e>
 8000f48:	f7ff ff84 	bl	8000e54 <sda_high>
 8000f4c:	e001      	b.n	8000f52 <i2c_write+0x22>
 8000f4e:	f7ff ff8d 	bl	8000e6c <sda_low>
        scl_high(); i2c_delay();
 8000f52:	f7ff ff65 	bl	8000e20 <scl_high>
 8000f56:	f7ff ff36 	bl	8000dc6 <i2c_delay>
        scl_low();  i2c_delay();
 8000f5a:	f7ff ff6d 	bl	8000e38 <scl_low>
 8000f5e:	f7ff ff32 	bl	8000dc6 <i2c_delay>
        data <<= 1;
 8000f62:	79fb      	ldrb	r3, [r7, #7]
 8000f64:	005b      	lsls	r3, r3, #1
 8000f66:	71fb      	strb	r3, [r7, #7]
    for (int i = 0; i < 8; i++) {
 8000f68:	68fb      	ldr	r3, [r7, #12]
 8000f6a:	3301      	adds	r3, #1
 8000f6c:	60fb      	str	r3, [r7, #12]
 8000f6e:	68fb      	ldr	r3, [r7, #12]
 8000f70:	2b07      	cmp	r3, #7
 8000f72:	dde5      	ble.n	8000f40 <i2c_write+0x10>
    }

    // ACK bit
    sda_input(); scl_high(); i2c_delay();
 8000f74:	f7ff ff44 	bl	8000e00 <sda_input>
 8000f78:	f7ff ff52 	bl	8000e20 <scl_high>
 8000f7c:	f7ff ff23 	bl	8000dc6 <i2c_delay>
    uint8_t ack = !(I2C_GPIO->IDR & (1U << SDA_PIN));
 8000f80:	4b0a      	ldr	r3, [pc, #40]	@ (8000fac <i2c_write+0x7c>)
 8000f82:	691b      	ldr	r3, [r3, #16]
 8000f84:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000f88:	2b00      	cmp	r3, #0
 8000f8a:	bf0c      	ite	eq
 8000f8c:	2301      	moveq	r3, #1
 8000f8e:	2300      	movne	r3, #0
 8000f90:	b2db      	uxtb	r3, r3
 8000f92:	72fb      	strb	r3, [r7, #11]
    scl_low(); sda_output(); i2c_delay();
 8000f94:	f7ff ff50 	bl	8000e38 <scl_low>
 8000f98:	f7ff ff1c 	bl	8000dd4 <sda_output>
 8000f9c:	f7ff ff13 	bl	8000dc6 <i2c_delay>
    return ack;
 8000fa0:	7afb      	ldrb	r3, [r7, #11]
}
 8000fa2:	4618      	mov	r0, r3
 8000fa4:	3710      	adds	r7, #16
 8000fa6:	46bd      	mov	sp, r7
 8000fa8:	bd80      	pop	{r7, pc}
 8000faa:	bf00      	nop
 8000fac:	40020400 	.word	0x40020400

08000fb0 <i2c_restart>:

void i2c_restart(void) {
 8000fb0:	b580      	push	{r7, lr}
 8000fb2:	af00      	add	r7, sp, #0
    sda_high(); scl_high(); i2c_delay();  // Release lines
 8000fb4:	f7ff ff4e 	bl	8000e54 <sda_high>
 8000fb8:	f7ff ff32 	bl	8000e20 <scl_high>
 8000fbc:	f7ff ff03 	bl	8000dc6 <i2c_delay>
    sda_low();  i2c_delay();              // Start condition again
 8000fc0:	f7ff ff54 	bl	8000e6c <sda_low>
 8000fc4:	f7ff feff 	bl	8000dc6 <i2c_delay>
    scl_low();  i2c_delay();
 8000fc8:	f7ff ff36 	bl	8000e38 <scl_low>
 8000fcc:	f7ff fefb 	bl	8000dc6 <i2c_delay>
}
 8000fd0:	bf00      	nop
 8000fd2:	bd80      	pop	{r7, pc}

08000fd4 <i2c_read_ack>:

uint8_t i2c_read_ack(void) {
 8000fd4:	b580      	push	{r7, lr}
 8000fd6:	b082      	sub	sp, #8
 8000fd8:	af00      	add	r7, sp, #0
    uint8_t data = 0;
 8000fda:	2300      	movs	r3, #0
 8000fdc:	71fb      	strb	r3, [r7, #7]
    // Read one byte and ACK
    for (int i = 0; i < 8; i++) {
 8000fde:	2300      	movs	r3, #0
 8000fe0:	603b      	str	r3, [r7, #0]
 8000fe2:	e018      	b.n	8001016 <i2c_read_ack+0x42>
        scl_high(); delay_us(2);
 8000fe4:	f7ff ff1c 	bl	8000e20 <scl_high>
 8000fe8:	2002      	movs	r0, #2
 8000fea:	f7ff febf 	bl	8000d6c <delay_us>
        data = (data << 1) | ((GPIOB->IDR >> 7) & 0x01); // SDA on PB7
 8000fee:	79fb      	ldrb	r3, [r7, #7]
 8000ff0:	005b      	lsls	r3, r3, #1
 8000ff2:	b2da      	uxtb	r2, r3
 8000ff4:	4b14      	ldr	r3, [pc, #80]	@ (8001048 <i2c_read_ack+0x74>)
 8000ff6:	691b      	ldr	r3, [r3, #16]
 8000ff8:	09db      	lsrs	r3, r3, #7
 8000ffa:	b2db      	uxtb	r3, r3
 8000ffc:	f003 0301 	and.w	r3, r3, #1
 8001000:	b2db      	uxtb	r3, r3
 8001002:	4313      	orrs	r3, r2
 8001004:	71fb      	strb	r3, [r7, #7]
        scl_low(); delay_us(2);
 8001006:	f7ff ff17 	bl	8000e38 <scl_low>
 800100a:	2002      	movs	r0, #2
 800100c:	f7ff feae 	bl	8000d6c <delay_us>
    for (int i = 0; i < 8; i++) {
 8001010:	683b      	ldr	r3, [r7, #0]
 8001012:	3301      	adds	r3, #1
 8001014:	603b      	str	r3, [r7, #0]
 8001016:	683b      	ldr	r3, [r7, #0]
 8001018:	2b07      	cmp	r3, #7
 800101a:	dde3      	ble.n	8000fe4 <i2c_read_ack+0x10>
    }
    // Send ACK
    sda_output(); sda_low();
 800101c:	f7ff feda 	bl	8000dd4 <sda_output>
 8001020:	f7ff ff24 	bl	8000e6c <sda_low>
    scl_high(); delay_us(2);
 8001024:	f7ff fefc 	bl	8000e20 <scl_high>
 8001028:	2002      	movs	r0, #2
 800102a:	f7ff fe9f 	bl	8000d6c <delay_us>
    scl_low(); delay_us(2);
 800102e:	f7ff ff03 	bl	8000e38 <scl_low>
 8001032:	2002      	movs	r0, #2
 8001034:	f7ff fe9a 	bl	8000d6c <delay_us>
    sda_high();  // Release
 8001038:	f7ff ff0c 	bl	8000e54 <sda_high>
    return data;
 800103c:	79fb      	ldrb	r3, [r7, #7]
}
 800103e:	4618      	mov	r0, r3
 8001040:	3708      	adds	r7, #8
 8001042:	46bd      	mov	sp, r7
 8001044:	bd80      	pop	{r7, pc}
 8001046:	bf00      	nop
 8001048:	40020400 	.word	0x40020400

0800104c <i2c_read_nack>:

uint8_t i2c_read_nack(void) {
 800104c:	b580      	push	{r7, lr}
 800104e:	b082      	sub	sp, #8
 8001050:	af00      	add	r7, sp, #0
    uint8_t data = 0;
 8001052:	2300      	movs	r3, #0
 8001054:	71fb      	strb	r3, [r7, #7]
    // Read one byte and NACK
    for (int i = 0; i < 8; i++) {
 8001056:	2300      	movs	r3, #0
 8001058:	603b      	str	r3, [r7, #0]
 800105a:	e018      	b.n	800108e <i2c_read_nack+0x42>
        scl_high(); delay_us(2);
 800105c:	f7ff fee0 	bl	8000e20 <scl_high>
 8001060:	2002      	movs	r0, #2
 8001062:	f7ff fe83 	bl	8000d6c <delay_us>
        data = (data << 1) | ((GPIOB->IDR >> 7) & 0x01);
 8001066:	79fb      	ldrb	r3, [r7, #7]
 8001068:	005b      	lsls	r3, r3, #1
 800106a:	b2da      	uxtb	r2, r3
 800106c:	4b13      	ldr	r3, [pc, #76]	@ (80010bc <i2c_read_nack+0x70>)
 800106e:	691b      	ldr	r3, [r3, #16]
 8001070:	09db      	lsrs	r3, r3, #7
 8001072:	b2db      	uxtb	r3, r3
 8001074:	f003 0301 	and.w	r3, r3, #1
 8001078:	b2db      	uxtb	r3, r3
 800107a:	4313      	orrs	r3, r2
 800107c:	71fb      	strb	r3, [r7, #7]
        scl_low(); delay_us(2);
 800107e:	f7ff fedb 	bl	8000e38 <scl_low>
 8001082:	2002      	movs	r0, #2
 8001084:	f7ff fe72 	bl	8000d6c <delay_us>
    for (int i = 0; i < 8; i++) {
 8001088:	683b      	ldr	r3, [r7, #0]
 800108a:	3301      	adds	r3, #1
 800108c:	603b      	str	r3, [r7, #0]
 800108e:	683b      	ldr	r3, [r7, #0]
 8001090:	2b07      	cmp	r3, #7
 8001092:	dde3      	ble.n	800105c <i2c_read_nack+0x10>
    }
    // Send NACK
    sda_output(); sda_high();
 8001094:	f7ff fe9e 	bl	8000dd4 <sda_output>
 8001098:	f7ff fedc 	bl	8000e54 <sda_high>
    scl_high(); delay_us(2);
 800109c:	f7ff fec0 	bl	8000e20 <scl_high>
 80010a0:	2002      	movs	r0, #2
 80010a2:	f7ff fe63 	bl	8000d6c <delay_us>
    scl_low(); delay_us(2);
 80010a6:	f7ff fec7 	bl	8000e38 <scl_low>
 80010aa:	2002      	movs	r0, #2
 80010ac:	f7ff fe5e 	bl	8000d6c <delay_us>
    return data;
 80010b0:	79fb      	ldrb	r3, [r7, #7]
}
 80010b2:	4618      	mov	r0, r3
 80010b4:	3708      	adds	r7, #8
 80010b6:	46bd      	mov	sp, r7
 80010b8:	bd80      	pop	{r7, pc}
 80010ba:	bf00      	nop
 80010bc:	40020400 	.word	0x40020400

080010c0 <lcd_init>:
static void lcd_send_cmd(uint8_t cmd);
static void lcd_send_data(uint8_t data);
static void lcd_write_nibble(uint8_t nibble);
static void lcd_toggle(uint8_t data);

void lcd_init(void) {
 80010c0:	b580      	push	{r7, lr}
 80010c2:	af00      	add	r7, sp, #0
    i2c_init();
 80010c4:	f7ff fee0 	bl	8000e88 <i2c_init>
    delay_ms(50);
 80010c8:	2032      	movs	r0, #50	@ 0x32
 80010ca:	f7ff fe69 	bl	8000da0 <delay_ms>

    lcd_write_nibble(0x30);
 80010ce:	2030      	movs	r0, #48	@ 0x30
 80010d0:	f000 f896 	bl	8001200 <lcd_write_nibble>
    delay_ms(5);
 80010d4:	2005      	movs	r0, #5
 80010d6:	f7ff fe63 	bl	8000da0 <delay_ms>
    lcd_write_nibble(0x30);
 80010da:	2030      	movs	r0, #48	@ 0x30
 80010dc:	f000 f890 	bl	8001200 <lcd_write_nibble>
    delay_ms(5);
 80010e0:	2005      	movs	r0, #5
 80010e2:	f7ff fe5d 	bl	8000da0 <delay_ms>
    lcd_write_nibble(0x30);
 80010e6:	2030      	movs	r0, #48	@ 0x30
 80010e8:	f000 f88a 	bl	8001200 <lcd_write_nibble>
    delay_ms(1);
 80010ec:	2001      	movs	r0, #1
 80010ee:	f7ff fe57 	bl	8000da0 <delay_ms>
    lcd_write_nibble(0x20);  // 4-bit mode
 80010f2:	2020      	movs	r0, #32
 80010f4:	f000 f884 	bl	8001200 <lcd_write_nibble>

    lcd_send_cmd(0x28);  // 2 lines, 5x8
 80010f8:	2028      	movs	r0, #40	@ 0x28
 80010fa:	f000 f84c 	bl	8001196 <lcd_send_cmd>
    lcd_send_cmd(0x0C);  // Display on, cursor off
 80010fe:	200c      	movs	r0, #12
 8001100:	f000 f849 	bl	8001196 <lcd_send_cmd>
    lcd_send_cmd(0x06);  // Increment
 8001104:	2006      	movs	r0, #6
 8001106:	f000 f846 	bl	8001196 <lcd_send_cmd>
    lcd_clear();
 800110a:	f000 f802 	bl	8001112 <lcd_clear>
}
 800110e:	bf00      	nop
 8001110:	bd80      	pop	{r7, pc}

08001112 <lcd_clear>:

void lcd_clear(void) {
 8001112:	b580      	push	{r7, lr}
 8001114:	af00      	add	r7, sp, #0
    lcd_send_cmd(0x01);
 8001116:	2001      	movs	r0, #1
 8001118:	f000 f83d 	bl	8001196 <lcd_send_cmd>
    delay_ms(2);  // Required
 800111c:	2002      	movs	r0, #2
 800111e:	f7ff fe3f 	bl	8000da0 <delay_ms>
}
 8001122:	bf00      	nop
 8001124:	bd80      	pop	{r7, pc}
	...

08001128 <lcd_set_cursor>:

void lcd_set_cursor(uint8_t row, uint8_t col) {
 8001128:	b580      	push	{r7, lr}
 800112a:	b084      	sub	sp, #16
 800112c:	af00      	add	r7, sp, #0
 800112e:	4603      	mov	r3, r0
 8001130:	460a      	mov	r2, r1
 8001132:	71fb      	strb	r3, [r7, #7]
 8001134:	4613      	mov	r3, r2
 8001136:	71bb      	strb	r3, [r7, #6]
    const uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 8001138:	4b0b      	ldr	r3, [pc, #44]	@ (8001168 <lcd_set_cursor+0x40>)
 800113a:	60fb      	str	r3, [r7, #12]
    lcd_send_cmd(0x80 | (col + row_offsets[row % 2]));
 800113c:	79fb      	ldrb	r3, [r7, #7]
 800113e:	f003 0301 	and.w	r3, r3, #1
 8001142:	3310      	adds	r3, #16
 8001144:	443b      	add	r3, r7
 8001146:	f813 2c04 	ldrb.w	r2, [r3, #-4]
 800114a:	79bb      	ldrb	r3, [r7, #6]
 800114c:	4413      	add	r3, r2
 800114e:	b2db      	uxtb	r3, r3
 8001150:	b25b      	sxtb	r3, r3
 8001152:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001156:	b25b      	sxtb	r3, r3
 8001158:	b2db      	uxtb	r3, r3
 800115a:	4618      	mov	r0, r3
 800115c:	f000 f81b 	bl	8001196 <lcd_send_cmd>
}
 8001160:	bf00      	nop
 8001162:	3710      	adds	r7, #16
 8001164:	46bd      	mov	sp, r7
 8001166:	bd80      	pop	{r7, pc}
 8001168:	54144000 	.word	0x54144000

0800116c <lcd_send_string>:

void lcd_send_string(const char* str) {
 800116c:	b580      	push	{r7, lr}
 800116e:	b082      	sub	sp, #8
 8001170:	af00      	add	r7, sp, #0
 8001172:	6078      	str	r0, [r7, #4]
    while (*str) {
 8001174:	e006      	b.n	8001184 <lcd_send_string+0x18>
        lcd_send_data(*str++);
 8001176:	687b      	ldr	r3, [r7, #4]
 8001178:	1c5a      	adds	r2, r3, #1
 800117a:	607a      	str	r2, [r7, #4]
 800117c:	781b      	ldrb	r3, [r3, #0]
 800117e:	4618      	mov	r0, r3
 8001180:	f000 f81f 	bl	80011c2 <lcd_send_data>
    while (*str) {
 8001184:	687b      	ldr	r3, [r7, #4]
 8001186:	781b      	ldrb	r3, [r3, #0]
 8001188:	2b00      	cmp	r3, #0
 800118a:	d1f4      	bne.n	8001176 <lcd_send_string+0xa>
    }
}
 800118c:	bf00      	nop
 800118e:	bf00      	nop
 8001190:	3708      	adds	r7, #8
 8001192:	46bd      	mov	sp, r7
 8001194:	bd80      	pop	{r7, pc}

08001196 <lcd_send_cmd>:

static void lcd_send_cmd(uint8_t cmd) {
 8001196:	b580      	push	{r7, lr}
 8001198:	b082      	sub	sp, #8
 800119a:	af00      	add	r7, sp, #0
 800119c:	4603      	mov	r3, r0
 800119e:	71fb      	strb	r3, [r7, #7]
    lcd_write_nibble((cmd & 0xF0));
 80011a0:	79fb      	ldrb	r3, [r7, #7]
 80011a2:	f023 030f 	bic.w	r3, r3, #15
 80011a6:	b2db      	uxtb	r3, r3
 80011a8:	4618      	mov	r0, r3
 80011aa:	f000 f829 	bl	8001200 <lcd_write_nibble>
    lcd_write_nibble((cmd << 4));
 80011ae:	79fb      	ldrb	r3, [r7, #7]
 80011b0:	011b      	lsls	r3, r3, #4
 80011b2:	b2db      	uxtb	r3, r3
 80011b4:	4618      	mov	r0, r3
 80011b6:	f000 f823 	bl	8001200 <lcd_write_nibble>
}
 80011ba:	bf00      	nop
 80011bc:	3708      	adds	r7, #8
 80011be:	46bd      	mov	sp, r7
 80011c0:	bd80      	pop	{r7, pc}

080011c2 <lcd_send_data>:

static void lcd_send_data(uint8_t data) {
 80011c2:	b580      	push	{r7, lr}
 80011c4:	b082      	sub	sp, #8
 80011c6:	af00      	add	r7, sp, #0
 80011c8:	4603      	mov	r3, r0
 80011ca:	71fb      	strb	r3, [r7, #7]
    lcd_write_nibble((data & 0xF0) | LCD_RS);
 80011cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011d0:	f023 030f 	bic.w	r3, r3, #15
 80011d4:	b25b      	sxtb	r3, r3
 80011d6:	f043 0301 	orr.w	r3, r3, #1
 80011da:	b25b      	sxtb	r3, r3
 80011dc:	b2db      	uxtb	r3, r3
 80011de:	4618      	mov	r0, r3
 80011e0:	f000 f80e 	bl	8001200 <lcd_write_nibble>
    lcd_write_nibble((data << 4)  | LCD_RS);
 80011e4:	79fb      	ldrb	r3, [r7, #7]
 80011e6:	011b      	lsls	r3, r3, #4
 80011e8:	b25b      	sxtb	r3, r3
 80011ea:	f043 0301 	orr.w	r3, r3, #1
 80011ee:	b25b      	sxtb	r3, r3
 80011f0:	b2db      	uxtb	r3, r3
 80011f2:	4618      	mov	r0, r3
 80011f4:	f000 f804 	bl	8001200 <lcd_write_nibble>
}
 80011f8:	bf00      	nop
 80011fa:	3708      	adds	r7, #8
 80011fc:	46bd      	mov	sp, r7
 80011fe:	bd80      	pop	{r7, pc}

08001200 <lcd_write_nibble>:

static void lcd_write_nibble(uint8_t nibble) {
 8001200:	b580      	push	{r7, lr}
 8001202:	b082      	sub	sp, #8
 8001204:	af00      	add	r7, sp, #0
 8001206:	4603      	mov	r3, r0
 8001208:	71fb      	strb	r3, [r7, #7]
    lcd_toggle(nibble | LCD_BL);  // Backlight always on
 800120a:	79fb      	ldrb	r3, [r7, #7]
 800120c:	f043 0308 	orr.w	r3, r3, #8
 8001210:	b2db      	uxtb	r3, r3
 8001212:	4618      	mov	r0, r3
 8001214:	f000 f804 	bl	8001220 <lcd_toggle>
}
 8001218:	bf00      	nop
 800121a:	3708      	adds	r7, #8
 800121c:	46bd      	mov	sp, r7
 800121e:	bd80      	pop	{r7, pc}

08001220 <lcd_toggle>:

static void lcd_toggle(uint8_t data) {
 8001220:	b580      	push	{r7, lr}
 8001222:	b082      	sub	sp, #8
 8001224:	af00      	add	r7, sp, #0
 8001226:	4603      	mov	r3, r0
 8001228:	71fb      	strb	r3, [r7, #7]
    i2c_start();
 800122a:	f7ff fe5d 	bl	8000ee8 <i2c_start>
    i2c_write(LCD_ADDR);
 800122e:	204e      	movs	r0, #78	@ 0x4e
 8001230:	f7ff fe7e 	bl	8000f30 <i2c_write>
    i2c_write(data | LCD_EN);  // EN=1
 8001234:	79fb      	ldrb	r3, [r7, #7]
 8001236:	f043 0304 	orr.w	r3, r3, #4
 800123a:	b2db      	uxtb	r3, r3
 800123c:	4618      	mov	r0, r3
 800123e:	f7ff fe77 	bl	8000f30 <i2c_write>
    delay_us(1);
 8001242:	2001      	movs	r0, #1
 8001244:	f7ff fd92 	bl	8000d6c <delay_us>
    i2c_write(data & ~LCD_EN); // EN=0
 8001248:	79fb      	ldrb	r3, [r7, #7]
 800124a:	f023 0304 	bic.w	r3, r3, #4
 800124e:	b2db      	uxtb	r3, r3
 8001250:	4618      	mov	r0, r3
 8001252:	f7ff fe6d 	bl	8000f30 <i2c_write>
    i2c_stop();
 8001256:	f7ff fe59 	bl	8000f0c <i2c_stop>
    delay_us(50);  // Wait for command
 800125a:	2032      	movs	r0, #50	@ 0x32
 800125c:	f7ff fd86 	bl	8000d6c <delay_us>
}
 8001260:	bf00      	nop
 8001262:	3708      	adds	r7, #8
 8001264:	46bd      	mov	sp, r7
 8001266:	bd80      	pop	{r7, pc}

08001268 <thermistor_get_temp>:

RTC_Time current_time;

// Convert ADC reading to temperature (Celsius)
float thermistor_get_temp(uint16_t adc_val)
{
 8001268:	b5b0      	push	{r4, r5, r7, lr}
 800126a:	b086      	sub	sp, #24
 800126c:	af00      	add	r7, sp, #0
 800126e:	4603      	mov	r3, r0
 8001270:	80fb      	strh	r3, [r7, #6]
    float vout = (adc_val / 4095.0f) * VREF;
 8001272:	88fb      	ldrh	r3, [r7, #6]
 8001274:	ee07 3a90 	vmov	s15, r3
 8001278:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800127c:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 8001388 <thermistor_get_temp+0x120>
 8001280:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8001284:	ee16 0a90 	vmov	r0, s13
 8001288:	f7ff f97e 	bl	8000588 <__aeabi_f2d>
 800128c:	a336      	add	r3, pc, #216	@ (adr r3, 8001368 <thermistor_get_temp+0x100>)
 800128e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001292:	f7ff f9d1 	bl	8000638 <__aeabi_dmul>
 8001296:	4602      	mov	r2, r0
 8001298:	460b      	mov	r3, r1
 800129a:	4610      	mov	r0, r2
 800129c:	4619      	mov	r1, r3
 800129e:	f7ff fca3 	bl	8000be8 <__aeabi_d2f>
 80012a2:	4603      	mov	r3, r0
 80012a4:	617b      	str	r3, [r7, #20]
    float r_thermistor = (R_FIXED * vout) / (VREF - vout);
 80012a6:	6978      	ldr	r0, [r7, #20]
 80012a8:	f7ff f96e 	bl	8000588 <__aeabi_f2d>
 80012ac:	a330      	add	r3, pc, #192	@ (adr r3, 8001370 <thermistor_get_temp+0x108>)
 80012ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012b2:	f7ff f9c1 	bl	8000638 <__aeabi_dmul>
 80012b6:	4602      	mov	r2, r0
 80012b8:	460b      	mov	r3, r1
 80012ba:	4614      	mov	r4, r2
 80012bc:	461d      	mov	r5, r3
 80012be:	6978      	ldr	r0, [r7, #20]
 80012c0:	f7ff f962 	bl	8000588 <__aeabi_f2d>
 80012c4:	4602      	mov	r2, r0
 80012c6:	460b      	mov	r3, r1
 80012c8:	a127      	add	r1, pc, #156	@ (adr r1, 8001368 <thermistor_get_temp+0x100>)
 80012ca:	e9d1 0100 	ldrd	r0, r1, [r1]
 80012ce:	f7fe fffb 	bl	80002c8 <__aeabi_dsub>
 80012d2:	4602      	mov	r2, r0
 80012d4:	460b      	mov	r3, r1
 80012d6:	4620      	mov	r0, r4
 80012d8:	4629      	mov	r1, r5
 80012da:	f7ff fad7 	bl	800088c <__aeabi_ddiv>
 80012de:	4602      	mov	r2, r0
 80012e0:	460b      	mov	r3, r1
 80012e2:	4610      	mov	r0, r2
 80012e4:	4619      	mov	r1, r3
 80012e6:	f7ff fc7f 	bl	8000be8 <__aeabi_d2f>
 80012ea:	4603      	mov	r3, r0
 80012ec:	613b      	str	r3, [r7, #16]

    float tempK = 1.0f / (1.0f / T0 + logf(r_thermistor / R0) / BETA);
 80012ee:	edd7 7a04 	vldr	s15, [r7, #16]
 80012f2:	eddf 6a26 	vldr	s13, [pc, #152]	@ 800138c <thermistor_get_temp+0x124>
 80012f6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80012fa:	eeb0 0a47 	vmov.f32	s0, s14
 80012fe:	f003 f933 	bl	8004568 <logf>
 8001302:	ee10 3a10 	vmov	r3, s0
 8001306:	4618      	mov	r0, r3
 8001308:	f7ff f93e 	bl	8000588 <__aeabi_f2d>
 800130c:	a31a      	add	r3, pc, #104	@ (adr r3, 8001378 <thermistor_get_temp+0x110>)
 800130e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001312:	f7ff fabb 	bl	800088c <__aeabi_ddiv>
 8001316:	4602      	mov	r2, r0
 8001318:	460b      	mov	r3, r1
 800131a:	4610      	mov	r0, r2
 800131c:	4619      	mov	r1, r3
 800131e:	a318      	add	r3, pc, #96	@ (adr r3, 8001380 <thermistor_get_temp+0x118>)
 8001320:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001324:	f7fe ffd2 	bl	80002cc <__adddf3>
 8001328:	4602      	mov	r2, r0
 800132a:	460b      	mov	r3, r1
 800132c:	f04f 0000 	mov.w	r0, #0
 8001330:	4917      	ldr	r1, [pc, #92]	@ (8001390 <thermistor_get_temp+0x128>)
 8001332:	f7ff faab 	bl	800088c <__aeabi_ddiv>
 8001336:	4602      	mov	r2, r0
 8001338:	460b      	mov	r3, r1
 800133a:	4610      	mov	r0, r2
 800133c:	4619      	mov	r1, r3
 800133e:	f7ff fc53 	bl	8000be8 <__aeabi_d2f>
 8001342:	4603      	mov	r3, r0
 8001344:	60fb      	str	r3, [r7, #12]
    float tempC = tempK - 273.15f;
 8001346:	edd7 7a03 	vldr	s15, [r7, #12]
 800134a:	ed9f 7a12 	vldr	s14, [pc, #72]	@ 8001394 <thermistor_get_temp+0x12c>
 800134e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001352:	edc7 7a02 	vstr	s15, [r7, #8]

    return tempC;
 8001356:	68bb      	ldr	r3, [r7, #8]
 8001358:	ee07 3a90 	vmov	s15, r3
}
 800135c:	eeb0 0a67 	vmov.f32	s0, s15
 8001360:	3718      	adds	r7, #24
 8001362:	46bd      	mov	sp, r7
 8001364:	bdb0      	pop	{r4, r5, r7, pc}
 8001366:	bf00      	nop
 8001368:	66666666 	.word	0x66666666
 800136c:	400a6666 	.word	0x400a6666
 8001370:	00000000 	.word	0x00000000
 8001374:	40c38800 	.word	0x40c38800
 8001378:	00000000 	.word	0x00000000
 800137c:	40aedc00 	.word	0x40aedc00
 8001380:	dcb5db83 	.word	0xdcb5db83
 8001384:	3f6b79e1 	.word	0x3f6b79e1
 8001388:	457ff000 	.word	0x457ff000
 800138c:	461c4000 	.word	0x461c4000
 8001390:	3ff00000 	.word	0x3ff00000
 8001394:	43889333 	.word	0x43889333

08001398 <main>:

int main(void)
{
 8001398:	b580      	push	{r7, lr}
 800139a:	b086      	sub	sp, #24
 800139c:	af02      	add	r7, sp, #8
	SCB->CPACR |= (0xF << 20); //  Enable FPU
 800139e:	4b34      	ldr	r3, [pc, #208]	@ (8001470 <main+0xd8>)
 80013a0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80013a4:	4a32      	ldr	r2, [pc, #200]	@ (8001470 <main+0xd8>)
 80013a6:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80013aa:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

    uint16_t adc_val;
    float temperature;
    delay_init();      // if you use SysTick-based delay
 80013ae:	f7ff fccb 	bl	8000d48 <delay_init>

    lcd_init();
 80013b2:	f7ff fe85 	bl	80010c0 <lcd_init>

    //lcd_send_string("Hello!");

	uart2_init();
 80013b6:	f000 f86b 	bl	8001490 <uart2_init>
	adc_init();       // for thermistor
 80013ba:	f7ff fc65 	bl	8000c88 <adc_init>

	RTC_Time set_time = { .hours = 18, .minutes = 50, .seconds = 0 };
 80013be:	4a2d      	ldr	r2, [pc, #180]	@ (8001474 <main+0xdc>)
 80013c0:	1d3b      	adds	r3, r7, #4
 80013c2:	6812      	ldr	r2, [r2, #0]
 80013c4:	4611      	mov	r1, r2
 80013c6:	8019      	strh	r1, [r3, #0]
 80013c8:	3302      	adds	r3, #2
 80013ca:	0c12      	lsrs	r2, r2, #16
 80013cc:	701a      	strb	r2, [r3, #0]
	rtc_set_time(&set_time);
 80013ce:	1d3b      	adds	r3, r7, #4
 80013d0:	4618      	mov	r0, r3
 80013d2:	f000 f90b 	bl	80015ec <rtc_set_time>

    while (1)
    {
    	adc_val = adc_read(1);
 80013d6:	2001      	movs	r0, #1
 80013d8:	f7ff fc96 	bl	8000d08 <adc_read>
 80013dc:	4603      	mov	r3, r0
 80013de:	81fb      	strh	r3, [r7, #14]
    	temperature = thermistor_get_temp(adc_val);
 80013e0:	89fb      	ldrh	r3, [r7, #14]
 80013e2:	4618      	mov	r0, r3
 80013e4:	f7ff ff40 	bl	8001268 <thermistor_get_temp>
 80013e8:	ed87 0a02 	vstr	s0, [r7, #8]

    	rtc_get_time(&current_time);
 80013ec:	4822      	ldr	r0, [pc, #136]	@ (8001478 <main+0xe0>)
 80013ee:	f000 f8bc 	bl	800156a <rtc_get_time>

    	snprintf(buffer, sizeof(buffer), "Temp: %.2f C\n\r", temperature);
 80013f2:	68b8      	ldr	r0, [r7, #8]
 80013f4:	f7ff f8c8 	bl	8000588 <__aeabi_f2d>
 80013f8:	4602      	mov	r2, r0
 80013fa:	460b      	mov	r3, r1
 80013fc:	e9cd 2300 	strd	r2, r3, [sp]
 8001400:	4a1e      	ldr	r2, [pc, #120]	@ (800147c <main+0xe4>)
 8001402:	2140      	movs	r1, #64	@ 0x40
 8001404:	481e      	ldr	r0, [pc, #120]	@ (8001480 <main+0xe8>)
 8001406:	f000 ff6d 	bl	80022e4 <sniprintf>
    	uart2_print(buffer);
 800140a:	481d      	ldr	r0, [pc, #116]	@ (8001480 <main+0xe8>)
 800140c:	f000 f898 	bl	8001540 <uart2_print>

    	// First line: Temperature
    	lcd_set_cursor(0, 0);
 8001410:	2100      	movs	r1, #0
 8001412:	2000      	movs	r0, #0
 8001414:	f7ff fe88 	bl	8001128 <lcd_set_cursor>
    	snprintf(buffer, sizeof(buffer), "Temp: %.2f C", temperature);
 8001418:	68b8      	ldr	r0, [r7, #8]
 800141a:	f7ff f8b5 	bl	8000588 <__aeabi_f2d>
 800141e:	4602      	mov	r2, r0
 8001420:	460b      	mov	r3, r1
 8001422:	e9cd 2300 	strd	r2, r3, [sp]
 8001426:	4a17      	ldr	r2, [pc, #92]	@ (8001484 <main+0xec>)
 8001428:	2140      	movs	r1, #64	@ 0x40
 800142a:	4815      	ldr	r0, [pc, #84]	@ (8001480 <main+0xe8>)
 800142c:	f000 ff5a 	bl	80022e4 <sniprintf>
    	lcd_send_string(buffer);
 8001430:	4813      	ldr	r0, [pc, #76]	@ (8001480 <main+0xe8>)
 8001432:	f7ff fe9b 	bl	800116c <lcd_send_string>

    	// Second line: Time
    	lcd_set_cursor(1, 0);
 8001436:	2100      	movs	r1, #0
 8001438:	2001      	movs	r0, #1
 800143a:	f7ff fe75 	bl	8001128 <lcd_set_cursor>
    	snprintf(time_buf, sizeof(time_buf), "%02d:%02d:%02d",
    	         current_time.hours,
 800143e:	4b0e      	ldr	r3, [pc, #56]	@ (8001478 <main+0xe0>)
 8001440:	781b      	ldrb	r3, [r3, #0]
    	snprintf(time_buf, sizeof(time_buf), "%02d:%02d:%02d",
 8001442:	4619      	mov	r1, r3
    	         current_time.minutes,
 8001444:	4b0c      	ldr	r3, [pc, #48]	@ (8001478 <main+0xe0>)
 8001446:	785b      	ldrb	r3, [r3, #1]
    	snprintf(time_buf, sizeof(time_buf), "%02d:%02d:%02d",
 8001448:	461a      	mov	r2, r3
    	         current_time.seconds);
 800144a:	4b0b      	ldr	r3, [pc, #44]	@ (8001478 <main+0xe0>)
 800144c:	789b      	ldrb	r3, [r3, #2]
    	snprintf(time_buf, sizeof(time_buf), "%02d:%02d:%02d",
 800144e:	9301      	str	r3, [sp, #4]
 8001450:	9200      	str	r2, [sp, #0]
 8001452:	460b      	mov	r3, r1
 8001454:	4a0c      	ldr	r2, [pc, #48]	@ (8001488 <main+0xf0>)
 8001456:	2110      	movs	r1, #16
 8001458:	480c      	ldr	r0, [pc, #48]	@ (800148c <main+0xf4>)
 800145a:	f000 ff43 	bl	80022e4 <sniprintf>
    	lcd_send_string(time_buf);
 800145e:	480b      	ldr	r0, [pc, #44]	@ (800148c <main+0xf4>)
 8001460:	f7ff fe84 	bl	800116c <lcd_send_string>

    	delay_ms(1000);
 8001464:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001468:	f7ff fc9a 	bl	8000da0 <delay_ms>
    	adc_val = adc_read(1);
 800146c:	bf00      	nop
 800146e:	e7b2      	b.n	80013d6 <main+0x3e>
 8001470:	e000ed00 	.word	0xe000ed00
 8001474:	08004800 	.word	0x08004800
 8001478:	20000234 	.word	0x20000234
 800147c:	080047d0 	.word	0x080047d0
 8001480:	200001e4 	.word	0x200001e4
 8001484:	080047e0 	.word	0x080047e0
 8001488:	080047f0 	.word	0x080047f0
 800148c:	20000224 	.word	0x20000224

08001490 <uart2_init>:
    }
}

// === UART2 CONFIG ===
void uart2_init(void)
{
 8001490:	b480      	push	{r7}
 8001492:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= (1U << 0);     // GPIOA
 8001494:	4b1b      	ldr	r3, [pc, #108]	@ (8001504 <uart2_init+0x74>)
 8001496:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001498:	4a1a      	ldr	r2, [pc, #104]	@ (8001504 <uart2_init+0x74>)
 800149a:	f043 0301 	orr.w	r3, r3, #1
 800149e:	6313      	str	r3, [r2, #48]	@ 0x30
    RCC->APB1ENR |= (1U << 17);    // USART2
 80014a0:	4b18      	ldr	r3, [pc, #96]	@ (8001504 <uart2_init+0x74>)
 80014a2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80014a4:	4a17      	ldr	r2, [pc, #92]	@ (8001504 <uart2_init+0x74>)
 80014a6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80014aa:	6413      	str	r3, [r2, #64]	@ 0x40

    // PA2 = TX (AF7)
    GPIOA->MODER &= ~(3U << (2 * 2));
 80014ac:	4b16      	ldr	r3, [pc, #88]	@ (8001508 <uart2_init+0x78>)
 80014ae:	681b      	ldr	r3, [r3, #0]
 80014b0:	4a15      	ldr	r2, [pc, #84]	@ (8001508 <uart2_init+0x78>)
 80014b2:	f023 0330 	bic.w	r3, r3, #48	@ 0x30
 80014b6:	6013      	str	r3, [r2, #0]
    GPIOA->MODER |=  (2U << (2 * 2));
 80014b8:	4b13      	ldr	r3, [pc, #76]	@ (8001508 <uart2_init+0x78>)
 80014ba:	681b      	ldr	r3, [r3, #0]
 80014bc:	4a12      	ldr	r2, [pc, #72]	@ (8001508 <uart2_init+0x78>)
 80014be:	f043 0320 	orr.w	r3, r3, #32
 80014c2:	6013      	str	r3, [r2, #0]
    GPIOA->AFR[0]  &= ~(0xF << (4 * 2));
 80014c4:	4b10      	ldr	r3, [pc, #64]	@ (8001508 <uart2_init+0x78>)
 80014c6:	6a1b      	ldr	r3, [r3, #32]
 80014c8:	4a0f      	ldr	r2, [pc, #60]	@ (8001508 <uart2_init+0x78>)
 80014ca:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80014ce:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0]  |=  (7U << (4 * 2));
 80014d0:	4b0d      	ldr	r3, [pc, #52]	@ (8001508 <uart2_init+0x78>)
 80014d2:	6a1b      	ldr	r3, [r3, #32]
 80014d4:	4a0c      	ldr	r2, [pc, #48]	@ (8001508 <uart2_init+0x78>)
 80014d6:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80014da:	6213      	str	r3, [r2, #32]

    USART2->BRR = 0x008A;  // 115200 @ 16 MHz
 80014dc:	4b0b      	ldr	r3, [pc, #44]	@ (800150c <uart2_init+0x7c>)
 80014de:	228a      	movs	r2, #138	@ 0x8a
 80014e0:	609a      	str	r2, [r3, #8]
    USART2->CR1 |= (1U << 3);  // TE
 80014e2:	4b0a      	ldr	r3, [pc, #40]	@ (800150c <uart2_init+0x7c>)
 80014e4:	68db      	ldr	r3, [r3, #12]
 80014e6:	4a09      	ldr	r2, [pc, #36]	@ (800150c <uart2_init+0x7c>)
 80014e8:	f043 0308 	orr.w	r3, r3, #8
 80014ec:	60d3      	str	r3, [r2, #12]
    USART2->CR1 |= (1U << 13); // UE
 80014ee:	4b07      	ldr	r3, [pc, #28]	@ (800150c <uart2_init+0x7c>)
 80014f0:	68db      	ldr	r3, [r3, #12]
 80014f2:	4a06      	ldr	r2, [pc, #24]	@ (800150c <uart2_init+0x7c>)
 80014f4:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80014f8:	60d3      	str	r3, [r2, #12]
}
 80014fa:	bf00      	nop
 80014fc:	46bd      	mov	sp, r7
 80014fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001502:	4770      	bx	lr
 8001504:	40023800 	.word	0x40023800
 8001508:	40020000 	.word	0x40020000
 800150c:	40004400 	.word	0x40004400

08001510 <uart2_write>:

void uart2_write(char c)
{
 8001510:	b480      	push	{r7}
 8001512:	b083      	sub	sp, #12
 8001514:	af00      	add	r7, sp, #0
 8001516:	4603      	mov	r3, r0
 8001518:	71fb      	strb	r3, [r7, #7]
    while (!(USART2->SR & (1 << 7))); // Wait for TXE
 800151a:	bf00      	nop
 800151c:	4b07      	ldr	r3, [pc, #28]	@ (800153c <uart2_write+0x2c>)
 800151e:	681b      	ldr	r3, [r3, #0]
 8001520:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001524:	2b00      	cmp	r3, #0
 8001526:	d0f9      	beq.n	800151c <uart2_write+0xc>
    USART2->DR = c;
 8001528:	4a04      	ldr	r2, [pc, #16]	@ (800153c <uart2_write+0x2c>)
 800152a:	79fb      	ldrb	r3, [r7, #7]
 800152c:	6053      	str	r3, [r2, #4]
}
 800152e:	bf00      	nop
 8001530:	370c      	adds	r7, #12
 8001532:	46bd      	mov	sp, r7
 8001534:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001538:	4770      	bx	lr
 800153a:	bf00      	nop
 800153c:	40004400 	.word	0x40004400

08001540 <uart2_print>:

void uart2_print(const char* s)
{
 8001540:	b580      	push	{r7, lr}
 8001542:	b082      	sub	sp, #8
 8001544:	af00      	add	r7, sp, #0
 8001546:	6078      	str	r0, [r7, #4]
    while (*s)
 8001548:	e006      	b.n	8001558 <uart2_print+0x18>
        uart2_write(*s++);
 800154a:	687b      	ldr	r3, [r7, #4]
 800154c:	1c5a      	adds	r2, r3, #1
 800154e:	607a      	str	r2, [r7, #4]
 8001550:	781b      	ldrb	r3, [r3, #0]
 8001552:	4618      	mov	r0, r3
 8001554:	f7ff ffdc 	bl	8001510 <uart2_write>
    while (*s)
 8001558:	687b      	ldr	r3, [r7, #4]
 800155a:	781b      	ldrb	r3, [r3, #0]
 800155c:	2b00      	cmp	r3, #0
 800155e:	d1f4      	bne.n	800154a <uart2_print+0xa>
}
 8001560:	bf00      	nop
 8001562:	bf00      	nop
 8001564:	3708      	adds	r7, #8
 8001566:	46bd      	mov	sp, r7
 8001568:	bd80      	pop	{r7, pc}

0800156a <rtc_get_time>:
	// Optional: init control/status registers
}


void rtc_get_time(RTC_Time* time)
{
 800156a:	b580      	push	{r7, lr}
 800156c:	b084      	sub	sp, #16
 800156e:	af00      	add	r7, sp, #0
 8001570:	6078      	str	r0, [r7, #4]
	i2c_start();
 8001572:	f7ff fcb9 	bl	8000ee8 <i2c_start>
	i2c_write(RTC_ADDR);
 8001576:	20d0      	movs	r0, #208	@ 0xd0
 8001578:	f7ff fcda 	bl	8000f30 <i2c_write>
	i2c_write(0x00); // seconds register
 800157c:	2000      	movs	r0, #0
 800157e:	f7ff fcd7 	bl	8000f30 <i2c_write>
	i2c_restart();
 8001582:	f7ff fd15 	bl	8000fb0 <i2c_restart>
	i2c_write(RTC_ADDR | 0x01);
 8001586:	20d1      	movs	r0, #209	@ 0xd1
 8001588:	f7ff fcd2 	bl	8000f30 <i2c_write>

	uint8_t raw_sec  = i2c_read_ack() & 0x7F; // Mask bit 7
 800158c:	f7ff fd22 	bl	8000fd4 <i2c_read_ack>
 8001590:	4603      	mov	r3, r0
 8001592:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8001596:	73fb      	strb	r3, [r7, #15]
	uint8_t raw_min  = i2c_read_ack() & 0x7F;
 8001598:	f7ff fd1c 	bl	8000fd4 <i2c_read_ack>
 800159c:	4603      	mov	r3, r0
 800159e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80015a2:	73bb      	strb	r3, [r7, #14]
	uint8_t raw_hour = i2c_read_nack() & 0x3F; // Mask 6 & 7 (12/24-hour flags)
 80015a4:	f7ff fd52 	bl	800104c <i2c_read_nack>
 80015a8:	4603      	mov	r3, r0
 80015aa:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80015ae:	737b      	strb	r3, [r7, #13]

	i2c_stop();
 80015b0:	f7ff fcac 	bl	8000f0c <i2c_stop>

	time->seconds = bcd_to_decimal(raw_sec);
 80015b4:	7bfb      	ldrb	r3, [r7, #15]
 80015b6:	4618      	mov	r0, r3
 80015b8:	f000 f914 	bl	80017e4 <bcd_to_decimal>
 80015bc:	4603      	mov	r3, r0
 80015be:	461a      	mov	r2, r3
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	709a      	strb	r2, [r3, #2]
	time->minutes = bcd_to_decimal(raw_min);
 80015c4:	7bbb      	ldrb	r3, [r7, #14]
 80015c6:	4618      	mov	r0, r3
 80015c8:	f000 f90c 	bl	80017e4 <bcd_to_decimal>
 80015cc:	4603      	mov	r3, r0
 80015ce:	461a      	mov	r2, r3
 80015d0:	687b      	ldr	r3, [r7, #4]
 80015d2:	705a      	strb	r2, [r3, #1]
	time->hours   = bcd_to_decimal(raw_hour);
 80015d4:	7b7b      	ldrb	r3, [r7, #13]
 80015d6:	4618      	mov	r0, r3
 80015d8:	f000 f904 	bl	80017e4 <bcd_to_decimal>
 80015dc:	4603      	mov	r3, r0
 80015de:	461a      	mov	r2, r3
 80015e0:	687b      	ldr	r3, [r7, #4]
 80015e2:	701a      	strb	r2, [r3, #0]
}
 80015e4:	bf00      	nop
 80015e6:	3710      	adds	r7, #16
 80015e8:	46bd      	mov	sp, r7
 80015ea:	bd80      	pop	{r7, pc}

080015ec <rtc_set_time>:

void rtc_set_time(RTC_Time* time)
{
 80015ec:	b580      	push	{r7, lr}
 80015ee:	b082      	sub	sp, #8
 80015f0:	af00      	add	r7, sp, #0
 80015f2:	6078      	str	r0, [r7, #4]
    i2c_start();
 80015f4:	f7ff fc78 	bl	8000ee8 <i2c_start>
    i2c_write(RTC_ADDR);
 80015f8:	20d0      	movs	r0, #208	@ 0xd0
 80015fa:	f7ff fc99 	bl	8000f30 <i2c_write>
    i2c_write(0x00); // Start at seconds register
 80015fe:	2000      	movs	r0, #0
 8001600:	f7ff fc96 	bl	8000f30 <i2c_write>

    i2c_write(decimal_to_bcd(time->seconds) & 0x7F); // Ensure CH bit is 0
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	789b      	ldrb	r3, [r3, #2]
 8001608:	4618      	mov	r0, r3
 800160a:	f000 f905 	bl	8001818 <decimal_to_bcd>
 800160e:	4603      	mov	r3, r0
 8001610:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8001614:	b2db      	uxtb	r3, r3
 8001616:	4618      	mov	r0, r3
 8001618:	f7ff fc8a 	bl	8000f30 <i2c_write>
    i2c_write(decimal_to_bcd(time->minutes) & 0x7F);
 800161c:	687b      	ldr	r3, [r7, #4]
 800161e:	785b      	ldrb	r3, [r3, #1]
 8001620:	4618      	mov	r0, r3
 8001622:	f000 f8f9 	bl	8001818 <decimal_to_bcd>
 8001626:	4603      	mov	r3, r0
 8001628:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800162c:	b2db      	uxtb	r3, r3
 800162e:	4618      	mov	r0, r3
 8001630:	f7ff fc7e 	bl	8000f30 <i2c_write>
    i2c_write(decimal_to_bcd(time->hours) & 0x3F);   // 24-hour format
 8001634:	687b      	ldr	r3, [r7, #4]
 8001636:	781b      	ldrb	r3, [r3, #0]
 8001638:	4618      	mov	r0, r3
 800163a:	f000 f8ed 	bl	8001818 <decimal_to_bcd>
 800163e:	4603      	mov	r3, r0
 8001640:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8001644:	b2db      	uxtb	r3, r3
 8001646:	4618      	mov	r0, r3
 8001648:	f7ff fc72 	bl	8000f30 <i2c_write>

    i2c_stop();
 800164c:	f7ff fc5e 	bl	8000f0c <i2c_stop>
}
 8001650:	bf00      	nop
 8001652:	3708      	adds	r7, #8
 8001654:	46bd      	mov	sp, r7
 8001656:	bd80      	pop	{r7, pc}

08001658 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001658:	b480      	push	{r7}
 800165a:	af00      	add	r7, sp, #0
  return 1;
 800165c:	2301      	movs	r3, #1
}
 800165e:	4618      	mov	r0, r3
 8001660:	46bd      	mov	sp, r7
 8001662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001666:	4770      	bx	lr

08001668 <_kill>:

int _kill(int pid, int sig)
{
 8001668:	b580      	push	{r7, lr}
 800166a:	b082      	sub	sp, #8
 800166c:	af00      	add	r7, sp, #0
 800166e:	6078      	str	r0, [r7, #4]
 8001670:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001672:	f000 ff01 	bl	8002478 <__errno>
 8001676:	4603      	mov	r3, r0
 8001678:	2216      	movs	r2, #22
 800167a:	601a      	str	r2, [r3, #0]
  return -1;
 800167c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001680:	4618      	mov	r0, r3
 8001682:	3708      	adds	r7, #8
 8001684:	46bd      	mov	sp, r7
 8001686:	bd80      	pop	{r7, pc}

08001688 <_exit>:

void _exit (int status)
{
 8001688:	b580      	push	{r7, lr}
 800168a:	b082      	sub	sp, #8
 800168c:	af00      	add	r7, sp, #0
 800168e:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001690:	f04f 31ff 	mov.w	r1, #4294967295
 8001694:	6878      	ldr	r0, [r7, #4]
 8001696:	f7ff ffe7 	bl	8001668 <_kill>
  while (1) {}    /* Make sure we hang here */
 800169a:	bf00      	nop
 800169c:	e7fd      	b.n	800169a <_exit+0x12>

0800169e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800169e:	b580      	push	{r7, lr}
 80016a0:	b086      	sub	sp, #24
 80016a2:	af00      	add	r7, sp, #0
 80016a4:	60f8      	str	r0, [r7, #12]
 80016a6:	60b9      	str	r1, [r7, #8]
 80016a8:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80016aa:	2300      	movs	r3, #0
 80016ac:	617b      	str	r3, [r7, #20]
 80016ae:	e00a      	b.n	80016c6 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80016b0:	f3af 8000 	nop.w
 80016b4:	4601      	mov	r1, r0
 80016b6:	68bb      	ldr	r3, [r7, #8]
 80016b8:	1c5a      	adds	r2, r3, #1
 80016ba:	60ba      	str	r2, [r7, #8]
 80016bc:	b2ca      	uxtb	r2, r1
 80016be:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80016c0:	697b      	ldr	r3, [r7, #20]
 80016c2:	3301      	adds	r3, #1
 80016c4:	617b      	str	r3, [r7, #20]
 80016c6:	697a      	ldr	r2, [r7, #20]
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	429a      	cmp	r2, r3
 80016cc:	dbf0      	blt.n	80016b0 <_read+0x12>
  }

  return len;
 80016ce:	687b      	ldr	r3, [r7, #4]
}
 80016d0:	4618      	mov	r0, r3
 80016d2:	3718      	adds	r7, #24
 80016d4:	46bd      	mov	sp, r7
 80016d6:	bd80      	pop	{r7, pc}

080016d8 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80016d8:	b580      	push	{r7, lr}
 80016da:	b086      	sub	sp, #24
 80016dc:	af00      	add	r7, sp, #0
 80016de:	60f8      	str	r0, [r7, #12]
 80016e0:	60b9      	str	r1, [r7, #8]
 80016e2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80016e4:	2300      	movs	r3, #0
 80016e6:	617b      	str	r3, [r7, #20]
 80016e8:	e009      	b.n	80016fe <_write+0x26>
  {
    __io_putchar(*ptr++);
 80016ea:	68bb      	ldr	r3, [r7, #8]
 80016ec:	1c5a      	adds	r2, r3, #1
 80016ee:	60ba      	str	r2, [r7, #8]
 80016f0:	781b      	ldrb	r3, [r3, #0]
 80016f2:	4618      	mov	r0, r3
 80016f4:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80016f8:	697b      	ldr	r3, [r7, #20]
 80016fa:	3301      	adds	r3, #1
 80016fc:	617b      	str	r3, [r7, #20]
 80016fe:	697a      	ldr	r2, [r7, #20]
 8001700:	687b      	ldr	r3, [r7, #4]
 8001702:	429a      	cmp	r2, r3
 8001704:	dbf1      	blt.n	80016ea <_write+0x12>
  }
  return len;
 8001706:	687b      	ldr	r3, [r7, #4]
}
 8001708:	4618      	mov	r0, r3
 800170a:	3718      	adds	r7, #24
 800170c:	46bd      	mov	sp, r7
 800170e:	bd80      	pop	{r7, pc}

08001710 <_close>:

int _close(int file)
{
 8001710:	b480      	push	{r7}
 8001712:	b083      	sub	sp, #12
 8001714:	af00      	add	r7, sp, #0
 8001716:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001718:	f04f 33ff 	mov.w	r3, #4294967295
}
 800171c:	4618      	mov	r0, r3
 800171e:	370c      	adds	r7, #12
 8001720:	46bd      	mov	sp, r7
 8001722:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001726:	4770      	bx	lr

08001728 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001728:	b480      	push	{r7}
 800172a:	b083      	sub	sp, #12
 800172c:	af00      	add	r7, sp, #0
 800172e:	6078      	str	r0, [r7, #4]
 8001730:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001732:	683b      	ldr	r3, [r7, #0]
 8001734:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001738:	605a      	str	r2, [r3, #4]
  return 0;
 800173a:	2300      	movs	r3, #0
}
 800173c:	4618      	mov	r0, r3
 800173e:	370c      	adds	r7, #12
 8001740:	46bd      	mov	sp, r7
 8001742:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001746:	4770      	bx	lr

08001748 <_isatty>:

int _isatty(int file)
{
 8001748:	b480      	push	{r7}
 800174a:	b083      	sub	sp, #12
 800174c:	af00      	add	r7, sp, #0
 800174e:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001750:	2301      	movs	r3, #1
}
 8001752:	4618      	mov	r0, r3
 8001754:	370c      	adds	r7, #12
 8001756:	46bd      	mov	sp, r7
 8001758:	f85d 7b04 	ldr.w	r7, [sp], #4
 800175c:	4770      	bx	lr

0800175e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800175e:	b480      	push	{r7}
 8001760:	b085      	sub	sp, #20
 8001762:	af00      	add	r7, sp, #0
 8001764:	60f8      	str	r0, [r7, #12]
 8001766:	60b9      	str	r1, [r7, #8]
 8001768:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800176a:	2300      	movs	r3, #0
}
 800176c:	4618      	mov	r0, r3
 800176e:	3714      	adds	r7, #20
 8001770:	46bd      	mov	sp, r7
 8001772:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001776:	4770      	bx	lr

08001778 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001778:	b580      	push	{r7, lr}
 800177a:	b086      	sub	sp, #24
 800177c:	af00      	add	r7, sp, #0
 800177e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001780:	4a14      	ldr	r2, [pc, #80]	@ (80017d4 <_sbrk+0x5c>)
 8001782:	4b15      	ldr	r3, [pc, #84]	@ (80017d8 <_sbrk+0x60>)
 8001784:	1ad3      	subs	r3, r2, r3
 8001786:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001788:	697b      	ldr	r3, [r7, #20]
 800178a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800178c:	4b13      	ldr	r3, [pc, #76]	@ (80017dc <_sbrk+0x64>)
 800178e:	681b      	ldr	r3, [r3, #0]
 8001790:	2b00      	cmp	r3, #0
 8001792:	d102      	bne.n	800179a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001794:	4b11      	ldr	r3, [pc, #68]	@ (80017dc <_sbrk+0x64>)
 8001796:	4a12      	ldr	r2, [pc, #72]	@ (80017e0 <_sbrk+0x68>)
 8001798:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800179a:	4b10      	ldr	r3, [pc, #64]	@ (80017dc <_sbrk+0x64>)
 800179c:	681a      	ldr	r2, [r3, #0]
 800179e:	687b      	ldr	r3, [r7, #4]
 80017a0:	4413      	add	r3, r2
 80017a2:	693a      	ldr	r2, [r7, #16]
 80017a4:	429a      	cmp	r2, r3
 80017a6:	d207      	bcs.n	80017b8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80017a8:	f000 fe66 	bl	8002478 <__errno>
 80017ac:	4603      	mov	r3, r0
 80017ae:	220c      	movs	r2, #12
 80017b0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80017b2:	f04f 33ff 	mov.w	r3, #4294967295
 80017b6:	e009      	b.n	80017cc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80017b8:	4b08      	ldr	r3, [pc, #32]	@ (80017dc <_sbrk+0x64>)
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80017be:	4b07      	ldr	r3, [pc, #28]	@ (80017dc <_sbrk+0x64>)
 80017c0:	681a      	ldr	r2, [r3, #0]
 80017c2:	687b      	ldr	r3, [r7, #4]
 80017c4:	4413      	add	r3, r2
 80017c6:	4a05      	ldr	r2, [pc, #20]	@ (80017dc <_sbrk+0x64>)
 80017c8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80017ca:	68fb      	ldr	r3, [r7, #12]
}
 80017cc:	4618      	mov	r0, r3
 80017ce:	3718      	adds	r7, #24
 80017d0:	46bd      	mov	sp, r7
 80017d2:	bd80      	pop	{r7, pc}
 80017d4:	20020000 	.word	0x20020000
 80017d8:	00000400 	.word	0x00000400
 80017dc:	20000238 	.word	0x20000238
 80017e0:	20000388 	.word	0x20000388

080017e4 <bcd_to_decimal>:
#include "utils.h"

uint8_t bcd_to_decimal(uint8_t bcd)
{
 80017e4:	b480      	push	{r7}
 80017e6:	b083      	sub	sp, #12
 80017e8:	af00      	add	r7, sp, #0
 80017ea:	4603      	mov	r3, r0
 80017ec:	71fb      	strb	r3, [r7, #7]
	return (((bcd >> 4) * 10) + (bcd & 0x0F));
 80017ee:	79fb      	ldrb	r3, [r7, #7]
 80017f0:	091b      	lsrs	r3, r3, #4
 80017f2:	b2db      	uxtb	r3, r3
 80017f4:	461a      	mov	r2, r3
 80017f6:	0092      	lsls	r2, r2, #2
 80017f8:	4413      	add	r3, r2
 80017fa:	005b      	lsls	r3, r3, #1
 80017fc:	b2da      	uxtb	r2, r3
 80017fe:	79fb      	ldrb	r3, [r7, #7]
 8001800:	f003 030f 	and.w	r3, r3, #15
 8001804:	b2db      	uxtb	r3, r3
 8001806:	4413      	add	r3, r2
 8001808:	b2db      	uxtb	r3, r3
}
 800180a:	4618      	mov	r0, r3
 800180c:	370c      	adds	r7, #12
 800180e:	46bd      	mov	sp, r7
 8001810:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001814:	4770      	bx	lr
	...

08001818 <decimal_to_bcd>:

uint8_t decimal_to_bcd(uint8_t decimal)
{
 8001818:	b480      	push	{r7}
 800181a:	b083      	sub	sp, #12
 800181c:	af00      	add	r7, sp, #0
 800181e:	4603      	mov	r3, r0
 8001820:	71fb      	strb	r3, [r7, #7]
	return (((decimal/10) << 4) | (decimal % 10));
 8001822:	79fb      	ldrb	r3, [r7, #7]
 8001824:	4a0d      	ldr	r2, [pc, #52]	@ (800185c <decimal_to_bcd+0x44>)
 8001826:	fba2 2303 	umull	r2, r3, r2, r3
 800182a:	08db      	lsrs	r3, r3, #3
 800182c:	b2db      	uxtb	r3, r3
 800182e:	011b      	lsls	r3, r3, #4
 8001830:	b258      	sxtb	r0, r3
 8001832:	79fa      	ldrb	r2, [r7, #7]
 8001834:	4b09      	ldr	r3, [pc, #36]	@ (800185c <decimal_to_bcd+0x44>)
 8001836:	fba3 1302 	umull	r1, r3, r3, r2
 800183a:	08d9      	lsrs	r1, r3, #3
 800183c:	460b      	mov	r3, r1
 800183e:	009b      	lsls	r3, r3, #2
 8001840:	440b      	add	r3, r1
 8001842:	005b      	lsls	r3, r3, #1
 8001844:	1ad3      	subs	r3, r2, r3
 8001846:	b2db      	uxtb	r3, r3
 8001848:	b25b      	sxtb	r3, r3
 800184a:	4303      	orrs	r3, r0
 800184c:	b25b      	sxtb	r3, r3
 800184e:	b2db      	uxtb	r3, r3
}
 8001850:	4618      	mov	r0, r3
 8001852:	370c      	adds	r7, #12
 8001854:	46bd      	mov	sp, r7
 8001856:	f85d 7b04 	ldr.w	r7, [sp], #4
 800185a:	4770      	bx	lr
 800185c:	cccccccd 	.word	0xcccccccd

08001860 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001860:	480d      	ldr	r0, [pc, #52]	@ (8001898 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001862:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001864:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001868:	480c      	ldr	r0, [pc, #48]	@ (800189c <LoopForever+0x6>)
  ldr r1, =_edata
 800186a:	490d      	ldr	r1, [pc, #52]	@ (80018a0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800186c:	4a0d      	ldr	r2, [pc, #52]	@ (80018a4 <LoopForever+0xe>)
  movs r3, #0
 800186e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001870:	e002      	b.n	8001878 <LoopCopyDataInit>

08001872 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001872:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001874:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001876:	3304      	adds	r3, #4

08001878 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001878:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800187a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800187c:	d3f9      	bcc.n	8001872 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800187e:	4a0a      	ldr	r2, [pc, #40]	@ (80018a8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001880:	4c0a      	ldr	r4, [pc, #40]	@ (80018ac <LoopForever+0x16>)
  movs r3, #0
 8001882:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001884:	e001      	b.n	800188a <LoopFillZerobss>

08001886 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001886:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001888:	3204      	adds	r2, #4

0800188a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800188a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800188c:	d3fb      	bcc.n	8001886 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800188e:	f000 fdf9 	bl	8002484 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001892:	f7ff fd81 	bl	8001398 <main>

08001896 <LoopForever>:

LoopForever:
  b LoopForever
 8001896:	e7fe      	b.n	8001896 <LoopForever>
  ldr   r0, =_estack
 8001898:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800189c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80018a0:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 80018a4:	08004b88 	.word	0x08004b88
  ldr r2, =_sbss
 80018a8:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 80018ac:	20000388 	.word	0x20000388

080018b0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80018b0:	e7fe      	b.n	80018b0 <ADC_IRQHandler>

080018b2 <__cvt>:
 80018b2:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80018b6:	ec57 6b10 	vmov	r6, r7, d0
 80018ba:	2f00      	cmp	r7, #0
 80018bc:	460c      	mov	r4, r1
 80018be:	4619      	mov	r1, r3
 80018c0:	463b      	mov	r3, r7
 80018c2:	bfbb      	ittet	lt
 80018c4:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 80018c8:	461f      	movlt	r7, r3
 80018ca:	2300      	movge	r3, #0
 80018cc:	232d      	movlt	r3, #45	@ 0x2d
 80018ce:	700b      	strb	r3, [r1, #0]
 80018d0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80018d2:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 80018d6:	4691      	mov	r9, r2
 80018d8:	f023 0820 	bic.w	r8, r3, #32
 80018dc:	bfbc      	itt	lt
 80018de:	4632      	movlt	r2, r6
 80018e0:	4616      	movlt	r6, r2
 80018e2:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80018e6:	d005      	beq.n	80018f4 <__cvt+0x42>
 80018e8:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80018ec:	d100      	bne.n	80018f0 <__cvt+0x3e>
 80018ee:	3401      	adds	r4, #1
 80018f0:	2102      	movs	r1, #2
 80018f2:	e000      	b.n	80018f6 <__cvt+0x44>
 80018f4:	2103      	movs	r1, #3
 80018f6:	ab03      	add	r3, sp, #12
 80018f8:	9301      	str	r3, [sp, #4]
 80018fa:	ab02      	add	r3, sp, #8
 80018fc:	9300      	str	r3, [sp, #0]
 80018fe:	ec47 6b10 	vmov	d0, r6, r7
 8001902:	4653      	mov	r3, sl
 8001904:	4622      	mov	r2, r4
 8001906:	f000 fe6f 	bl	80025e8 <_dtoa_r>
 800190a:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 800190e:	4605      	mov	r5, r0
 8001910:	d119      	bne.n	8001946 <__cvt+0x94>
 8001912:	f019 0f01 	tst.w	r9, #1
 8001916:	d00e      	beq.n	8001936 <__cvt+0x84>
 8001918:	eb00 0904 	add.w	r9, r0, r4
 800191c:	2200      	movs	r2, #0
 800191e:	2300      	movs	r3, #0
 8001920:	4630      	mov	r0, r6
 8001922:	4639      	mov	r1, r7
 8001924:	f7ff f8f0 	bl	8000b08 <__aeabi_dcmpeq>
 8001928:	b108      	cbz	r0, 800192e <__cvt+0x7c>
 800192a:	f8cd 900c 	str.w	r9, [sp, #12]
 800192e:	2230      	movs	r2, #48	@ 0x30
 8001930:	9b03      	ldr	r3, [sp, #12]
 8001932:	454b      	cmp	r3, r9
 8001934:	d31e      	bcc.n	8001974 <__cvt+0xc2>
 8001936:	9b03      	ldr	r3, [sp, #12]
 8001938:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800193a:	1b5b      	subs	r3, r3, r5
 800193c:	4628      	mov	r0, r5
 800193e:	6013      	str	r3, [r2, #0]
 8001940:	b004      	add	sp, #16
 8001942:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001946:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800194a:	eb00 0904 	add.w	r9, r0, r4
 800194e:	d1e5      	bne.n	800191c <__cvt+0x6a>
 8001950:	7803      	ldrb	r3, [r0, #0]
 8001952:	2b30      	cmp	r3, #48	@ 0x30
 8001954:	d10a      	bne.n	800196c <__cvt+0xba>
 8001956:	2200      	movs	r2, #0
 8001958:	2300      	movs	r3, #0
 800195a:	4630      	mov	r0, r6
 800195c:	4639      	mov	r1, r7
 800195e:	f7ff f8d3 	bl	8000b08 <__aeabi_dcmpeq>
 8001962:	b918      	cbnz	r0, 800196c <__cvt+0xba>
 8001964:	f1c4 0401 	rsb	r4, r4, #1
 8001968:	f8ca 4000 	str.w	r4, [sl]
 800196c:	f8da 3000 	ldr.w	r3, [sl]
 8001970:	4499      	add	r9, r3
 8001972:	e7d3      	b.n	800191c <__cvt+0x6a>
 8001974:	1c59      	adds	r1, r3, #1
 8001976:	9103      	str	r1, [sp, #12]
 8001978:	701a      	strb	r2, [r3, #0]
 800197a:	e7d9      	b.n	8001930 <__cvt+0x7e>

0800197c <__exponent>:
 800197c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800197e:	2900      	cmp	r1, #0
 8001980:	bfba      	itte	lt
 8001982:	4249      	neglt	r1, r1
 8001984:	232d      	movlt	r3, #45	@ 0x2d
 8001986:	232b      	movge	r3, #43	@ 0x2b
 8001988:	2909      	cmp	r1, #9
 800198a:	7002      	strb	r2, [r0, #0]
 800198c:	7043      	strb	r3, [r0, #1]
 800198e:	dd29      	ble.n	80019e4 <__exponent+0x68>
 8001990:	f10d 0307 	add.w	r3, sp, #7
 8001994:	461d      	mov	r5, r3
 8001996:	270a      	movs	r7, #10
 8001998:	461a      	mov	r2, r3
 800199a:	fbb1 f6f7 	udiv	r6, r1, r7
 800199e:	fb07 1416 	mls	r4, r7, r6, r1
 80019a2:	3430      	adds	r4, #48	@ 0x30
 80019a4:	f802 4c01 	strb.w	r4, [r2, #-1]
 80019a8:	460c      	mov	r4, r1
 80019aa:	2c63      	cmp	r4, #99	@ 0x63
 80019ac:	f103 33ff 	add.w	r3, r3, #4294967295
 80019b0:	4631      	mov	r1, r6
 80019b2:	dcf1      	bgt.n	8001998 <__exponent+0x1c>
 80019b4:	3130      	adds	r1, #48	@ 0x30
 80019b6:	1e94      	subs	r4, r2, #2
 80019b8:	f803 1c01 	strb.w	r1, [r3, #-1]
 80019bc:	1c41      	adds	r1, r0, #1
 80019be:	4623      	mov	r3, r4
 80019c0:	42ab      	cmp	r3, r5
 80019c2:	d30a      	bcc.n	80019da <__exponent+0x5e>
 80019c4:	f10d 0309 	add.w	r3, sp, #9
 80019c8:	1a9b      	subs	r3, r3, r2
 80019ca:	42ac      	cmp	r4, r5
 80019cc:	bf88      	it	hi
 80019ce:	2300      	movhi	r3, #0
 80019d0:	3302      	adds	r3, #2
 80019d2:	4403      	add	r3, r0
 80019d4:	1a18      	subs	r0, r3, r0
 80019d6:	b003      	add	sp, #12
 80019d8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80019da:	f813 6b01 	ldrb.w	r6, [r3], #1
 80019de:	f801 6f01 	strb.w	r6, [r1, #1]!
 80019e2:	e7ed      	b.n	80019c0 <__exponent+0x44>
 80019e4:	2330      	movs	r3, #48	@ 0x30
 80019e6:	3130      	adds	r1, #48	@ 0x30
 80019e8:	7083      	strb	r3, [r0, #2]
 80019ea:	70c1      	strb	r1, [r0, #3]
 80019ec:	1d03      	adds	r3, r0, #4
 80019ee:	e7f1      	b.n	80019d4 <__exponent+0x58>

080019f0 <_printf_float>:
 80019f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80019f4:	b08d      	sub	sp, #52	@ 0x34
 80019f6:	460c      	mov	r4, r1
 80019f8:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 80019fc:	4616      	mov	r6, r2
 80019fe:	461f      	mov	r7, r3
 8001a00:	4605      	mov	r5, r0
 8001a02:	f000 fcef 	bl	80023e4 <_localeconv_r>
 8001a06:	6803      	ldr	r3, [r0, #0]
 8001a08:	9304      	str	r3, [sp, #16]
 8001a0a:	4618      	mov	r0, r3
 8001a0c:	f7fe fc50 	bl	80002b0 <strlen>
 8001a10:	2300      	movs	r3, #0
 8001a12:	930a      	str	r3, [sp, #40]	@ 0x28
 8001a14:	f8d8 3000 	ldr.w	r3, [r8]
 8001a18:	9005      	str	r0, [sp, #20]
 8001a1a:	3307      	adds	r3, #7
 8001a1c:	f023 0307 	bic.w	r3, r3, #7
 8001a20:	f103 0208 	add.w	r2, r3, #8
 8001a24:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001a28:	f8d4 b000 	ldr.w	fp, [r4]
 8001a2c:	f8c8 2000 	str.w	r2, [r8]
 8001a30:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001a34:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001a38:	9307      	str	r3, [sp, #28]
 8001a3a:	f8cd 8018 	str.w	r8, [sp, #24]
 8001a3e:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001a42:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001a46:	4b9c      	ldr	r3, [pc, #624]	@ (8001cb8 <_printf_float+0x2c8>)
 8001a48:	f04f 32ff 	mov.w	r2, #4294967295
 8001a4c:	f7ff f88e 	bl	8000b6c <__aeabi_dcmpun>
 8001a50:	bb70      	cbnz	r0, 8001ab0 <_printf_float+0xc0>
 8001a52:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001a56:	4b98      	ldr	r3, [pc, #608]	@ (8001cb8 <_printf_float+0x2c8>)
 8001a58:	f04f 32ff 	mov.w	r2, #4294967295
 8001a5c:	f7ff f868 	bl	8000b30 <__aeabi_dcmple>
 8001a60:	bb30      	cbnz	r0, 8001ab0 <_printf_float+0xc0>
 8001a62:	2200      	movs	r2, #0
 8001a64:	2300      	movs	r3, #0
 8001a66:	4640      	mov	r0, r8
 8001a68:	4649      	mov	r1, r9
 8001a6a:	f7ff f857 	bl	8000b1c <__aeabi_dcmplt>
 8001a6e:	b110      	cbz	r0, 8001a76 <_printf_float+0x86>
 8001a70:	232d      	movs	r3, #45	@ 0x2d
 8001a72:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001a76:	4a91      	ldr	r2, [pc, #580]	@ (8001cbc <_printf_float+0x2cc>)
 8001a78:	4b91      	ldr	r3, [pc, #580]	@ (8001cc0 <_printf_float+0x2d0>)
 8001a7a:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001a7e:	bf94      	ite	ls
 8001a80:	4690      	movls	r8, r2
 8001a82:	4698      	movhi	r8, r3
 8001a84:	2303      	movs	r3, #3
 8001a86:	6123      	str	r3, [r4, #16]
 8001a88:	f02b 0304 	bic.w	r3, fp, #4
 8001a8c:	6023      	str	r3, [r4, #0]
 8001a8e:	f04f 0900 	mov.w	r9, #0
 8001a92:	9700      	str	r7, [sp, #0]
 8001a94:	4633      	mov	r3, r6
 8001a96:	aa0b      	add	r2, sp, #44	@ 0x2c
 8001a98:	4621      	mov	r1, r4
 8001a9a:	4628      	mov	r0, r5
 8001a9c:	f000 f9d2 	bl	8001e44 <_printf_common>
 8001aa0:	3001      	adds	r0, #1
 8001aa2:	f040 808d 	bne.w	8001bc0 <_printf_float+0x1d0>
 8001aa6:	f04f 30ff 	mov.w	r0, #4294967295
 8001aaa:	b00d      	add	sp, #52	@ 0x34
 8001aac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001ab0:	4642      	mov	r2, r8
 8001ab2:	464b      	mov	r3, r9
 8001ab4:	4640      	mov	r0, r8
 8001ab6:	4649      	mov	r1, r9
 8001ab8:	f7ff f858 	bl	8000b6c <__aeabi_dcmpun>
 8001abc:	b140      	cbz	r0, 8001ad0 <_printf_float+0xe0>
 8001abe:	464b      	mov	r3, r9
 8001ac0:	2b00      	cmp	r3, #0
 8001ac2:	bfbc      	itt	lt
 8001ac4:	232d      	movlt	r3, #45	@ 0x2d
 8001ac6:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8001aca:	4a7e      	ldr	r2, [pc, #504]	@ (8001cc4 <_printf_float+0x2d4>)
 8001acc:	4b7e      	ldr	r3, [pc, #504]	@ (8001cc8 <_printf_float+0x2d8>)
 8001ace:	e7d4      	b.n	8001a7a <_printf_float+0x8a>
 8001ad0:	6863      	ldr	r3, [r4, #4]
 8001ad2:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8001ad6:	9206      	str	r2, [sp, #24]
 8001ad8:	1c5a      	adds	r2, r3, #1
 8001ada:	d13b      	bne.n	8001b54 <_printf_float+0x164>
 8001adc:	2306      	movs	r3, #6
 8001ade:	6063      	str	r3, [r4, #4]
 8001ae0:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8001ae4:	2300      	movs	r3, #0
 8001ae6:	6022      	str	r2, [r4, #0]
 8001ae8:	9303      	str	r3, [sp, #12]
 8001aea:	ab0a      	add	r3, sp, #40	@ 0x28
 8001aec:	e9cd a301 	strd	sl, r3, [sp, #4]
 8001af0:	ab09      	add	r3, sp, #36	@ 0x24
 8001af2:	9300      	str	r3, [sp, #0]
 8001af4:	6861      	ldr	r1, [r4, #4]
 8001af6:	ec49 8b10 	vmov	d0, r8, r9
 8001afa:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8001afe:	4628      	mov	r0, r5
 8001b00:	f7ff fed7 	bl	80018b2 <__cvt>
 8001b04:	9b06      	ldr	r3, [sp, #24]
 8001b06:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8001b08:	2b47      	cmp	r3, #71	@ 0x47
 8001b0a:	4680      	mov	r8, r0
 8001b0c:	d129      	bne.n	8001b62 <_printf_float+0x172>
 8001b0e:	1cc8      	adds	r0, r1, #3
 8001b10:	db02      	blt.n	8001b18 <_printf_float+0x128>
 8001b12:	6863      	ldr	r3, [r4, #4]
 8001b14:	4299      	cmp	r1, r3
 8001b16:	dd41      	ble.n	8001b9c <_printf_float+0x1ac>
 8001b18:	f1aa 0a02 	sub.w	sl, sl, #2
 8001b1c:	fa5f fa8a 	uxtb.w	sl, sl
 8001b20:	3901      	subs	r1, #1
 8001b22:	4652      	mov	r2, sl
 8001b24:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001b28:	9109      	str	r1, [sp, #36]	@ 0x24
 8001b2a:	f7ff ff27 	bl	800197c <__exponent>
 8001b2e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001b30:	1813      	adds	r3, r2, r0
 8001b32:	2a01      	cmp	r2, #1
 8001b34:	4681      	mov	r9, r0
 8001b36:	6123      	str	r3, [r4, #16]
 8001b38:	dc02      	bgt.n	8001b40 <_printf_float+0x150>
 8001b3a:	6822      	ldr	r2, [r4, #0]
 8001b3c:	07d2      	lsls	r2, r2, #31
 8001b3e:	d501      	bpl.n	8001b44 <_printf_float+0x154>
 8001b40:	3301      	adds	r3, #1
 8001b42:	6123      	str	r3, [r4, #16]
 8001b44:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8001b48:	2b00      	cmp	r3, #0
 8001b4a:	d0a2      	beq.n	8001a92 <_printf_float+0xa2>
 8001b4c:	232d      	movs	r3, #45	@ 0x2d
 8001b4e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001b52:	e79e      	b.n	8001a92 <_printf_float+0xa2>
 8001b54:	9a06      	ldr	r2, [sp, #24]
 8001b56:	2a47      	cmp	r2, #71	@ 0x47
 8001b58:	d1c2      	bne.n	8001ae0 <_printf_float+0xf0>
 8001b5a:	2b00      	cmp	r3, #0
 8001b5c:	d1c0      	bne.n	8001ae0 <_printf_float+0xf0>
 8001b5e:	2301      	movs	r3, #1
 8001b60:	e7bd      	b.n	8001ade <_printf_float+0xee>
 8001b62:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001b66:	d9db      	bls.n	8001b20 <_printf_float+0x130>
 8001b68:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001b6c:	d118      	bne.n	8001ba0 <_printf_float+0x1b0>
 8001b6e:	2900      	cmp	r1, #0
 8001b70:	6863      	ldr	r3, [r4, #4]
 8001b72:	dd0b      	ble.n	8001b8c <_printf_float+0x19c>
 8001b74:	6121      	str	r1, [r4, #16]
 8001b76:	b913      	cbnz	r3, 8001b7e <_printf_float+0x18e>
 8001b78:	6822      	ldr	r2, [r4, #0]
 8001b7a:	07d0      	lsls	r0, r2, #31
 8001b7c:	d502      	bpl.n	8001b84 <_printf_float+0x194>
 8001b7e:	3301      	adds	r3, #1
 8001b80:	440b      	add	r3, r1
 8001b82:	6123      	str	r3, [r4, #16]
 8001b84:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001b86:	f04f 0900 	mov.w	r9, #0
 8001b8a:	e7db      	b.n	8001b44 <_printf_float+0x154>
 8001b8c:	b913      	cbnz	r3, 8001b94 <_printf_float+0x1a4>
 8001b8e:	6822      	ldr	r2, [r4, #0]
 8001b90:	07d2      	lsls	r2, r2, #31
 8001b92:	d501      	bpl.n	8001b98 <_printf_float+0x1a8>
 8001b94:	3302      	adds	r3, #2
 8001b96:	e7f4      	b.n	8001b82 <_printf_float+0x192>
 8001b98:	2301      	movs	r3, #1
 8001b9a:	e7f2      	b.n	8001b82 <_printf_float+0x192>
 8001b9c:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001ba0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001ba2:	4299      	cmp	r1, r3
 8001ba4:	db05      	blt.n	8001bb2 <_printf_float+0x1c2>
 8001ba6:	6823      	ldr	r3, [r4, #0]
 8001ba8:	6121      	str	r1, [r4, #16]
 8001baa:	07d8      	lsls	r0, r3, #31
 8001bac:	d5ea      	bpl.n	8001b84 <_printf_float+0x194>
 8001bae:	1c4b      	adds	r3, r1, #1
 8001bb0:	e7e7      	b.n	8001b82 <_printf_float+0x192>
 8001bb2:	2900      	cmp	r1, #0
 8001bb4:	bfd4      	ite	le
 8001bb6:	f1c1 0202 	rsble	r2, r1, #2
 8001bba:	2201      	movgt	r2, #1
 8001bbc:	4413      	add	r3, r2
 8001bbe:	e7e0      	b.n	8001b82 <_printf_float+0x192>
 8001bc0:	6823      	ldr	r3, [r4, #0]
 8001bc2:	055a      	lsls	r2, r3, #21
 8001bc4:	d407      	bmi.n	8001bd6 <_printf_float+0x1e6>
 8001bc6:	6923      	ldr	r3, [r4, #16]
 8001bc8:	4642      	mov	r2, r8
 8001bca:	4631      	mov	r1, r6
 8001bcc:	4628      	mov	r0, r5
 8001bce:	47b8      	blx	r7
 8001bd0:	3001      	adds	r0, #1
 8001bd2:	d12b      	bne.n	8001c2c <_printf_float+0x23c>
 8001bd4:	e767      	b.n	8001aa6 <_printf_float+0xb6>
 8001bd6:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001bda:	f240 80dd 	bls.w	8001d98 <_printf_float+0x3a8>
 8001bde:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001be2:	2200      	movs	r2, #0
 8001be4:	2300      	movs	r3, #0
 8001be6:	f7fe ff8f 	bl	8000b08 <__aeabi_dcmpeq>
 8001bea:	2800      	cmp	r0, #0
 8001bec:	d033      	beq.n	8001c56 <_printf_float+0x266>
 8001bee:	4a37      	ldr	r2, [pc, #220]	@ (8001ccc <_printf_float+0x2dc>)
 8001bf0:	2301      	movs	r3, #1
 8001bf2:	4631      	mov	r1, r6
 8001bf4:	4628      	mov	r0, r5
 8001bf6:	47b8      	blx	r7
 8001bf8:	3001      	adds	r0, #1
 8001bfa:	f43f af54 	beq.w	8001aa6 <_printf_float+0xb6>
 8001bfe:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8001c02:	4543      	cmp	r3, r8
 8001c04:	db02      	blt.n	8001c0c <_printf_float+0x21c>
 8001c06:	6823      	ldr	r3, [r4, #0]
 8001c08:	07d8      	lsls	r0, r3, #31
 8001c0a:	d50f      	bpl.n	8001c2c <_printf_float+0x23c>
 8001c0c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001c10:	4631      	mov	r1, r6
 8001c12:	4628      	mov	r0, r5
 8001c14:	47b8      	blx	r7
 8001c16:	3001      	adds	r0, #1
 8001c18:	f43f af45 	beq.w	8001aa6 <_printf_float+0xb6>
 8001c1c:	f04f 0900 	mov.w	r9, #0
 8001c20:	f108 38ff 	add.w	r8, r8, #4294967295
 8001c24:	f104 0a1a 	add.w	sl, r4, #26
 8001c28:	45c8      	cmp	r8, r9
 8001c2a:	dc09      	bgt.n	8001c40 <_printf_float+0x250>
 8001c2c:	6823      	ldr	r3, [r4, #0]
 8001c2e:	079b      	lsls	r3, r3, #30
 8001c30:	f100 8103 	bmi.w	8001e3a <_printf_float+0x44a>
 8001c34:	68e0      	ldr	r0, [r4, #12]
 8001c36:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8001c38:	4298      	cmp	r0, r3
 8001c3a:	bfb8      	it	lt
 8001c3c:	4618      	movlt	r0, r3
 8001c3e:	e734      	b.n	8001aaa <_printf_float+0xba>
 8001c40:	2301      	movs	r3, #1
 8001c42:	4652      	mov	r2, sl
 8001c44:	4631      	mov	r1, r6
 8001c46:	4628      	mov	r0, r5
 8001c48:	47b8      	blx	r7
 8001c4a:	3001      	adds	r0, #1
 8001c4c:	f43f af2b 	beq.w	8001aa6 <_printf_float+0xb6>
 8001c50:	f109 0901 	add.w	r9, r9, #1
 8001c54:	e7e8      	b.n	8001c28 <_printf_float+0x238>
 8001c56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001c58:	2b00      	cmp	r3, #0
 8001c5a:	dc39      	bgt.n	8001cd0 <_printf_float+0x2e0>
 8001c5c:	4a1b      	ldr	r2, [pc, #108]	@ (8001ccc <_printf_float+0x2dc>)
 8001c5e:	2301      	movs	r3, #1
 8001c60:	4631      	mov	r1, r6
 8001c62:	4628      	mov	r0, r5
 8001c64:	47b8      	blx	r7
 8001c66:	3001      	adds	r0, #1
 8001c68:	f43f af1d 	beq.w	8001aa6 <_printf_float+0xb6>
 8001c6c:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8001c70:	ea59 0303 	orrs.w	r3, r9, r3
 8001c74:	d102      	bne.n	8001c7c <_printf_float+0x28c>
 8001c76:	6823      	ldr	r3, [r4, #0]
 8001c78:	07d9      	lsls	r1, r3, #31
 8001c7a:	d5d7      	bpl.n	8001c2c <_printf_float+0x23c>
 8001c7c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001c80:	4631      	mov	r1, r6
 8001c82:	4628      	mov	r0, r5
 8001c84:	47b8      	blx	r7
 8001c86:	3001      	adds	r0, #1
 8001c88:	f43f af0d 	beq.w	8001aa6 <_printf_float+0xb6>
 8001c8c:	f04f 0a00 	mov.w	sl, #0
 8001c90:	f104 0b1a 	add.w	fp, r4, #26
 8001c94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001c96:	425b      	negs	r3, r3
 8001c98:	4553      	cmp	r3, sl
 8001c9a:	dc01      	bgt.n	8001ca0 <_printf_float+0x2b0>
 8001c9c:	464b      	mov	r3, r9
 8001c9e:	e793      	b.n	8001bc8 <_printf_float+0x1d8>
 8001ca0:	2301      	movs	r3, #1
 8001ca2:	465a      	mov	r2, fp
 8001ca4:	4631      	mov	r1, r6
 8001ca6:	4628      	mov	r0, r5
 8001ca8:	47b8      	blx	r7
 8001caa:	3001      	adds	r0, #1
 8001cac:	f43f aefb 	beq.w	8001aa6 <_printf_float+0xb6>
 8001cb0:	f10a 0a01 	add.w	sl, sl, #1
 8001cb4:	e7ee      	b.n	8001c94 <_printf_float+0x2a4>
 8001cb6:	bf00      	nop
 8001cb8:	7fefffff 	.word	0x7fefffff
 8001cbc:	08004803 	.word	0x08004803
 8001cc0:	08004807 	.word	0x08004807
 8001cc4:	0800480b 	.word	0x0800480b
 8001cc8:	0800480f 	.word	0x0800480f
 8001ccc:	08004813 	.word	0x08004813
 8001cd0:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001cd2:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001cd6:	4553      	cmp	r3, sl
 8001cd8:	bfa8      	it	ge
 8001cda:	4653      	movge	r3, sl
 8001cdc:	2b00      	cmp	r3, #0
 8001cde:	4699      	mov	r9, r3
 8001ce0:	dc36      	bgt.n	8001d50 <_printf_float+0x360>
 8001ce2:	f04f 0b00 	mov.w	fp, #0
 8001ce6:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001cea:	f104 021a 	add.w	r2, r4, #26
 8001cee:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001cf0:	9306      	str	r3, [sp, #24]
 8001cf2:	eba3 0309 	sub.w	r3, r3, r9
 8001cf6:	455b      	cmp	r3, fp
 8001cf8:	dc31      	bgt.n	8001d5e <_printf_float+0x36e>
 8001cfa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001cfc:	459a      	cmp	sl, r3
 8001cfe:	dc3a      	bgt.n	8001d76 <_printf_float+0x386>
 8001d00:	6823      	ldr	r3, [r4, #0]
 8001d02:	07da      	lsls	r2, r3, #31
 8001d04:	d437      	bmi.n	8001d76 <_printf_float+0x386>
 8001d06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001d08:	ebaa 0903 	sub.w	r9, sl, r3
 8001d0c:	9b06      	ldr	r3, [sp, #24]
 8001d0e:	ebaa 0303 	sub.w	r3, sl, r3
 8001d12:	4599      	cmp	r9, r3
 8001d14:	bfa8      	it	ge
 8001d16:	4699      	movge	r9, r3
 8001d18:	f1b9 0f00 	cmp.w	r9, #0
 8001d1c:	dc33      	bgt.n	8001d86 <_printf_float+0x396>
 8001d1e:	f04f 0800 	mov.w	r8, #0
 8001d22:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001d26:	f104 0b1a 	add.w	fp, r4, #26
 8001d2a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001d2c:	ebaa 0303 	sub.w	r3, sl, r3
 8001d30:	eba3 0309 	sub.w	r3, r3, r9
 8001d34:	4543      	cmp	r3, r8
 8001d36:	f77f af79 	ble.w	8001c2c <_printf_float+0x23c>
 8001d3a:	2301      	movs	r3, #1
 8001d3c:	465a      	mov	r2, fp
 8001d3e:	4631      	mov	r1, r6
 8001d40:	4628      	mov	r0, r5
 8001d42:	47b8      	blx	r7
 8001d44:	3001      	adds	r0, #1
 8001d46:	f43f aeae 	beq.w	8001aa6 <_printf_float+0xb6>
 8001d4a:	f108 0801 	add.w	r8, r8, #1
 8001d4e:	e7ec      	b.n	8001d2a <_printf_float+0x33a>
 8001d50:	4642      	mov	r2, r8
 8001d52:	4631      	mov	r1, r6
 8001d54:	4628      	mov	r0, r5
 8001d56:	47b8      	blx	r7
 8001d58:	3001      	adds	r0, #1
 8001d5a:	d1c2      	bne.n	8001ce2 <_printf_float+0x2f2>
 8001d5c:	e6a3      	b.n	8001aa6 <_printf_float+0xb6>
 8001d5e:	2301      	movs	r3, #1
 8001d60:	4631      	mov	r1, r6
 8001d62:	4628      	mov	r0, r5
 8001d64:	9206      	str	r2, [sp, #24]
 8001d66:	47b8      	blx	r7
 8001d68:	3001      	adds	r0, #1
 8001d6a:	f43f ae9c 	beq.w	8001aa6 <_printf_float+0xb6>
 8001d6e:	9a06      	ldr	r2, [sp, #24]
 8001d70:	f10b 0b01 	add.w	fp, fp, #1
 8001d74:	e7bb      	b.n	8001cee <_printf_float+0x2fe>
 8001d76:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001d7a:	4631      	mov	r1, r6
 8001d7c:	4628      	mov	r0, r5
 8001d7e:	47b8      	blx	r7
 8001d80:	3001      	adds	r0, #1
 8001d82:	d1c0      	bne.n	8001d06 <_printf_float+0x316>
 8001d84:	e68f      	b.n	8001aa6 <_printf_float+0xb6>
 8001d86:	9a06      	ldr	r2, [sp, #24]
 8001d88:	464b      	mov	r3, r9
 8001d8a:	4442      	add	r2, r8
 8001d8c:	4631      	mov	r1, r6
 8001d8e:	4628      	mov	r0, r5
 8001d90:	47b8      	blx	r7
 8001d92:	3001      	adds	r0, #1
 8001d94:	d1c3      	bne.n	8001d1e <_printf_float+0x32e>
 8001d96:	e686      	b.n	8001aa6 <_printf_float+0xb6>
 8001d98:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001d9c:	f1ba 0f01 	cmp.w	sl, #1
 8001da0:	dc01      	bgt.n	8001da6 <_printf_float+0x3b6>
 8001da2:	07db      	lsls	r3, r3, #31
 8001da4:	d536      	bpl.n	8001e14 <_printf_float+0x424>
 8001da6:	2301      	movs	r3, #1
 8001da8:	4642      	mov	r2, r8
 8001daa:	4631      	mov	r1, r6
 8001dac:	4628      	mov	r0, r5
 8001dae:	47b8      	blx	r7
 8001db0:	3001      	adds	r0, #1
 8001db2:	f43f ae78 	beq.w	8001aa6 <_printf_float+0xb6>
 8001db6:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001dba:	4631      	mov	r1, r6
 8001dbc:	4628      	mov	r0, r5
 8001dbe:	47b8      	blx	r7
 8001dc0:	3001      	adds	r0, #1
 8001dc2:	f43f ae70 	beq.w	8001aa6 <_printf_float+0xb6>
 8001dc6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001dca:	2200      	movs	r2, #0
 8001dcc:	2300      	movs	r3, #0
 8001dce:	f10a 3aff 	add.w	sl, sl, #4294967295
 8001dd2:	f7fe fe99 	bl	8000b08 <__aeabi_dcmpeq>
 8001dd6:	b9c0      	cbnz	r0, 8001e0a <_printf_float+0x41a>
 8001dd8:	4653      	mov	r3, sl
 8001dda:	f108 0201 	add.w	r2, r8, #1
 8001dde:	4631      	mov	r1, r6
 8001de0:	4628      	mov	r0, r5
 8001de2:	47b8      	blx	r7
 8001de4:	3001      	adds	r0, #1
 8001de6:	d10c      	bne.n	8001e02 <_printf_float+0x412>
 8001de8:	e65d      	b.n	8001aa6 <_printf_float+0xb6>
 8001dea:	2301      	movs	r3, #1
 8001dec:	465a      	mov	r2, fp
 8001dee:	4631      	mov	r1, r6
 8001df0:	4628      	mov	r0, r5
 8001df2:	47b8      	blx	r7
 8001df4:	3001      	adds	r0, #1
 8001df6:	f43f ae56 	beq.w	8001aa6 <_printf_float+0xb6>
 8001dfa:	f108 0801 	add.w	r8, r8, #1
 8001dfe:	45d0      	cmp	r8, sl
 8001e00:	dbf3      	blt.n	8001dea <_printf_float+0x3fa>
 8001e02:	464b      	mov	r3, r9
 8001e04:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001e08:	e6df      	b.n	8001bca <_printf_float+0x1da>
 8001e0a:	f04f 0800 	mov.w	r8, #0
 8001e0e:	f104 0b1a 	add.w	fp, r4, #26
 8001e12:	e7f4      	b.n	8001dfe <_printf_float+0x40e>
 8001e14:	2301      	movs	r3, #1
 8001e16:	4642      	mov	r2, r8
 8001e18:	e7e1      	b.n	8001dde <_printf_float+0x3ee>
 8001e1a:	2301      	movs	r3, #1
 8001e1c:	464a      	mov	r2, r9
 8001e1e:	4631      	mov	r1, r6
 8001e20:	4628      	mov	r0, r5
 8001e22:	47b8      	blx	r7
 8001e24:	3001      	adds	r0, #1
 8001e26:	f43f ae3e 	beq.w	8001aa6 <_printf_float+0xb6>
 8001e2a:	f108 0801 	add.w	r8, r8, #1
 8001e2e:	68e3      	ldr	r3, [r4, #12]
 8001e30:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8001e32:	1a5b      	subs	r3, r3, r1
 8001e34:	4543      	cmp	r3, r8
 8001e36:	dcf0      	bgt.n	8001e1a <_printf_float+0x42a>
 8001e38:	e6fc      	b.n	8001c34 <_printf_float+0x244>
 8001e3a:	f04f 0800 	mov.w	r8, #0
 8001e3e:	f104 0919 	add.w	r9, r4, #25
 8001e42:	e7f4      	b.n	8001e2e <_printf_float+0x43e>

08001e44 <_printf_common>:
 8001e44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001e48:	4616      	mov	r6, r2
 8001e4a:	4698      	mov	r8, r3
 8001e4c:	688a      	ldr	r2, [r1, #8]
 8001e4e:	690b      	ldr	r3, [r1, #16]
 8001e50:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001e54:	4293      	cmp	r3, r2
 8001e56:	bfb8      	it	lt
 8001e58:	4613      	movlt	r3, r2
 8001e5a:	6033      	str	r3, [r6, #0]
 8001e5c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001e60:	4607      	mov	r7, r0
 8001e62:	460c      	mov	r4, r1
 8001e64:	b10a      	cbz	r2, 8001e6a <_printf_common+0x26>
 8001e66:	3301      	adds	r3, #1
 8001e68:	6033      	str	r3, [r6, #0]
 8001e6a:	6823      	ldr	r3, [r4, #0]
 8001e6c:	0699      	lsls	r1, r3, #26
 8001e6e:	bf42      	ittt	mi
 8001e70:	6833      	ldrmi	r3, [r6, #0]
 8001e72:	3302      	addmi	r3, #2
 8001e74:	6033      	strmi	r3, [r6, #0]
 8001e76:	6825      	ldr	r5, [r4, #0]
 8001e78:	f015 0506 	ands.w	r5, r5, #6
 8001e7c:	d106      	bne.n	8001e8c <_printf_common+0x48>
 8001e7e:	f104 0a19 	add.w	sl, r4, #25
 8001e82:	68e3      	ldr	r3, [r4, #12]
 8001e84:	6832      	ldr	r2, [r6, #0]
 8001e86:	1a9b      	subs	r3, r3, r2
 8001e88:	42ab      	cmp	r3, r5
 8001e8a:	dc26      	bgt.n	8001eda <_printf_common+0x96>
 8001e8c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001e90:	6822      	ldr	r2, [r4, #0]
 8001e92:	3b00      	subs	r3, #0
 8001e94:	bf18      	it	ne
 8001e96:	2301      	movne	r3, #1
 8001e98:	0692      	lsls	r2, r2, #26
 8001e9a:	d42b      	bmi.n	8001ef4 <_printf_common+0xb0>
 8001e9c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001ea0:	4641      	mov	r1, r8
 8001ea2:	4638      	mov	r0, r7
 8001ea4:	47c8      	blx	r9
 8001ea6:	3001      	adds	r0, #1
 8001ea8:	d01e      	beq.n	8001ee8 <_printf_common+0xa4>
 8001eaa:	6823      	ldr	r3, [r4, #0]
 8001eac:	6922      	ldr	r2, [r4, #16]
 8001eae:	f003 0306 	and.w	r3, r3, #6
 8001eb2:	2b04      	cmp	r3, #4
 8001eb4:	bf02      	ittt	eq
 8001eb6:	68e5      	ldreq	r5, [r4, #12]
 8001eb8:	6833      	ldreq	r3, [r6, #0]
 8001eba:	1aed      	subeq	r5, r5, r3
 8001ebc:	68a3      	ldr	r3, [r4, #8]
 8001ebe:	bf0c      	ite	eq
 8001ec0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001ec4:	2500      	movne	r5, #0
 8001ec6:	4293      	cmp	r3, r2
 8001ec8:	bfc4      	itt	gt
 8001eca:	1a9b      	subgt	r3, r3, r2
 8001ecc:	18ed      	addgt	r5, r5, r3
 8001ece:	2600      	movs	r6, #0
 8001ed0:	341a      	adds	r4, #26
 8001ed2:	42b5      	cmp	r5, r6
 8001ed4:	d11a      	bne.n	8001f0c <_printf_common+0xc8>
 8001ed6:	2000      	movs	r0, #0
 8001ed8:	e008      	b.n	8001eec <_printf_common+0xa8>
 8001eda:	2301      	movs	r3, #1
 8001edc:	4652      	mov	r2, sl
 8001ede:	4641      	mov	r1, r8
 8001ee0:	4638      	mov	r0, r7
 8001ee2:	47c8      	blx	r9
 8001ee4:	3001      	adds	r0, #1
 8001ee6:	d103      	bne.n	8001ef0 <_printf_common+0xac>
 8001ee8:	f04f 30ff 	mov.w	r0, #4294967295
 8001eec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001ef0:	3501      	adds	r5, #1
 8001ef2:	e7c6      	b.n	8001e82 <_printf_common+0x3e>
 8001ef4:	18e1      	adds	r1, r4, r3
 8001ef6:	1c5a      	adds	r2, r3, #1
 8001ef8:	2030      	movs	r0, #48	@ 0x30
 8001efa:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001efe:	4422      	add	r2, r4
 8001f00:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001f04:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001f08:	3302      	adds	r3, #2
 8001f0a:	e7c7      	b.n	8001e9c <_printf_common+0x58>
 8001f0c:	2301      	movs	r3, #1
 8001f0e:	4622      	mov	r2, r4
 8001f10:	4641      	mov	r1, r8
 8001f12:	4638      	mov	r0, r7
 8001f14:	47c8      	blx	r9
 8001f16:	3001      	adds	r0, #1
 8001f18:	d0e6      	beq.n	8001ee8 <_printf_common+0xa4>
 8001f1a:	3601      	adds	r6, #1
 8001f1c:	e7d9      	b.n	8001ed2 <_printf_common+0x8e>
	...

08001f20 <_printf_i>:
 8001f20:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001f24:	7e0f      	ldrb	r7, [r1, #24]
 8001f26:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001f28:	2f78      	cmp	r7, #120	@ 0x78
 8001f2a:	4691      	mov	r9, r2
 8001f2c:	4680      	mov	r8, r0
 8001f2e:	460c      	mov	r4, r1
 8001f30:	469a      	mov	sl, r3
 8001f32:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001f36:	d807      	bhi.n	8001f48 <_printf_i+0x28>
 8001f38:	2f62      	cmp	r7, #98	@ 0x62
 8001f3a:	d80a      	bhi.n	8001f52 <_printf_i+0x32>
 8001f3c:	2f00      	cmp	r7, #0
 8001f3e:	f000 80d2 	beq.w	80020e6 <_printf_i+0x1c6>
 8001f42:	2f58      	cmp	r7, #88	@ 0x58
 8001f44:	f000 80b9 	beq.w	80020ba <_printf_i+0x19a>
 8001f48:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001f4c:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001f50:	e03a      	b.n	8001fc8 <_printf_i+0xa8>
 8001f52:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001f56:	2b15      	cmp	r3, #21
 8001f58:	d8f6      	bhi.n	8001f48 <_printf_i+0x28>
 8001f5a:	a101      	add	r1, pc, #4	@ (adr r1, 8001f60 <_printf_i+0x40>)
 8001f5c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001f60:	08001fb9 	.word	0x08001fb9
 8001f64:	08001fcd 	.word	0x08001fcd
 8001f68:	08001f49 	.word	0x08001f49
 8001f6c:	08001f49 	.word	0x08001f49
 8001f70:	08001f49 	.word	0x08001f49
 8001f74:	08001f49 	.word	0x08001f49
 8001f78:	08001fcd 	.word	0x08001fcd
 8001f7c:	08001f49 	.word	0x08001f49
 8001f80:	08001f49 	.word	0x08001f49
 8001f84:	08001f49 	.word	0x08001f49
 8001f88:	08001f49 	.word	0x08001f49
 8001f8c:	080020cd 	.word	0x080020cd
 8001f90:	08001ff7 	.word	0x08001ff7
 8001f94:	08002087 	.word	0x08002087
 8001f98:	08001f49 	.word	0x08001f49
 8001f9c:	08001f49 	.word	0x08001f49
 8001fa0:	080020ef 	.word	0x080020ef
 8001fa4:	08001f49 	.word	0x08001f49
 8001fa8:	08001ff7 	.word	0x08001ff7
 8001fac:	08001f49 	.word	0x08001f49
 8001fb0:	08001f49 	.word	0x08001f49
 8001fb4:	0800208f 	.word	0x0800208f
 8001fb8:	6833      	ldr	r3, [r6, #0]
 8001fba:	1d1a      	adds	r2, r3, #4
 8001fbc:	681b      	ldr	r3, [r3, #0]
 8001fbe:	6032      	str	r2, [r6, #0]
 8001fc0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001fc4:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001fc8:	2301      	movs	r3, #1
 8001fca:	e09d      	b.n	8002108 <_printf_i+0x1e8>
 8001fcc:	6833      	ldr	r3, [r6, #0]
 8001fce:	6820      	ldr	r0, [r4, #0]
 8001fd0:	1d19      	adds	r1, r3, #4
 8001fd2:	6031      	str	r1, [r6, #0]
 8001fd4:	0606      	lsls	r6, r0, #24
 8001fd6:	d501      	bpl.n	8001fdc <_printf_i+0xbc>
 8001fd8:	681d      	ldr	r5, [r3, #0]
 8001fda:	e003      	b.n	8001fe4 <_printf_i+0xc4>
 8001fdc:	0645      	lsls	r5, r0, #25
 8001fde:	d5fb      	bpl.n	8001fd8 <_printf_i+0xb8>
 8001fe0:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001fe4:	2d00      	cmp	r5, #0
 8001fe6:	da03      	bge.n	8001ff0 <_printf_i+0xd0>
 8001fe8:	232d      	movs	r3, #45	@ 0x2d
 8001fea:	426d      	negs	r5, r5
 8001fec:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001ff0:	4859      	ldr	r0, [pc, #356]	@ (8002158 <_printf_i+0x238>)
 8001ff2:	230a      	movs	r3, #10
 8001ff4:	e011      	b.n	800201a <_printf_i+0xfa>
 8001ff6:	6821      	ldr	r1, [r4, #0]
 8001ff8:	6833      	ldr	r3, [r6, #0]
 8001ffa:	0608      	lsls	r0, r1, #24
 8001ffc:	f853 5b04 	ldr.w	r5, [r3], #4
 8002000:	d402      	bmi.n	8002008 <_printf_i+0xe8>
 8002002:	0649      	lsls	r1, r1, #25
 8002004:	bf48      	it	mi
 8002006:	b2ad      	uxthmi	r5, r5
 8002008:	2f6f      	cmp	r7, #111	@ 0x6f
 800200a:	4853      	ldr	r0, [pc, #332]	@ (8002158 <_printf_i+0x238>)
 800200c:	6033      	str	r3, [r6, #0]
 800200e:	bf14      	ite	ne
 8002010:	230a      	movne	r3, #10
 8002012:	2308      	moveq	r3, #8
 8002014:	2100      	movs	r1, #0
 8002016:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800201a:	6866      	ldr	r6, [r4, #4]
 800201c:	60a6      	str	r6, [r4, #8]
 800201e:	2e00      	cmp	r6, #0
 8002020:	bfa2      	ittt	ge
 8002022:	6821      	ldrge	r1, [r4, #0]
 8002024:	f021 0104 	bicge.w	r1, r1, #4
 8002028:	6021      	strge	r1, [r4, #0]
 800202a:	b90d      	cbnz	r5, 8002030 <_printf_i+0x110>
 800202c:	2e00      	cmp	r6, #0
 800202e:	d04b      	beq.n	80020c8 <_printf_i+0x1a8>
 8002030:	4616      	mov	r6, r2
 8002032:	fbb5 f1f3 	udiv	r1, r5, r3
 8002036:	fb03 5711 	mls	r7, r3, r1, r5
 800203a:	5dc7      	ldrb	r7, [r0, r7]
 800203c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8002040:	462f      	mov	r7, r5
 8002042:	42bb      	cmp	r3, r7
 8002044:	460d      	mov	r5, r1
 8002046:	d9f4      	bls.n	8002032 <_printf_i+0x112>
 8002048:	2b08      	cmp	r3, #8
 800204a:	d10b      	bne.n	8002064 <_printf_i+0x144>
 800204c:	6823      	ldr	r3, [r4, #0]
 800204e:	07df      	lsls	r7, r3, #31
 8002050:	d508      	bpl.n	8002064 <_printf_i+0x144>
 8002052:	6923      	ldr	r3, [r4, #16]
 8002054:	6861      	ldr	r1, [r4, #4]
 8002056:	4299      	cmp	r1, r3
 8002058:	bfde      	ittt	le
 800205a:	2330      	movle	r3, #48	@ 0x30
 800205c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002060:	f106 36ff 	addle.w	r6, r6, #4294967295
 8002064:	1b92      	subs	r2, r2, r6
 8002066:	6122      	str	r2, [r4, #16]
 8002068:	f8cd a000 	str.w	sl, [sp]
 800206c:	464b      	mov	r3, r9
 800206e:	aa03      	add	r2, sp, #12
 8002070:	4621      	mov	r1, r4
 8002072:	4640      	mov	r0, r8
 8002074:	f7ff fee6 	bl	8001e44 <_printf_common>
 8002078:	3001      	adds	r0, #1
 800207a:	d14a      	bne.n	8002112 <_printf_i+0x1f2>
 800207c:	f04f 30ff 	mov.w	r0, #4294967295
 8002080:	b004      	add	sp, #16
 8002082:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002086:	6823      	ldr	r3, [r4, #0]
 8002088:	f043 0320 	orr.w	r3, r3, #32
 800208c:	6023      	str	r3, [r4, #0]
 800208e:	4833      	ldr	r0, [pc, #204]	@ (800215c <_printf_i+0x23c>)
 8002090:	2778      	movs	r7, #120	@ 0x78
 8002092:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8002096:	6823      	ldr	r3, [r4, #0]
 8002098:	6831      	ldr	r1, [r6, #0]
 800209a:	061f      	lsls	r7, r3, #24
 800209c:	f851 5b04 	ldr.w	r5, [r1], #4
 80020a0:	d402      	bmi.n	80020a8 <_printf_i+0x188>
 80020a2:	065f      	lsls	r7, r3, #25
 80020a4:	bf48      	it	mi
 80020a6:	b2ad      	uxthmi	r5, r5
 80020a8:	6031      	str	r1, [r6, #0]
 80020aa:	07d9      	lsls	r1, r3, #31
 80020ac:	bf44      	itt	mi
 80020ae:	f043 0320 	orrmi.w	r3, r3, #32
 80020b2:	6023      	strmi	r3, [r4, #0]
 80020b4:	b11d      	cbz	r5, 80020be <_printf_i+0x19e>
 80020b6:	2310      	movs	r3, #16
 80020b8:	e7ac      	b.n	8002014 <_printf_i+0xf4>
 80020ba:	4827      	ldr	r0, [pc, #156]	@ (8002158 <_printf_i+0x238>)
 80020bc:	e7e9      	b.n	8002092 <_printf_i+0x172>
 80020be:	6823      	ldr	r3, [r4, #0]
 80020c0:	f023 0320 	bic.w	r3, r3, #32
 80020c4:	6023      	str	r3, [r4, #0]
 80020c6:	e7f6      	b.n	80020b6 <_printf_i+0x196>
 80020c8:	4616      	mov	r6, r2
 80020ca:	e7bd      	b.n	8002048 <_printf_i+0x128>
 80020cc:	6833      	ldr	r3, [r6, #0]
 80020ce:	6825      	ldr	r5, [r4, #0]
 80020d0:	6961      	ldr	r1, [r4, #20]
 80020d2:	1d18      	adds	r0, r3, #4
 80020d4:	6030      	str	r0, [r6, #0]
 80020d6:	062e      	lsls	r6, r5, #24
 80020d8:	681b      	ldr	r3, [r3, #0]
 80020da:	d501      	bpl.n	80020e0 <_printf_i+0x1c0>
 80020dc:	6019      	str	r1, [r3, #0]
 80020de:	e002      	b.n	80020e6 <_printf_i+0x1c6>
 80020e0:	0668      	lsls	r0, r5, #25
 80020e2:	d5fb      	bpl.n	80020dc <_printf_i+0x1bc>
 80020e4:	8019      	strh	r1, [r3, #0]
 80020e6:	2300      	movs	r3, #0
 80020e8:	6123      	str	r3, [r4, #16]
 80020ea:	4616      	mov	r6, r2
 80020ec:	e7bc      	b.n	8002068 <_printf_i+0x148>
 80020ee:	6833      	ldr	r3, [r6, #0]
 80020f0:	1d1a      	adds	r2, r3, #4
 80020f2:	6032      	str	r2, [r6, #0]
 80020f4:	681e      	ldr	r6, [r3, #0]
 80020f6:	6862      	ldr	r2, [r4, #4]
 80020f8:	2100      	movs	r1, #0
 80020fa:	4630      	mov	r0, r6
 80020fc:	f7fe f888 	bl	8000210 <memchr>
 8002100:	b108      	cbz	r0, 8002106 <_printf_i+0x1e6>
 8002102:	1b80      	subs	r0, r0, r6
 8002104:	6060      	str	r0, [r4, #4]
 8002106:	6863      	ldr	r3, [r4, #4]
 8002108:	6123      	str	r3, [r4, #16]
 800210a:	2300      	movs	r3, #0
 800210c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002110:	e7aa      	b.n	8002068 <_printf_i+0x148>
 8002112:	6923      	ldr	r3, [r4, #16]
 8002114:	4632      	mov	r2, r6
 8002116:	4649      	mov	r1, r9
 8002118:	4640      	mov	r0, r8
 800211a:	47d0      	blx	sl
 800211c:	3001      	adds	r0, #1
 800211e:	d0ad      	beq.n	800207c <_printf_i+0x15c>
 8002120:	6823      	ldr	r3, [r4, #0]
 8002122:	079b      	lsls	r3, r3, #30
 8002124:	d413      	bmi.n	800214e <_printf_i+0x22e>
 8002126:	68e0      	ldr	r0, [r4, #12]
 8002128:	9b03      	ldr	r3, [sp, #12]
 800212a:	4298      	cmp	r0, r3
 800212c:	bfb8      	it	lt
 800212e:	4618      	movlt	r0, r3
 8002130:	e7a6      	b.n	8002080 <_printf_i+0x160>
 8002132:	2301      	movs	r3, #1
 8002134:	4632      	mov	r2, r6
 8002136:	4649      	mov	r1, r9
 8002138:	4640      	mov	r0, r8
 800213a:	47d0      	blx	sl
 800213c:	3001      	adds	r0, #1
 800213e:	d09d      	beq.n	800207c <_printf_i+0x15c>
 8002140:	3501      	adds	r5, #1
 8002142:	68e3      	ldr	r3, [r4, #12]
 8002144:	9903      	ldr	r1, [sp, #12]
 8002146:	1a5b      	subs	r3, r3, r1
 8002148:	42ab      	cmp	r3, r5
 800214a:	dcf2      	bgt.n	8002132 <_printf_i+0x212>
 800214c:	e7eb      	b.n	8002126 <_printf_i+0x206>
 800214e:	2500      	movs	r5, #0
 8002150:	f104 0619 	add.w	r6, r4, #25
 8002154:	e7f5      	b.n	8002142 <_printf_i+0x222>
 8002156:	bf00      	nop
 8002158:	08004815 	.word	0x08004815
 800215c:	08004826 	.word	0x08004826

08002160 <std>:
 8002160:	2300      	movs	r3, #0
 8002162:	b510      	push	{r4, lr}
 8002164:	4604      	mov	r4, r0
 8002166:	e9c0 3300 	strd	r3, r3, [r0]
 800216a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800216e:	6083      	str	r3, [r0, #8]
 8002170:	8181      	strh	r1, [r0, #12]
 8002172:	6643      	str	r3, [r0, #100]	@ 0x64
 8002174:	81c2      	strh	r2, [r0, #14]
 8002176:	6183      	str	r3, [r0, #24]
 8002178:	4619      	mov	r1, r3
 800217a:	2208      	movs	r2, #8
 800217c:	305c      	adds	r0, #92	@ 0x5c
 800217e:	f000 f928 	bl	80023d2 <memset>
 8002182:	4b0d      	ldr	r3, [pc, #52]	@ (80021b8 <std+0x58>)
 8002184:	6263      	str	r3, [r4, #36]	@ 0x24
 8002186:	4b0d      	ldr	r3, [pc, #52]	@ (80021bc <std+0x5c>)
 8002188:	62a3      	str	r3, [r4, #40]	@ 0x28
 800218a:	4b0d      	ldr	r3, [pc, #52]	@ (80021c0 <std+0x60>)
 800218c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800218e:	4b0d      	ldr	r3, [pc, #52]	@ (80021c4 <std+0x64>)
 8002190:	6323      	str	r3, [r4, #48]	@ 0x30
 8002192:	4b0d      	ldr	r3, [pc, #52]	@ (80021c8 <std+0x68>)
 8002194:	6224      	str	r4, [r4, #32]
 8002196:	429c      	cmp	r4, r3
 8002198:	d006      	beq.n	80021a8 <std+0x48>
 800219a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800219e:	4294      	cmp	r4, r2
 80021a0:	d002      	beq.n	80021a8 <std+0x48>
 80021a2:	33d0      	adds	r3, #208	@ 0xd0
 80021a4:	429c      	cmp	r4, r3
 80021a6:	d105      	bne.n	80021b4 <std+0x54>
 80021a8:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80021ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80021b0:	f000 b98c 	b.w	80024cc <__retarget_lock_init_recursive>
 80021b4:	bd10      	pop	{r4, pc}
 80021b6:	bf00      	nop
 80021b8:	0800234d 	.word	0x0800234d
 80021bc:	0800236f 	.word	0x0800236f
 80021c0:	080023a7 	.word	0x080023a7
 80021c4:	080023cb 	.word	0x080023cb
 80021c8:	2000023c 	.word	0x2000023c

080021cc <stdio_exit_handler>:
 80021cc:	4a02      	ldr	r2, [pc, #8]	@ (80021d8 <stdio_exit_handler+0xc>)
 80021ce:	4903      	ldr	r1, [pc, #12]	@ (80021dc <stdio_exit_handler+0x10>)
 80021d0:	4803      	ldr	r0, [pc, #12]	@ (80021e0 <stdio_exit_handler+0x14>)
 80021d2:	f000 b869 	b.w	80022a8 <_fwalk_sglue>
 80021d6:	bf00      	nop
 80021d8:	20000000 	.word	0x20000000
 80021dc:	08003e2d 	.word	0x08003e2d
 80021e0:	20000010 	.word	0x20000010

080021e4 <cleanup_stdio>:
 80021e4:	6841      	ldr	r1, [r0, #4]
 80021e6:	4b0c      	ldr	r3, [pc, #48]	@ (8002218 <cleanup_stdio+0x34>)
 80021e8:	4299      	cmp	r1, r3
 80021ea:	b510      	push	{r4, lr}
 80021ec:	4604      	mov	r4, r0
 80021ee:	d001      	beq.n	80021f4 <cleanup_stdio+0x10>
 80021f0:	f001 fe1c 	bl	8003e2c <_fflush_r>
 80021f4:	68a1      	ldr	r1, [r4, #8]
 80021f6:	4b09      	ldr	r3, [pc, #36]	@ (800221c <cleanup_stdio+0x38>)
 80021f8:	4299      	cmp	r1, r3
 80021fa:	d002      	beq.n	8002202 <cleanup_stdio+0x1e>
 80021fc:	4620      	mov	r0, r4
 80021fe:	f001 fe15 	bl	8003e2c <_fflush_r>
 8002202:	68e1      	ldr	r1, [r4, #12]
 8002204:	4b06      	ldr	r3, [pc, #24]	@ (8002220 <cleanup_stdio+0x3c>)
 8002206:	4299      	cmp	r1, r3
 8002208:	d004      	beq.n	8002214 <cleanup_stdio+0x30>
 800220a:	4620      	mov	r0, r4
 800220c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002210:	f001 be0c 	b.w	8003e2c <_fflush_r>
 8002214:	bd10      	pop	{r4, pc}
 8002216:	bf00      	nop
 8002218:	2000023c 	.word	0x2000023c
 800221c:	200002a4 	.word	0x200002a4
 8002220:	2000030c 	.word	0x2000030c

08002224 <global_stdio_init.part.0>:
 8002224:	b510      	push	{r4, lr}
 8002226:	4b0b      	ldr	r3, [pc, #44]	@ (8002254 <global_stdio_init.part.0+0x30>)
 8002228:	4c0b      	ldr	r4, [pc, #44]	@ (8002258 <global_stdio_init.part.0+0x34>)
 800222a:	4a0c      	ldr	r2, [pc, #48]	@ (800225c <global_stdio_init.part.0+0x38>)
 800222c:	601a      	str	r2, [r3, #0]
 800222e:	4620      	mov	r0, r4
 8002230:	2200      	movs	r2, #0
 8002232:	2104      	movs	r1, #4
 8002234:	f7ff ff94 	bl	8002160 <std>
 8002238:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800223c:	2201      	movs	r2, #1
 800223e:	2109      	movs	r1, #9
 8002240:	f7ff ff8e 	bl	8002160 <std>
 8002244:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002248:	2202      	movs	r2, #2
 800224a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800224e:	2112      	movs	r1, #18
 8002250:	f7ff bf86 	b.w	8002160 <std>
 8002254:	20000374 	.word	0x20000374
 8002258:	2000023c 	.word	0x2000023c
 800225c:	080021cd 	.word	0x080021cd

08002260 <__sfp_lock_acquire>:
 8002260:	4801      	ldr	r0, [pc, #4]	@ (8002268 <__sfp_lock_acquire+0x8>)
 8002262:	f000 b934 	b.w	80024ce <__retarget_lock_acquire_recursive>
 8002266:	bf00      	nop
 8002268:	2000037d 	.word	0x2000037d

0800226c <__sfp_lock_release>:
 800226c:	4801      	ldr	r0, [pc, #4]	@ (8002274 <__sfp_lock_release+0x8>)
 800226e:	f000 b92f 	b.w	80024d0 <__retarget_lock_release_recursive>
 8002272:	bf00      	nop
 8002274:	2000037d 	.word	0x2000037d

08002278 <__sinit>:
 8002278:	b510      	push	{r4, lr}
 800227a:	4604      	mov	r4, r0
 800227c:	f7ff fff0 	bl	8002260 <__sfp_lock_acquire>
 8002280:	6a23      	ldr	r3, [r4, #32]
 8002282:	b11b      	cbz	r3, 800228c <__sinit+0x14>
 8002284:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002288:	f7ff bff0 	b.w	800226c <__sfp_lock_release>
 800228c:	4b04      	ldr	r3, [pc, #16]	@ (80022a0 <__sinit+0x28>)
 800228e:	6223      	str	r3, [r4, #32]
 8002290:	4b04      	ldr	r3, [pc, #16]	@ (80022a4 <__sinit+0x2c>)
 8002292:	681b      	ldr	r3, [r3, #0]
 8002294:	2b00      	cmp	r3, #0
 8002296:	d1f5      	bne.n	8002284 <__sinit+0xc>
 8002298:	f7ff ffc4 	bl	8002224 <global_stdio_init.part.0>
 800229c:	e7f2      	b.n	8002284 <__sinit+0xc>
 800229e:	bf00      	nop
 80022a0:	080021e5 	.word	0x080021e5
 80022a4:	20000374 	.word	0x20000374

080022a8 <_fwalk_sglue>:
 80022a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80022ac:	4607      	mov	r7, r0
 80022ae:	4688      	mov	r8, r1
 80022b0:	4614      	mov	r4, r2
 80022b2:	2600      	movs	r6, #0
 80022b4:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80022b8:	f1b9 0901 	subs.w	r9, r9, #1
 80022bc:	d505      	bpl.n	80022ca <_fwalk_sglue+0x22>
 80022be:	6824      	ldr	r4, [r4, #0]
 80022c0:	2c00      	cmp	r4, #0
 80022c2:	d1f7      	bne.n	80022b4 <_fwalk_sglue+0xc>
 80022c4:	4630      	mov	r0, r6
 80022c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80022ca:	89ab      	ldrh	r3, [r5, #12]
 80022cc:	2b01      	cmp	r3, #1
 80022ce:	d907      	bls.n	80022e0 <_fwalk_sglue+0x38>
 80022d0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80022d4:	3301      	adds	r3, #1
 80022d6:	d003      	beq.n	80022e0 <_fwalk_sglue+0x38>
 80022d8:	4629      	mov	r1, r5
 80022da:	4638      	mov	r0, r7
 80022dc:	47c0      	blx	r8
 80022de:	4306      	orrs	r6, r0
 80022e0:	3568      	adds	r5, #104	@ 0x68
 80022e2:	e7e9      	b.n	80022b8 <_fwalk_sglue+0x10>

080022e4 <sniprintf>:
 80022e4:	b40c      	push	{r2, r3}
 80022e6:	b530      	push	{r4, r5, lr}
 80022e8:	4b17      	ldr	r3, [pc, #92]	@ (8002348 <sniprintf+0x64>)
 80022ea:	1e0c      	subs	r4, r1, #0
 80022ec:	681d      	ldr	r5, [r3, #0]
 80022ee:	b09d      	sub	sp, #116	@ 0x74
 80022f0:	da08      	bge.n	8002304 <sniprintf+0x20>
 80022f2:	238b      	movs	r3, #139	@ 0x8b
 80022f4:	602b      	str	r3, [r5, #0]
 80022f6:	f04f 30ff 	mov.w	r0, #4294967295
 80022fa:	b01d      	add	sp, #116	@ 0x74
 80022fc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8002300:	b002      	add	sp, #8
 8002302:	4770      	bx	lr
 8002304:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8002308:	f8ad 3014 	strh.w	r3, [sp, #20]
 800230c:	bf14      	ite	ne
 800230e:	f104 33ff 	addne.w	r3, r4, #4294967295
 8002312:	4623      	moveq	r3, r4
 8002314:	9304      	str	r3, [sp, #16]
 8002316:	9307      	str	r3, [sp, #28]
 8002318:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800231c:	9002      	str	r0, [sp, #8]
 800231e:	9006      	str	r0, [sp, #24]
 8002320:	f8ad 3016 	strh.w	r3, [sp, #22]
 8002324:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8002326:	ab21      	add	r3, sp, #132	@ 0x84
 8002328:	a902      	add	r1, sp, #8
 800232a:	4628      	mov	r0, r5
 800232c:	9301      	str	r3, [sp, #4]
 800232e:	f001 fbfd 	bl	8003b2c <_svfiprintf_r>
 8002332:	1c43      	adds	r3, r0, #1
 8002334:	bfbc      	itt	lt
 8002336:	238b      	movlt	r3, #139	@ 0x8b
 8002338:	602b      	strlt	r3, [r5, #0]
 800233a:	2c00      	cmp	r4, #0
 800233c:	d0dd      	beq.n	80022fa <sniprintf+0x16>
 800233e:	9b02      	ldr	r3, [sp, #8]
 8002340:	2200      	movs	r2, #0
 8002342:	701a      	strb	r2, [r3, #0]
 8002344:	e7d9      	b.n	80022fa <sniprintf+0x16>
 8002346:	bf00      	nop
 8002348:	2000000c 	.word	0x2000000c

0800234c <__sread>:
 800234c:	b510      	push	{r4, lr}
 800234e:	460c      	mov	r4, r1
 8002350:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002354:	f000 f86c 	bl	8002430 <_read_r>
 8002358:	2800      	cmp	r0, #0
 800235a:	bfab      	itete	ge
 800235c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800235e:	89a3      	ldrhlt	r3, [r4, #12]
 8002360:	181b      	addge	r3, r3, r0
 8002362:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8002366:	bfac      	ite	ge
 8002368:	6563      	strge	r3, [r4, #84]	@ 0x54
 800236a:	81a3      	strhlt	r3, [r4, #12]
 800236c:	bd10      	pop	{r4, pc}

0800236e <__swrite>:
 800236e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002372:	461f      	mov	r7, r3
 8002374:	898b      	ldrh	r3, [r1, #12]
 8002376:	05db      	lsls	r3, r3, #23
 8002378:	4605      	mov	r5, r0
 800237a:	460c      	mov	r4, r1
 800237c:	4616      	mov	r6, r2
 800237e:	d505      	bpl.n	800238c <__swrite+0x1e>
 8002380:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002384:	2302      	movs	r3, #2
 8002386:	2200      	movs	r2, #0
 8002388:	f000 f840 	bl	800240c <_lseek_r>
 800238c:	89a3      	ldrh	r3, [r4, #12]
 800238e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002392:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002396:	81a3      	strh	r3, [r4, #12]
 8002398:	4632      	mov	r2, r6
 800239a:	463b      	mov	r3, r7
 800239c:	4628      	mov	r0, r5
 800239e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80023a2:	f000 b857 	b.w	8002454 <_write_r>

080023a6 <__sseek>:
 80023a6:	b510      	push	{r4, lr}
 80023a8:	460c      	mov	r4, r1
 80023aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80023ae:	f000 f82d 	bl	800240c <_lseek_r>
 80023b2:	1c43      	adds	r3, r0, #1
 80023b4:	89a3      	ldrh	r3, [r4, #12]
 80023b6:	bf15      	itete	ne
 80023b8:	6560      	strne	r0, [r4, #84]	@ 0x54
 80023ba:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80023be:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80023c2:	81a3      	strheq	r3, [r4, #12]
 80023c4:	bf18      	it	ne
 80023c6:	81a3      	strhne	r3, [r4, #12]
 80023c8:	bd10      	pop	{r4, pc}

080023ca <__sclose>:
 80023ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80023ce:	f000 b80d 	b.w	80023ec <_close_r>

080023d2 <memset>:
 80023d2:	4402      	add	r2, r0
 80023d4:	4603      	mov	r3, r0
 80023d6:	4293      	cmp	r3, r2
 80023d8:	d100      	bne.n	80023dc <memset+0xa>
 80023da:	4770      	bx	lr
 80023dc:	f803 1b01 	strb.w	r1, [r3], #1
 80023e0:	e7f9      	b.n	80023d6 <memset+0x4>
	...

080023e4 <_localeconv_r>:
 80023e4:	4800      	ldr	r0, [pc, #0]	@ (80023e8 <_localeconv_r+0x4>)
 80023e6:	4770      	bx	lr
 80023e8:	2000014c 	.word	0x2000014c

080023ec <_close_r>:
 80023ec:	b538      	push	{r3, r4, r5, lr}
 80023ee:	4d06      	ldr	r5, [pc, #24]	@ (8002408 <_close_r+0x1c>)
 80023f0:	2300      	movs	r3, #0
 80023f2:	4604      	mov	r4, r0
 80023f4:	4608      	mov	r0, r1
 80023f6:	602b      	str	r3, [r5, #0]
 80023f8:	f7ff f98a 	bl	8001710 <_close>
 80023fc:	1c43      	adds	r3, r0, #1
 80023fe:	d102      	bne.n	8002406 <_close_r+0x1a>
 8002400:	682b      	ldr	r3, [r5, #0]
 8002402:	b103      	cbz	r3, 8002406 <_close_r+0x1a>
 8002404:	6023      	str	r3, [r4, #0]
 8002406:	bd38      	pop	{r3, r4, r5, pc}
 8002408:	20000378 	.word	0x20000378

0800240c <_lseek_r>:
 800240c:	b538      	push	{r3, r4, r5, lr}
 800240e:	4d07      	ldr	r5, [pc, #28]	@ (800242c <_lseek_r+0x20>)
 8002410:	4604      	mov	r4, r0
 8002412:	4608      	mov	r0, r1
 8002414:	4611      	mov	r1, r2
 8002416:	2200      	movs	r2, #0
 8002418:	602a      	str	r2, [r5, #0]
 800241a:	461a      	mov	r2, r3
 800241c:	f7ff f99f 	bl	800175e <_lseek>
 8002420:	1c43      	adds	r3, r0, #1
 8002422:	d102      	bne.n	800242a <_lseek_r+0x1e>
 8002424:	682b      	ldr	r3, [r5, #0]
 8002426:	b103      	cbz	r3, 800242a <_lseek_r+0x1e>
 8002428:	6023      	str	r3, [r4, #0]
 800242a:	bd38      	pop	{r3, r4, r5, pc}
 800242c:	20000378 	.word	0x20000378

08002430 <_read_r>:
 8002430:	b538      	push	{r3, r4, r5, lr}
 8002432:	4d07      	ldr	r5, [pc, #28]	@ (8002450 <_read_r+0x20>)
 8002434:	4604      	mov	r4, r0
 8002436:	4608      	mov	r0, r1
 8002438:	4611      	mov	r1, r2
 800243a:	2200      	movs	r2, #0
 800243c:	602a      	str	r2, [r5, #0]
 800243e:	461a      	mov	r2, r3
 8002440:	f7ff f92d 	bl	800169e <_read>
 8002444:	1c43      	adds	r3, r0, #1
 8002446:	d102      	bne.n	800244e <_read_r+0x1e>
 8002448:	682b      	ldr	r3, [r5, #0]
 800244a:	b103      	cbz	r3, 800244e <_read_r+0x1e>
 800244c:	6023      	str	r3, [r4, #0]
 800244e:	bd38      	pop	{r3, r4, r5, pc}
 8002450:	20000378 	.word	0x20000378

08002454 <_write_r>:
 8002454:	b538      	push	{r3, r4, r5, lr}
 8002456:	4d07      	ldr	r5, [pc, #28]	@ (8002474 <_write_r+0x20>)
 8002458:	4604      	mov	r4, r0
 800245a:	4608      	mov	r0, r1
 800245c:	4611      	mov	r1, r2
 800245e:	2200      	movs	r2, #0
 8002460:	602a      	str	r2, [r5, #0]
 8002462:	461a      	mov	r2, r3
 8002464:	f7ff f938 	bl	80016d8 <_write>
 8002468:	1c43      	adds	r3, r0, #1
 800246a:	d102      	bne.n	8002472 <_write_r+0x1e>
 800246c:	682b      	ldr	r3, [r5, #0]
 800246e:	b103      	cbz	r3, 8002472 <_write_r+0x1e>
 8002470:	6023      	str	r3, [r4, #0]
 8002472:	bd38      	pop	{r3, r4, r5, pc}
 8002474:	20000378 	.word	0x20000378

08002478 <__errno>:
 8002478:	4b01      	ldr	r3, [pc, #4]	@ (8002480 <__errno+0x8>)
 800247a:	6818      	ldr	r0, [r3, #0]
 800247c:	4770      	bx	lr
 800247e:	bf00      	nop
 8002480:	2000000c 	.word	0x2000000c

08002484 <__libc_init_array>:
 8002484:	b570      	push	{r4, r5, r6, lr}
 8002486:	4d0d      	ldr	r5, [pc, #52]	@ (80024bc <__libc_init_array+0x38>)
 8002488:	4c0d      	ldr	r4, [pc, #52]	@ (80024c0 <__libc_init_array+0x3c>)
 800248a:	1b64      	subs	r4, r4, r5
 800248c:	10a4      	asrs	r4, r4, #2
 800248e:	2600      	movs	r6, #0
 8002490:	42a6      	cmp	r6, r4
 8002492:	d109      	bne.n	80024a8 <__libc_init_array+0x24>
 8002494:	4d0b      	ldr	r5, [pc, #44]	@ (80024c4 <__libc_init_array+0x40>)
 8002496:	4c0c      	ldr	r4, [pc, #48]	@ (80024c8 <__libc_init_array+0x44>)
 8002498:	f002 f98c 	bl	80047b4 <_init>
 800249c:	1b64      	subs	r4, r4, r5
 800249e:	10a4      	asrs	r4, r4, #2
 80024a0:	2600      	movs	r6, #0
 80024a2:	42a6      	cmp	r6, r4
 80024a4:	d105      	bne.n	80024b2 <__libc_init_array+0x2e>
 80024a6:	bd70      	pop	{r4, r5, r6, pc}
 80024a8:	f855 3b04 	ldr.w	r3, [r5], #4
 80024ac:	4798      	blx	r3
 80024ae:	3601      	adds	r6, #1
 80024b0:	e7ee      	b.n	8002490 <__libc_init_array+0xc>
 80024b2:	f855 3b04 	ldr.w	r3, [r5], #4
 80024b6:	4798      	blx	r3
 80024b8:	3601      	adds	r6, #1
 80024ba:	e7f2      	b.n	80024a2 <__libc_init_array+0x1e>
 80024bc:	08004b80 	.word	0x08004b80
 80024c0:	08004b80 	.word	0x08004b80
 80024c4:	08004b80 	.word	0x08004b80
 80024c8:	08004b84 	.word	0x08004b84

080024cc <__retarget_lock_init_recursive>:
 80024cc:	4770      	bx	lr

080024ce <__retarget_lock_acquire_recursive>:
 80024ce:	4770      	bx	lr

080024d0 <__retarget_lock_release_recursive>:
 80024d0:	4770      	bx	lr

080024d2 <quorem>:
 80024d2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024d6:	6903      	ldr	r3, [r0, #16]
 80024d8:	690c      	ldr	r4, [r1, #16]
 80024da:	42a3      	cmp	r3, r4
 80024dc:	4607      	mov	r7, r0
 80024de:	db7e      	blt.n	80025de <quorem+0x10c>
 80024e0:	3c01      	subs	r4, #1
 80024e2:	f101 0814 	add.w	r8, r1, #20
 80024e6:	00a3      	lsls	r3, r4, #2
 80024e8:	f100 0514 	add.w	r5, r0, #20
 80024ec:	9300      	str	r3, [sp, #0]
 80024ee:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80024f2:	9301      	str	r3, [sp, #4]
 80024f4:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80024f8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80024fc:	3301      	adds	r3, #1
 80024fe:	429a      	cmp	r2, r3
 8002500:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002504:	fbb2 f6f3 	udiv	r6, r2, r3
 8002508:	d32e      	bcc.n	8002568 <quorem+0x96>
 800250a:	f04f 0a00 	mov.w	sl, #0
 800250e:	46c4      	mov	ip, r8
 8002510:	46ae      	mov	lr, r5
 8002512:	46d3      	mov	fp, sl
 8002514:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002518:	b298      	uxth	r0, r3
 800251a:	fb06 a000 	mla	r0, r6, r0, sl
 800251e:	0c02      	lsrs	r2, r0, #16
 8002520:	0c1b      	lsrs	r3, r3, #16
 8002522:	fb06 2303 	mla	r3, r6, r3, r2
 8002526:	f8de 2000 	ldr.w	r2, [lr]
 800252a:	b280      	uxth	r0, r0
 800252c:	b292      	uxth	r2, r2
 800252e:	1a12      	subs	r2, r2, r0
 8002530:	445a      	add	r2, fp
 8002532:	f8de 0000 	ldr.w	r0, [lr]
 8002536:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800253a:	b29b      	uxth	r3, r3
 800253c:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002540:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002544:	b292      	uxth	r2, r2
 8002546:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800254a:	45e1      	cmp	r9, ip
 800254c:	f84e 2b04 	str.w	r2, [lr], #4
 8002550:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002554:	d2de      	bcs.n	8002514 <quorem+0x42>
 8002556:	9b00      	ldr	r3, [sp, #0]
 8002558:	58eb      	ldr	r3, [r5, r3]
 800255a:	b92b      	cbnz	r3, 8002568 <quorem+0x96>
 800255c:	9b01      	ldr	r3, [sp, #4]
 800255e:	3b04      	subs	r3, #4
 8002560:	429d      	cmp	r5, r3
 8002562:	461a      	mov	r2, r3
 8002564:	d32f      	bcc.n	80025c6 <quorem+0xf4>
 8002566:	613c      	str	r4, [r7, #16]
 8002568:	4638      	mov	r0, r7
 800256a:	f001 f97b 	bl	8003864 <__mcmp>
 800256e:	2800      	cmp	r0, #0
 8002570:	db25      	blt.n	80025be <quorem+0xec>
 8002572:	4629      	mov	r1, r5
 8002574:	2000      	movs	r0, #0
 8002576:	f858 2b04 	ldr.w	r2, [r8], #4
 800257a:	f8d1 c000 	ldr.w	ip, [r1]
 800257e:	fa1f fe82 	uxth.w	lr, r2
 8002582:	fa1f f38c 	uxth.w	r3, ip
 8002586:	eba3 030e 	sub.w	r3, r3, lr
 800258a:	4403      	add	r3, r0
 800258c:	0c12      	lsrs	r2, r2, #16
 800258e:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002592:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002596:	b29b      	uxth	r3, r3
 8002598:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800259c:	45c1      	cmp	r9, r8
 800259e:	f841 3b04 	str.w	r3, [r1], #4
 80025a2:	ea4f 4022 	mov.w	r0, r2, asr #16
 80025a6:	d2e6      	bcs.n	8002576 <quorem+0xa4>
 80025a8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80025ac:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80025b0:	b922      	cbnz	r2, 80025bc <quorem+0xea>
 80025b2:	3b04      	subs	r3, #4
 80025b4:	429d      	cmp	r5, r3
 80025b6:	461a      	mov	r2, r3
 80025b8:	d30b      	bcc.n	80025d2 <quorem+0x100>
 80025ba:	613c      	str	r4, [r7, #16]
 80025bc:	3601      	adds	r6, #1
 80025be:	4630      	mov	r0, r6
 80025c0:	b003      	add	sp, #12
 80025c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80025c6:	6812      	ldr	r2, [r2, #0]
 80025c8:	3b04      	subs	r3, #4
 80025ca:	2a00      	cmp	r2, #0
 80025cc:	d1cb      	bne.n	8002566 <quorem+0x94>
 80025ce:	3c01      	subs	r4, #1
 80025d0:	e7c6      	b.n	8002560 <quorem+0x8e>
 80025d2:	6812      	ldr	r2, [r2, #0]
 80025d4:	3b04      	subs	r3, #4
 80025d6:	2a00      	cmp	r2, #0
 80025d8:	d1ef      	bne.n	80025ba <quorem+0xe8>
 80025da:	3c01      	subs	r4, #1
 80025dc:	e7ea      	b.n	80025b4 <quorem+0xe2>
 80025de:	2000      	movs	r0, #0
 80025e0:	e7ee      	b.n	80025c0 <quorem+0xee>
 80025e2:	0000      	movs	r0, r0
 80025e4:	0000      	movs	r0, r0
	...

080025e8 <_dtoa_r>:
 80025e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025ec:	69c7      	ldr	r7, [r0, #28]
 80025ee:	b099      	sub	sp, #100	@ 0x64
 80025f0:	ed8d 0b02 	vstr	d0, [sp, #8]
 80025f4:	ec55 4b10 	vmov	r4, r5, d0
 80025f8:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 80025fa:	9109      	str	r1, [sp, #36]	@ 0x24
 80025fc:	4683      	mov	fp, r0
 80025fe:	920e      	str	r2, [sp, #56]	@ 0x38
 8002600:	9313      	str	r3, [sp, #76]	@ 0x4c
 8002602:	b97f      	cbnz	r7, 8002624 <_dtoa_r+0x3c>
 8002604:	2010      	movs	r0, #16
 8002606:	f000 fdfd 	bl	8003204 <malloc>
 800260a:	4602      	mov	r2, r0
 800260c:	f8cb 001c 	str.w	r0, [fp, #28]
 8002610:	b920      	cbnz	r0, 800261c <_dtoa_r+0x34>
 8002612:	4ba7      	ldr	r3, [pc, #668]	@ (80028b0 <_dtoa_r+0x2c8>)
 8002614:	21ef      	movs	r1, #239	@ 0xef
 8002616:	48a7      	ldr	r0, [pc, #668]	@ (80028b4 <_dtoa_r+0x2cc>)
 8002618:	f001 fc68 	bl	8003eec <__assert_func>
 800261c:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002620:	6007      	str	r7, [r0, #0]
 8002622:	60c7      	str	r7, [r0, #12]
 8002624:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002628:	6819      	ldr	r1, [r3, #0]
 800262a:	b159      	cbz	r1, 8002644 <_dtoa_r+0x5c>
 800262c:	685a      	ldr	r2, [r3, #4]
 800262e:	604a      	str	r2, [r1, #4]
 8002630:	2301      	movs	r3, #1
 8002632:	4093      	lsls	r3, r2
 8002634:	608b      	str	r3, [r1, #8]
 8002636:	4658      	mov	r0, fp
 8002638:	f000 feda 	bl	80033f0 <_Bfree>
 800263c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002640:	2200      	movs	r2, #0
 8002642:	601a      	str	r2, [r3, #0]
 8002644:	1e2b      	subs	r3, r5, #0
 8002646:	bfb9      	ittee	lt
 8002648:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800264c:	9303      	strlt	r3, [sp, #12]
 800264e:	2300      	movge	r3, #0
 8002650:	6033      	strge	r3, [r6, #0]
 8002652:	9f03      	ldr	r7, [sp, #12]
 8002654:	4b98      	ldr	r3, [pc, #608]	@ (80028b8 <_dtoa_r+0x2d0>)
 8002656:	bfbc      	itt	lt
 8002658:	2201      	movlt	r2, #1
 800265a:	6032      	strlt	r2, [r6, #0]
 800265c:	43bb      	bics	r3, r7
 800265e:	d112      	bne.n	8002686 <_dtoa_r+0x9e>
 8002660:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8002662:	f242 730f 	movw	r3, #9999	@ 0x270f
 8002666:	6013      	str	r3, [r2, #0]
 8002668:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800266c:	4323      	orrs	r3, r4
 800266e:	f000 854d 	beq.w	800310c <_dtoa_r+0xb24>
 8002672:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002674:	f8df a254 	ldr.w	sl, [pc, #596]	@ 80028cc <_dtoa_r+0x2e4>
 8002678:	2b00      	cmp	r3, #0
 800267a:	f000 854f 	beq.w	800311c <_dtoa_r+0xb34>
 800267e:	f10a 0303 	add.w	r3, sl, #3
 8002682:	f000 bd49 	b.w	8003118 <_dtoa_r+0xb30>
 8002686:	ed9d 7b02 	vldr	d7, [sp, #8]
 800268a:	2200      	movs	r2, #0
 800268c:	ec51 0b17 	vmov	r0, r1, d7
 8002690:	2300      	movs	r3, #0
 8002692:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 8002696:	f7fe fa37 	bl	8000b08 <__aeabi_dcmpeq>
 800269a:	4680      	mov	r8, r0
 800269c:	b158      	cbz	r0, 80026b6 <_dtoa_r+0xce>
 800269e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80026a0:	2301      	movs	r3, #1
 80026a2:	6013      	str	r3, [r2, #0]
 80026a4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80026a6:	b113      	cbz	r3, 80026ae <_dtoa_r+0xc6>
 80026a8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80026aa:	4b84      	ldr	r3, [pc, #528]	@ (80028bc <_dtoa_r+0x2d4>)
 80026ac:	6013      	str	r3, [r2, #0]
 80026ae:	f8df a220 	ldr.w	sl, [pc, #544]	@ 80028d0 <_dtoa_r+0x2e8>
 80026b2:	f000 bd33 	b.w	800311c <_dtoa_r+0xb34>
 80026b6:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 80026ba:	aa16      	add	r2, sp, #88	@ 0x58
 80026bc:	a917      	add	r1, sp, #92	@ 0x5c
 80026be:	4658      	mov	r0, fp
 80026c0:	f001 f980 	bl	80039c4 <__d2b>
 80026c4:	f3c7 560a 	ubfx	r6, r7, #20, #11
 80026c8:	4681      	mov	r9, r0
 80026ca:	2e00      	cmp	r6, #0
 80026cc:	d077      	beq.n	80027be <_dtoa_r+0x1d6>
 80026ce:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80026d0:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 80026d4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80026d8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80026dc:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80026e0:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80026e4:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 80026e8:	4619      	mov	r1, r3
 80026ea:	2200      	movs	r2, #0
 80026ec:	4b74      	ldr	r3, [pc, #464]	@ (80028c0 <_dtoa_r+0x2d8>)
 80026ee:	f7fd fdeb 	bl	80002c8 <__aeabi_dsub>
 80026f2:	a369      	add	r3, pc, #420	@ (adr r3, 8002898 <_dtoa_r+0x2b0>)
 80026f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80026f8:	f7fd ff9e 	bl	8000638 <__aeabi_dmul>
 80026fc:	a368      	add	r3, pc, #416	@ (adr r3, 80028a0 <_dtoa_r+0x2b8>)
 80026fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002702:	f7fd fde3 	bl	80002cc <__adddf3>
 8002706:	4604      	mov	r4, r0
 8002708:	4630      	mov	r0, r6
 800270a:	460d      	mov	r5, r1
 800270c:	f7fd ff2a 	bl	8000564 <__aeabi_i2d>
 8002710:	a365      	add	r3, pc, #404	@ (adr r3, 80028a8 <_dtoa_r+0x2c0>)
 8002712:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002716:	f7fd ff8f 	bl	8000638 <__aeabi_dmul>
 800271a:	4602      	mov	r2, r0
 800271c:	460b      	mov	r3, r1
 800271e:	4620      	mov	r0, r4
 8002720:	4629      	mov	r1, r5
 8002722:	f7fd fdd3 	bl	80002cc <__adddf3>
 8002726:	4604      	mov	r4, r0
 8002728:	460d      	mov	r5, r1
 800272a:	f7fe fa35 	bl	8000b98 <__aeabi_d2iz>
 800272e:	2200      	movs	r2, #0
 8002730:	4607      	mov	r7, r0
 8002732:	2300      	movs	r3, #0
 8002734:	4620      	mov	r0, r4
 8002736:	4629      	mov	r1, r5
 8002738:	f7fe f9f0 	bl	8000b1c <__aeabi_dcmplt>
 800273c:	b140      	cbz	r0, 8002750 <_dtoa_r+0x168>
 800273e:	4638      	mov	r0, r7
 8002740:	f7fd ff10 	bl	8000564 <__aeabi_i2d>
 8002744:	4622      	mov	r2, r4
 8002746:	462b      	mov	r3, r5
 8002748:	f7fe f9de 	bl	8000b08 <__aeabi_dcmpeq>
 800274c:	b900      	cbnz	r0, 8002750 <_dtoa_r+0x168>
 800274e:	3f01      	subs	r7, #1
 8002750:	2f16      	cmp	r7, #22
 8002752:	d851      	bhi.n	80027f8 <_dtoa_r+0x210>
 8002754:	4b5b      	ldr	r3, [pc, #364]	@ (80028c4 <_dtoa_r+0x2dc>)
 8002756:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 800275a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800275e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002762:	f7fe f9db 	bl	8000b1c <__aeabi_dcmplt>
 8002766:	2800      	cmp	r0, #0
 8002768:	d048      	beq.n	80027fc <_dtoa_r+0x214>
 800276a:	3f01      	subs	r7, #1
 800276c:	2300      	movs	r3, #0
 800276e:	9312      	str	r3, [sp, #72]	@ 0x48
 8002770:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002772:	1b9b      	subs	r3, r3, r6
 8002774:	1e5a      	subs	r2, r3, #1
 8002776:	bf44      	itt	mi
 8002778:	f1c3 0801 	rsbmi	r8, r3, #1
 800277c:	2300      	movmi	r3, #0
 800277e:	9208      	str	r2, [sp, #32]
 8002780:	bf54      	ite	pl
 8002782:	f04f 0800 	movpl.w	r8, #0
 8002786:	9308      	strmi	r3, [sp, #32]
 8002788:	2f00      	cmp	r7, #0
 800278a:	db39      	blt.n	8002800 <_dtoa_r+0x218>
 800278c:	9b08      	ldr	r3, [sp, #32]
 800278e:	970f      	str	r7, [sp, #60]	@ 0x3c
 8002790:	443b      	add	r3, r7
 8002792:	9308      	str	r3, [sp, #32]
 8002794:	2300      	movs	r3, #0
 8002796:	930a      	str	r3, [sp, #40]	@ 0x28
 8002798:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800279a:	2b09      	cmp	r3, #9
 800279c:	d864      	bhi.n	8002868 <_dtoa_r+0x280>
 800279e:	2b05      	cmp	r3, #5
 80027a0:	bfc4      	itt	gt
 80027a2:	3b04      	subgt	r3, #4
 80027a4:	9309      	strgt	r3, [sp, #36]	@ 0x24
 80027a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80027a8:	f1a3 0302 	sub.w	r3, r3, #2
 80027ac:	bfcc      	ite	gt
 80027ae:	2400      	movgt	r4, #0
 80027b0:	2401      	movle	r4, #1
 80027b2:	2b03      	cmp	r3, #3
 80027b4:	d863      	bhi.n	800287e <_dtoa_r+0x296>
 80027b6:	e8df f003 	tbb	[pc, r3]
 80027ba:	372a      	.short	0x372a
 80027bc:	5535      	.short	0x5535
 80027be:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 80027c2:	441e      	add	r6, r3
 80027c4:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80027c8:	2b20      	cmp	r3, #32
 80027ca:	bfc1      	itttt	gt
 80027cc:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80027d0:	409f      	lslgt	r7, r3
 80027d2:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80027d6:	fa24 f303 	lsrgt.w	r3, r4, r3
 80027da:	bfd6      	itet	le
 80027dc:	f1c3 0320 	rsble	r3, r3, #32
 80027e0:	ea47 0003 	orrgt.w	r0, r7, r3
 80027e4:	fa04 f003 	lslle.w	r0, r4, r3
 80027e8:	f7fd feac 	bl	8000544 <__aeabi_ui2d>
 80027ec:	2201      	movs	r2, #1
 80027ee:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 80027f2:	3e01      	subs	r6, #1
 80027f4:	9214      	str	r2, [sp, #80]	@ 0x50
 80027f6:	e777      	b.n	80026e8 <_dtoa_r+0x100>
 80027f8:	2301      	movs	r3, #1
 80027fa:	e7b8      	b.n	800276e <_dtoa_r+0x186>
 80027fc:	9012      	str	r0, [sp, #72]	@ 0x48
 80027fe:	e7b7      	b.n	8002770 <_dtoa_r+0x188>
 8002800:	427b      	negs	r3, r7
 8002802:	930a      	str	r3, [sp, #40]	@ 0x28
 8002804:	2300      	movs	r3, #0
 8002806:	eba8 0807 	sub.w	r8, r8, r7
 800280a:	930f      	str	r3, [sp, #60]	@ 0x3c
 800280c:	e7c4      	b.n	8002798 <_dtoa_r+0x1b0>
 800280e:	2300      	movs	r3, #0
 8002810:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002812:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002814:	2b00      	cmp	r3, #0
 8002816:	dc35      	bgt.n	8002884 <_dtoa_r+0x29c>
 8002818:	2301      	movs	r3, #1
 800281a:	9300      	str	r3, [sp, #0]
 800281c:	9307      	str	r3, [sp, #28]
 800281e:	461a      	mov	r2, r3
 8002820:	920e      	str	r2, [sp, #56]	@ 0x38
 8002822:	e00b      	b.n	800283c <_dtoa_r+0x254>
 8002824:	2301      	movs	r3, #1
 8002826:	e7f3      	b.n	8002810 <_dtoa_r+0x228>
 8002828:	2300      	movs	r3, #0
 800282a:	930b      	str	r3, [sp, #44]	@ 0x2c
 800282c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800282e:	18fb      	adds	r3, r7, r3
 8002830:	9300      	str	r3, [sp, #0]
 8002832:	3301      	adds	r3, #1
 8002834:	2b01      	cmp	r3, #1
 8002836:	9307      	str	r3, [sp, #28]
 8002838:	bfb8      	it	lt
 800283a:	2301      	movlt	r3, #1
 800283c:	f8db 001c 	ldr.w	r0, [fp, #28]
 8002840:	2100      	movs	r1, #0
 8002842:	2204      	movs	r2, #4
 8002844:	f102 0514 	add.w	r5, r2, #20
 8002848:	429d      	cmp	r5, r3
 800284a:	d91f      	bls.n	800288c <_dtoa_r+0x2a4>
 800284c:	6041      	str	r1, [r0, #4]
 800284e:	4658      	mov	r0, fp
 8002850:	f000 fd8e 	bl	8003370 <_Balloc>
 8002854:	4682      	mov	sl, r0
 8002856:	2800      	cmp	r0, #0
 8002858:	d13c      	bne.n	80028d4 <_dtoa_r+0x2ec>
 800285a:	4b1b      	ldr	r3, [pc, #108]	@ (80028c8 <_dtoa_r+0x2e0>)
 800285c:	4602      	mov	r2, r0
 800285e:	f240 11af 	movw	r1, #431	@ 0x1af
 8002862:	e6d8      	b.n	8002616 <_dtoa_r+0x2e>
 8002864:	2301      	movs	r3, #1
 8002866:	e7e0      	b.n	800282a <_dtoa_r+0x242>
 8002868:	2401      	movs	r4, #1
 800286a:	2300      	movs	r3, #0
 800286c:	9309      	str	r3, [sp, #36]	@ 0x24
 800286e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8002870:	f04f 33ff 	mov.w	r3, #4294967295
 8002874:	9300      	str	r3, [sp, #0]
 8002876:	9307      	str	r3, [sp, #28]
 8002878:	2200      	movs	r2, #0
 800287a:	2312      	movs	r3, #18
 800287c:	e7d0      	b.n	8002820 <_dtoa_r+0x238>
 800287e:	2301      	movs	r3, #1
 8002880:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002882:	e7f5      	b.n	8002870 <_dtoa_r+0x288>
 8002884:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002886:	9300      	str	r3, [sp, #0]
 8002888:	9307      	str	r3, [sp, #28]
 800288a:	e7d7      	b.n	800283c <_dtoa_r+0x254>
 800288c:	3101      	adds	r1, #1
 800288e:	0052      	lsls	r2, r2, #1
 8002890:	e7d8      	b.n	8002844 <_dtoa_r+0x25c>
 8002892:	bf00      	nop
 8002894:	f3af 8000 	nop.w
 8002898:	636f4361 	.word	0x636f4361
 800289c:	3fd287a7 	.word	0x3fd287a7
 80028a0:	8b60c8b3 	.word	0x8b60c8b3
 80028a4:	3fc68a28 	.word	0x3fc68a28
 80028a8:	509f79fb 	.word	0x509f79fb
 80028ac:	3fd34413 	.word	0x3fd34413
 80028b0:	08004844 	.word	0x08004844
 80028b4:	0800485b 	.word	0x0800485b
 80028b8:	7ff00000 	.word	0x7ff00000
 80028bc:	08004814 	.word	0x08004814
 80028c0:	3ff80000 	.word	0x3ff80000
 80028c4:	08004958 	.word	0x08004958
 80028c8:	080048b3 	.word	0x080048b3
 80028cc:	08004840 	.word	0x08004840
 80028d0:	08004813 	.word	0x08004813
 80028d4:	f8db 301c 	ldr.w	r3, [fp, #28]
 80028d8:	6018      	str	r0, [r3, #0]
 80028da:	9b07      	ldr	r3, [sp, #28]
 80028dc:	2b0e      	cmp	r3, #14
 80028de:	f200 80a4 	bhi.w	8002a2a <_dtoa_r+0x442>
 80028e2:	2c00      	cmp	r4, #0
 80028e4:	f000 80a1 	beq.w	8002a2a <_dtoa_r+0x442>
 80028e8:	2f00      	cmp	r7, #0
 80028ea:	dd33      	ble.n	8002954 <_dtoa_r+0x36c>
 80028ec:	4bad      	ldr	r3, [pc, #692]	@ (8002ba4 <_dtoa_r+0x5bc>)
 80028ee:	f007 020f 	and.w	r2, r7, #15
 80028f2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80028f6:	ed93 7b00 	vldr	d7, [r3]
 80028fa:	05f8      	lsls	r0, r7, #23
 80028fc:	ed8d 7b04 	vstr	d7, [sp, #16]
 8002900:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002904:	d516      	bpl.n	8002934 <_dtoa_r+0x34c>
 8002906:	4ba8      	ldr	r3, [pc, #672]	@ (8002ba8 <_dtoa_r+0x5c0>)
 8002908:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800290c:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002910:	f7fd ffbc 	bl	800088c <__aeabi_ddiv>
 8002914:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002918:	f004 040f 	and.w	r4, r4, #15
 800291c:	2603      	movs	r6, #3
 800291e:	4da2      	ldr	r5, [pc, #648]	@ (8002ba8 <_dtoa_r+0x5c0>)
 8002920:	b954      	cbnz	r4, 8002938 <_dtoa_r+0x350>
 8002922:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8002926:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800292a:	f7fd ffaf 	bl	800088c <__aeabi_ddiv>
 800292e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002932:	e028      	b.n	8002986 <_dtoa_r+0x39e>
 8002934:	2602      	movs	r6, #2
 8002936:	e7f2      	b.n	800291e <_dtoa_r+0x336>
 8002938:	07e1      	lsls	r1, r4, #31
 800293a:	d508      	bpl.n	800294e <_dtoa_r+0x366>
 800293c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002940:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002944:	f7fd fe78 	bl	8000638 <__aeabi_dmul>
 8002948:	e9cd 0104 	strd	r0, r1, [sp, #16]
 800294c:	3601      	adds	r6, #1
 800294e:	1064      	asrs	r4, r4, #1
 8002950:	3508      	adds	r5, #8
 8002952:	e7e5      	b.n	8002920 <_dtoa_r+0x338>
 8002954:	f000 80d2 	beq.w	8002afc <_dtoa_r+0x514>
 8002958:	427c      	negs	r4, r7
 800295a:	4b92      	ldr	r3, [pc, #584]	@ (8002ba4 <_dtoa_r+0x5bc>)
 800295c:	4d92      	ldr	r5, [pc, #584]	@ (8002ba8 <_dtoa_r+0x5c0>)
 800295e:	f004 020f 	and.w	r2, r4, #15
 8002962:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002966:	e9d3 2300 	ldrd	r2, r3, [r3]
 800296a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800296e:	f7fd fe63 	bl	8000638 <__aeabi_dmul>
 8002972:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002976:	1124      	asrs	r4, r4, #4
 8002978:	2300      	movs	r3, #0
 800297a:	2602      	movs	r6, #2
 800297c:	2c00      	cmp	r4, #0
 800297e:	f040 80b2 	bne.w	8002ae6 <_dtoa_r+0x4fe>
 8002982:	2b00      	cmp	r3, #0
 8002984:	d1d3      	bne.n	800292e <_dtoa_r+0x346>
 8002986:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8002988:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800298c:	2b00      	cmp	r3, #0
 800298e:	f000 80b7 	beq.w	8002b00 <_dtoa_r+0x518>
 8002992:	4b86      	ldr	r3, [pc, #536]	@ (8002bac <_dtoa_r+0x5c4>)
 8002994:	2200      	movs	r2, #0
 8002996:	4620      	mov	r0, r4
 8002998:	4629      	mov	r1, r5
 800299a:	f7fe f8bf 	bl	8000b1c <__aeabi_dcmplt>
 800299e:	2800      	cmp	r0, #0
 80029a0:	f000 80ae 	beq.w	8002b00 <_dtoa_r+0x518>
 80029a4:	9b07      	ldr	r3, [sp, #28]
 80029a6:	2b00      	cmp	r3, #0
 80029a8:	f000 80aa 	beq.w	8002b00 <_dtoa_r+0x518>
 80029ac:	9b00      	ldr	r3, [sp, #0]
 80029ae:	2b00      	cmp	r3, #0
 80029b0:	dd37      	ble.n	8002a22 <_dtoa_r+0x43a>
 80029b2:	1e7b      	subs	r3, r7, #1
 80029b4:	9304      	str	r3, [sp, #16]
 80029b6:	4620      	mov	r0, r4
 80029b8:	4b7d      	ldr	r3, [pc, #500]	@ (8002bb0 <_dtoa_r+0x5c8>)
 80029ba:	2200      	movs	r2, #0
 80029bc:	4629      	mov	r1, r5
 80029be:	f7fd fe3b 	bl	8000638 <__aeabi_dmul>
 80029c2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80029c6:	9c00      	ldr	r4, [sp, #0]
 80029c8:	3601      	adds	r6, #1
 80029ca:	4630      	mov	r0, r6
 80029cc:	f7fd fdca 	bl	8000564 <__aeabi_i2d>
 80029d0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80029d4:	f7fd fe30 	bl	8000638 <__aeabi_dmul>
 80029d8:	4b76      	ldr	r3, [pc, #472]	@ (8002bb4 <_dtoa_r+0x5cc>)
 80029da:	2200      	movs	r2, #0
 80029dc:	f7fd fc76 	bl	80002cc <__adddf3>
 80029e0:	4605      	mov	r5, r0
 80029e2:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 80029e6:	2c00      	cmp	r4, #0
 80029e8:	f040 808d 	bne.w	8002b06 <_dtoa_r+0x51e>
 80029ec:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80029f0:	4b71      	ldr	r3, [pc, #452]	@ (8002bb8 <_dtoa_r+0x5d0>)
 80029f2:	2200      	movs	r2, #0
 80029f4:	f7fd fc68 	bl	80002c8 <__aeabi_dsub>
 80029f8:	4602      	mov	r2, r0
 80029fa:	460b      	mov	r3, r1
 80029fc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002a00:	462a      	mov	r2, r5
 8002a02:	4633      	mov	r3, r6
 8002a04:	f7fe f8a8 	bl	8000b58 <__aeabi_dcmpgt>
 8002a08:	2800      	cmp	r0, #0
 8002a0a:	f040 828b 	bne.w	8002f24 <_dtoa_r+0x93c>
 8002a0e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a12:	462a      	mov	r2, r5
 8002a14:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002a18:	f7fe f880 	bl	8000b1c <__aeabi_dcmplt>
 8002a1c:	2800      	cmp	r0, #0
 8002a1e:	f040 8128 	bne.w	8002c72 <_dtoa_r+0x68a>
 8002a22:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8002a26:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8002a2a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8002a2c:	2b00      	cmp	r3, #0
 8002a2e:	f2c0 815a 	blt.w	8002ce6 <_dtoa_r+0x6fe>
 8002a32:	2f0e      	cmp	r7, #14
 8002a34:	f300 8157 	bgt.w	8002ce6 <_dtoa_r+0x6fe>
 8002a38:	4b5a      	ldr	r3, [pc, #360]	@ (8002ba4 <_dtoa_r+0x5bc>)
 8002a3a:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002a3e:	ed93 7b00 	vldr	d7, [r3]
 8002a42:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002a44:	2b00      	cmp	r3, #0
 8002a46:	ed8d 7b00 	vstr	d7, [sp]
 8002a4a:	da03      	bge.n	8002a54 <_dtoa_r+0x46c>
 8002a4c:	9b07      	ldr	r3, [sp, #28]
 8002a4e:	2b00      	cmp	r3, #0
 8002a50:	f340 8101 	ble.w	8002c56 <_dtoa_r+0x66e>
 8002a54:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002a58:	4656      	mov	r6, sl
 8002a5a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002a5e:	4620      	mov	r0, r4
 8002a60:	4629      	mov	r1, r5
 8002a62:	f7fd ff13 	bl	800088c <__aeabi_ddiv>
 8002a66:	f7fe f897 	bl	8000b98 <__aeabi_d2iz>
 8002a6a:	4680      	mov	r8, r0
 8002a6c:	f7fd fd7a 	bl	8000564 <__aeabi_i2d>
 8002a70:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002a74:	f7fd fde0 	bl	8000638 <__aeabi_dmul>
 8002a78:	4602      	mov	r2, r0
 8002a7a:	460b      	mov	r3, r1
 8002a7c:	4620      	mov	r0, r4
 8002a7e:	4629      	mov	r1, r5
 8002a80:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002a84:	f7fd fc20 	bl	80002c8 <__aeabi_dsub>
 8002a88:	f806 4b01 	strb.w	r4, [r6], #1
 8002a8c:	9d07      	ldr	r5, [sp, #28]
 8002a8e:	eba6 040a 	sub.w	r4, r6, sl
 8002a92:	42a5      	cmp	r5, r4
 8002a94:	4602      	mov	r2, r0
 8002a96:	460b      	mov	r3, r1
 8002a98:	f040 8117 	bne.w	8002cca <_dtoa_r+0x6e2>
 8002a9c:	f7fd fc16 	bl	80002cc <__adddf3>
 8002aa0:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002aa4:	4604      	mov	r4, r0
 8002aa6:	460d      	mov	r5, r1
 8002aa8:	f7fe f856 	bl	8000b58 <__aeabi_dcmpgt>
 8002aac:	2800      	cmp	r0, #0
 8002aae:	f040 80f9 	bne.w	8002ca4 <_dtoa_r+0x6bc>
 8002ab2:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002ab6:	4620      	mov	r0, r4
 8002ab8:	4629      	mov	r1, r5
 8002aba:	f7fe f825 	bl	8000b08 <__aeabi_dcmpeq>
 8002abe:	b118      	cbz	r0, 8002ac8 <_dtoa_r+0x4e0>
 8002ac0:	f018 0f01 	tst.w	r8, #1
 8002ac4:	f040 80ee 	bne.w	8002ca4 <_dtoa_r+0x6bc>
 8002ac8:	4649      	mov	r1, r9
 8002aca:	4658      	mov	r0, fp
 8002acc:	f000 fc90 	bl	80033f0 <_Bfree>
 8002ad0:	2300      	movs	r3, #0
 8002ad2:	7033      	strb	r3, [r6, #0]
 8002ad4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8002ad6:	3701      	adds	r7, #1
 8002ad8:	601f      	str	r7, [r3, #0]
 8002ada:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002adc:	2b00      	cmp	r3, #0
 8002ade:	f000 831d 	beq.w	800311c <_dtoa_r+0xb34>
 8002ae2:	601e      	str	r6, [r3, #0]
 8002ae4:	e31a      	b.n	800311c <_dtoa_r+0xb34>
 8002ae6:	07e2      	lsls	r2, r4, #31
 8002ae8:	d505      	bpl.n	8002af6 <_dtoa_r+0x50e>
 8002aea:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002aee:	f7fd fda3 	bl	8000638 <__aeabi_dmul>
 8002af2:	3601      	adds	r6, #1
 8002af4:	2301      	movs	r3, #1
 8002af6:	1064      	asrs	r4, r4, #1
 8002af8:	3508      	adds	r5, #8
 8002afa:	e73f      	b.n	800297c <_dtoa_r+0x394>
 8002afc:	2602      	movs	r6, #2
 8002afe:	e742      	b.n	8002986 <_dtoa_r+0x39e>
 8002b00:	9c07      	ldr	r4, [sp, #28]
 8002b02:	9704      	str	r7, [sp, #16]
 8002b04:	e761      	b.n	80029ca <_dtoa_r+0x3e2>
 8002b06:	4b27      	ldr	r3, [pc, #156]	@ (8002ba4 <_dtoa_r+0x5bc>)
 8002b08:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002b0a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002b0e:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002b12:	4454      	add	r4, sl
 8002b14:	2900      	cmp	r1, #0
 8002b16:	d053      	beq.n	8002bc0 <_dtoa_r+0x5d8>
 8002b18:	4928      	ldr	r1, [pc, #160]	@ (8002bbc <_dtoa_r+0x5d4>)
 8002b1a:	2000      	movs	r0, #0
 8002b1c:	f7fd feb6 	bl	800088c <__aeabi_ddiv>
 8002b20:	4633      	mov	r3, r6
 8002b22:	462a      	mov	r2, r5
 8002b24:	f7fd fbd0 	bl	80002c8 <__aeabi_dsub>
 8002b28:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002b2c:	4656      	mov	r6, sl
 8002b2e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b32:	f7fe f831 	bl	8000b98 <__aeabi_d2iz>
 8002b36:	4605      	mov	r5, r0
 8002b38:	f7fd fd14 	bl	8000564 <__aeabi_i2d>
 8002b3c:	4602      	mov	r2, r0
 8002b3e:	460b      	mov	r3, r1
 8002b40:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b44:	f7fd fbc0 	bl	80002c8 <__aeabi_dsub>
 8002b48:	3530      	adds	r5, #48	@ 0x30
 8002b4a:	4602      	mov	r2, r0
 8002b4c:	460b      	mov	r3, r1
 8002b4e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002b52:	f806 5b01 	strb.w	r5, [r6], #1
 8002b56:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002b5a:	f7fd ffdf 	bl	8000b1c <__aeabi_dcmplt>
 8002b5e:	2800      	cmp	r0, #0
 8002b60:	d171      	bne.n	8002c46 <_dtoa_r+0x65e>
 8002b62:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b66:	4911      	ldr	r1, [pc, #68]	@ (8002bac <_dtoa_r+0x5c4>)
 8002b68:	2000      	movs	r0, #0
 8002b6a:	f7fd fbad 	bl	80002c8 <__aeabi_dsub>
 8002b6e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002b72:	f7fd ffd3 	bl	8000b1c <__aeabi_dcmplt>
 8002b76:	2800      	cmp	r0, #0
 8002b78:	f040 8095 	bne.w	8002ca6 <_dtoa_r+0x6be>
 8002b7c:	42a6      	cmp	r6, r4
 8002b7e:	f43f af50 	beq.w	8002a22 <_dtoa_r+0x43a>
 8002b82:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002b86:	4b0a      	ldr	r3, [pc, #40]	@ (8002bb0 <_dtoa_r+0x5c8>)
 8002b88:	2200      	movs	r2, #0
 8002b8a:	f7fd fd55 	bl	8000638 <__aeabi_dmul>
 8002b8e:	4b08      	ldr	r3, [pc, #32]	@ (8002bb0 <_dtoa_r+0x5c8>)
 8002b90:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002b94:	2200      	movs	r2, #0
 8002b96:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b9a:	f7fd fd4d 	bl	8000638 <__aeabi_dmul>
 8002b9e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002ba2:	e7c4      	b.n	8002b2e <_dtoa_r+0x546>
 8002ba4:	08004958 	.word	0x08004958
 8002ba8:	08004930 	.word	0x08004930
 8002bac:	3ff00000 	.word	0x3ff00000
 8002bb0:	40240000 	.word	0x40240000
 8002bb4:	401c0000 	.word	0x401c0000
 8002bb8:	40140000 	.word	0x40140000
 8002bbc:	3fe00000 	.word	0x3fe00000
 8002bc0:	4631      	mov	r1, r6
 8002bc2:	4628      	mov	r0, r5
 8002bc4:	f7fd fd38 	bl	8000638 <__aeabi_dmul>
 8002bc8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002bcc:	9415      	str	r4, [sp, #84]	@ 0x54
 8002bce:	4656      	mov	r6, sl
 8002bd0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002bd4:	f7fd ffe0 	bl	8000b98 <__aeabi_d2iz>
 8002bd8:	4605      	mov	r5, r0
 8002bda:	f7fd fcc3 	bl	8000564 <__aeabi_i2d>
 8002bde:	4602      	mov	r2, r0
 8002be0:	460b      	mov	r3, r1
 8002be2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002be6:	f7fd fb6f 	bl	80002c8 <__aeabi_dsub>
 8002bea:	3530      	adds	r5, #48	@ 0x30
 8002bec:	f806 5b01 	strb.w	r5, [r6], #1
 8002bf0:	4602      	mov	r2, r0
 8002bf2:	460b      	mov	r3, r1
 8002bf4:	42a6      	cmp	r6, r4
 8002bf6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002bfa:	f04f 0200 	mov.w	r2, #0
 8002bfe:	d124      	bne.n	8002c4a <_dtoa_r+0x662>
 8002c00:	4bac      	ldr	r3, [pc, #688]	@ (8002eb4 <_dtoa_r+0x8cc>)
 8002c02:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002c06:	f7fd fb61 	bl	80002cc <__adddf3>
 8002c0a:	4602      	mov	r2, r0
 8002c0c:	460b      	mov	r3, r1
 8002c0e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c12:	f7fd ffa1 	bl	8000b58 <__aeabi_dcmpgt>
 8002c16:	2800      	cmp	r0, #0
 8002c18:	d145      	bne.n	8002ca6 <_dtoa_r+0x6be>
 8002c1a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002c1e:	49a5      	ldr	r1, [pc, #660]	@ (8002eb4 <_dtoa_r+0x8cc>)
 8002c20:	2000      	movs	r0, #0
 8002c22:	f7fd fb51 	bl	80002c8 <__aeabi_dsub>
 8002c26:	4602      	mov	r2, r0
 8002c28:	460b      	mov	r3, r1
 8002c2a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002c2e:	f7fd ff75 	bl	8000b1c <__aeabi_dcmplt>
 8002c32:	2800      	cmp	r0, #0
 8002c34:	f43f aef5 	beq.w	8002a22 <_dtoa_r+0x43a>
 8002c38:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8002c3a:	1e73      	subs	r3, r6, #1
 8002c3c:	9315      	str	r3, [sp, #84]	@ 0x54
 8002c3e:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8002c42:	2b30      	cmp	r3, #48	@ 0x30
 8002c44:	d0f8      	beq.n	8002c38 <_dtoa_r+0x650>
 8002c46:	9f04      	ldr	r7, [sp, #16]
 8002c48:	e73e      	b.n	8002ac8 <_dtoa_r+0x4e0>
 8002c4a:	4b9b      	ldr	r3, [pc, #620]	@ (8002eb8 <_dtoa_r+0x8d0>)
 8002c4c:	f7fd fcf4 	bl	8000638 <__aeabi_dmul>
 8002c50:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002c54:	e7bc      	b.n	8002bd0 <_dtoa_r+0x5e8>
 8002c56:	d10c      	bne.n	8002c72 <_dtoa_r+0x68a>
 8002c58:	4b98      	ldr	r3, [pc, #608]	@ (8002ebc <_dtoa_r+0x8d4>)
 8002c5a:	2200      	movs	r2, #0
 8002c5c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002c60:	f7fd fcea 	bl	8000638 <__aeabi_dmul>
 8002c64:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002c68:	f7fd ff6c 	bl	8000b44 <__aeabi_dcmpge>
 8002c6c:	2800      	cmp	r0, #0
 8002c6e:	f000 8157 	beq.w	8002f20 <_dtoa_r+0x938>
 8002c72:	2400      	movs	r4, #0
 8002c74:	4625      	mov	r5, r4
 8002c76:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002c78:	43db      	mvns	r3, r3
 8002c7a:	9304      	str	r3, [sp, #16]
 8002c7c:	4656      	mov	r6, sl
 8002c7e:	2700      	movs	r7, #0
 8002c80:	4621      	mov	r1, r4
 8002c82:	4658      	mov	r0, fp
 8002c84:	f000 fbb4 	bl	80033f0 <_Bfree>
 8002c88:	2d00      	cmp	r5, #0
 8002c8a:	d0dc      	beq.n	8002c46 <_dtoa_r+0x65e>
 8002c8c:	b12f      	cbz	r7, 8002c9a <_dtoa_r+0x6b2>
 8002c8e:	42af      	cmp	r7, r5
 8002c90:	d003      	beq.n	8002c9a <_dtoa_r+0x6b2>
 8002c92:	4639      	mov	r1, r7
 8002c94:	4658      	mov	r0, fp
 8002c96:	f000 fbab 	bl	80033f0 <_Bfree>
 8002c9a:	4629      	mov	r1, r5
 8002c9c:	4658      	mov	r0, fp
 8002c9e:	f000 fba7 	bl	80033f0 <_Bfree>
 8002ca2:	e7d0      	b.n	8002c46 <_dtoa_r+0x65e>
 8002ca4:	9704      	str	r7, [sp, #16]
 8002ca6:	4633      	mov	r3, r6
 8002ca8:	461e      	mov	r6, r3
 8002caa:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002cae:	2a39      	cmp	r2, #57	@ 0x39
 8002cb0:	d107      	bne.n	8002cc2 <_dtoa_r+0x6da>
 8002cb2:	459a      	cmp	sl, r3
 8002cb4:	d1f8      	bne.n	8002ca8 <_dtoa_r+0x6c0>
 8002cb6:	9a04      	ldr	r2, [sp, #16]
 8002cb8:	3201      	adds	r2, #1
 8002cba:	9204      	str	r2, [sp, #16]
 8002cbc:	2230      	movs	r2, #48	@ 0x30
 8002cbe:	f88a 2000 	strb.w	r2, [sl]
 8002cc2:	781a      	ldrb	r2, [r3, #0]
 8002cc4:	3201      	adds	r2, #1
 8002cc6:	701a      	strb	r2, [r3, #0]
 8002cc8:	e7bd      	b.n	8002c46 <_dtoa_r+0x65e>
 8002cca:	4b7b      	ldr	r3, [pc, #492]	@ (8002eb8 <_dtoa_r+0x8d0>)
 8002ccc:	2200      	movs	r2, #0
 8002cce:	f7fd fcb3 	bl	8000638 <__aeabi_dmul>
 8002cd2:	2200      	movs	r2, #0
 8002cd4:	2300      	movs	r3, #0
 8002cd6:	4604      	mov	r4, r0
 8002cd8:	460d      	mov	r5, r1
 8002cda:	f7fd ff15 	bl	8000b08 <__aeabi_dcmpeq>
 8002cde:	2800      	cmp	r0, #0
 8002ce0:	f43f aebb 	beq.w	8002a5a <_dtoa_r+0x472>
 8002ce4:	e6f0      	b.n	8002ac8 <_dtoa_r+0x4e0>
 8002ce6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8002ce8:	2a00      	cmp	r2, #0
 8002cea:	f000 80db 	beq.w	8002ea4 <_dtoa_r+0x8bc>
 8002cee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002cf0:	2a01      	cmp	r2, #1
 8002cf2:	f300 80bf 	bgt.w	8002e74 <_dtoa_r+0x88c>
 8002cf6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8002cf8:	2a00      	cmp	r2, #0
 8002cfa:	f000 80b7 	beq.w	8002e6c <_dtoa_r+0x884>
 8002cfe:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002d02:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002d04:	4646      	mov	r6, r8
 8002d06:	9a08      	ldr	r2, [sp, #32]
 8002d08:	2101      	movs	r1, #1
 8002d0a:	441a      	add	r2, r3
 8002d0c:	4658      	mov	r0, fp
 8002d0e:	4498      	add	r8, r3
 8002d10:	9208      	str	r2, [sp, #32]
 8002d12:	f000 fc21 	bl	8003558 <__i2b>
 8002d16:	4605      	mov	r5, r0
 8002d18:	b15e      	cbz	r6, 8002d32 <_dtoa_r+0x74a>
 8002d1a:	9b08      	ldr	r3, [sp, #32]
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	dd08      	ble.n	8002d32 <_dtoa_r+0x74a>
 8002d20:	42b3      	cmp	r3, r6
 8002d22:	9a08      	ldr	r2, [sp, #32]
 8002d24:	bfa8      	it	ge
 8002d26:	4633      	movge	r3, r6
 8002d28:	eba8 0803 	sub.w	r8, r8, r3
 8002d2c:	1af6      	subs	r6, r6, r3
 8002d2e:	1ad3      	subs	r3, r2, r3
 8002d30:	9308      	str	r3, [sp, #32]
 8002d32:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002d34:	b1f3      	cbz	r3, 8002d74 <_dtoa_r+0x78c>
 8002d36:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002d38:	2b00      	cmp	r3, #0
 8002d3a:	f000 80b7 	beq.w	8002eac <_dtoa_r+0x8c4>
 8002d3e:	b18c      	cbz	r4, 8002d64 <_dtoa_r+0x77c>
 8002d40:	4629      	mov	r1, r5
 8002d42:	4622      	mov	r2, r4
 8002d44:	4658      	mov	r0, fp
 8002d46:	f000 fcc7 	bl	80036d8 <__pow5mult>
 8002d4a:	464a      	mov	r2, r9
 8002d4c:	4601      	mov	r1, r0
 8002d4e:	4605      	mov	r5, r0
 8002d50:	4658      	mov	r0, fp
 8002d52:	f000 fc17 	bl	8003584 <__multiply>
 8002d56:	4649      	mov	r1, r9
 8002d58:	9004      	str	r0, [sp, #16]
 8002d5a:	4658      	mov	r0, fp
 8002d5c:	f000 fb48 	bl	80033f0 <_Bfree>
 8002d60:	9b04      	ldr	r3, [sp, #16]
 8002d62:	4699      	mov	r9, r3
 8002d64:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002d66:	1b1a      	subs	r2, r3, r4
 8002d68:	d004      	beq.n	8002d74 <_dtoa_r+0x78c>
 8002d6a:	4649      	mov	r1, r9
 8002d6c:	4658      	mov	r0, fp
 8002d6e:	f000 fcb3 	bl	80036d8 <__pow5mult>
 8002d72:	4681      	mov	r9, r0
 8002d74:	2101      	movs	r1, #1
 8002d76:	4658      	mov	r0, fp
 8002d78:	f000 fbee 	bl	8003558 <__i2b>
 8002d7c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002d7e:	4604      	mov	r4, r0
 8002d80:	2b00      	cmp	r3, #0
 8002d82:	f000 81cf 	beq.w	8003124 <_dtoa_r+0xb3c>
 8002d86:	461a      	mov	r2, r3
 8002d88:	4601      	mov	r1, r0
 8002d8a:	4658      	mov	r0, fp
 8002d8c:	f000 fca4 	bl	80036d8 <__pow5mult>
 8002d90:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002d92:	2b01      	cmp	r3, #1
 8002d94:	4604      	mov	r4, r0
 8002d96:	f300 8095 	bgt.w	8002ec4 <_dtoa_r+0x8dc>
 8002d9a:	9b02      	ldr	r3, [sp, #8]
 8002d9c:	2b00      	cmp	r3, #0
 8002d9e:	f040 8087 	bne.w	8002eb0 <_dtoa_r+0x8c8>
 8002da2:	9b03      	ldr	r3, [sp, #12]
 8002da4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002da8:	2b00      	cmp	r3, #0
 8002daa:	f040 8089 	bne.w	8002ec0 <_dtoa_r+0x8d8>
 8002dae:	9b03      	ldr	r3, [sp, #12]
 8002db0:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002db4:	0d1b      	lsrs	r3, r3, #20
 8002db6:	051b      	lsls	r3, r3, #20
 8002db8:	b12b      	cbz	r3, 8002dc6 <_dtoa_r+0x7de>
 8002dba:	9b08      	ldr	r3, [sp, #32]
 8002dbc:	3301      	adds	r3, #1
 8002dbe:	9308      	str	r3, [sp, #32]
 8002dc0:	f108 0801 	add.w	r8, r8, #1
 8002dc4:	2301      	movs	r3, #1
 8002dc6:	930a      	str	r3, [sp, #40]	@ 0x28
 8002dc8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002dca:	2b00      	cmp	r3, #0
 8002dcc:	f000 81b0 	beq.w	8003130 <_dtoa_r+0xb48>
 8002dd0:	6923      	ldr	r3, [r4, #16]
 8002dd2:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002dd6:	6918      	ldr	r0, [r3, #16]
 8002dd8:	f000 fb72 	bl	80034c0 <__hi0bits>
 8002ddc:	f1c0 0020 	rsb	r0, r0, #32
 8002de0:	9b08      	ldr	r3, [sp, #32]
 8002de2:	4418      	add	r0, r3
 8002de4:	f010 001f 	ands.w	r0, r0, #31
 8002de8:	d077      	beq.n	8002eda <_dtoa_r+0x8f2>
 8002dea:	f1c0 0320 	rsb	r3, r0, #32
 8002dee:	2b04      	cmp	r3, #4
 8002df0:	dd6b      	ble.n	8002eca <_dtoa_r+0x8e2>
 8002df2:	9b08      	ldr	r3, [sp, #32]
 8002df4:	f1c0 001c 	rsb	r0, r0, #28
 8002df8:	4403      	add	r3, r0
 8002dfa:	4480      	add	r8, r0
 8002dfc:	4406      	add	r6, r0
 8002dfe:	9308      	str	r3, [sp, #32]
 8002e00:	f1b8 0f00 	cmp.w	r8, #0
 8002e04:	dd05      	ble.n	8002e12 <_dtoa_r+0x82a>
 8002e06:	4649      	mov	r1, r9
 8002e08:	4642      	mov	r2, r8
 8002e0a:	4658      	mov	r0, fp
 8002e0c:	f000 fcbe 	bl	800378c <__lshift>
 8002e10:	4681      	mov	r9, r0
 8002e12:	9b08      	ldr	r3, [sp, #32]
 8002e14:	2b00      	cmp	r3, #0
 8002e16:	dd05      	ble.n	8002e24 <_dtoa_r+0x83c>
 8002e18:	4621      	mov	r1, r4
 8002e1a:	461a      	mov	r2, r3
 8002e1c:	4658      	mov	r0, fp
 8002e1e:	f000 fcb5 	bl	800378c <__lshift>
 8002e22:	4604      	mov	r4, r0
 8002e24:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8002e26:	2b00      	cmp	r3, #0
 8002e28:	d059      	beq.n	8002ede <_dtoa_r+0x8f6>
 8002e2a:	4621      	mov	r1, r4
 8002e2c:	4648      	mov	r0, r9
 8002e2e:	f000 fd19 	bl	8003864 <__mcmp>
 8002e32:	2800      	cmp	r0, #0
 8002e34:	da53      	bge.n	8002ede <_dtoa_r+0x8f6>
 8002e36:	1e7b      	subs	r3, r7, #1
 8002e38:	9304      	str	r3, [sp, #16]
 8002e3a:	4649      	mov	r1, r9
 8002e3c:	2300      	movs	r3, #0
 8002e3e:	220a      	movs	r2, #10
 8002e40:	4658      	mov	r0, fp
 8002e42:	f000 faf7 	bl	8003434 <__multadd>
 8002e46:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002e48:	4681      	mov	r9, r0
 8002e4a:	2b00      	cmp	r3, #0
 8002e4c:	f000 8172 	beq.w	8003134 <_dtoa_r+0xb4c>
 8002e50:	2300      	movs	r3, #0
 8002e52:	4629      	mov	r1, r5
 8002e54:	220a      	movs	r2, #10
 8002e56:	4658      	mov	r0, fp
 8002e58:	f000 faec 	bl	8003434 <__multadd>
 8002e5c:	9b00      	ldr	r3, [sp, #0]
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	4605      	mov	r5, r0
 8002e62:	dc67      	bgt.n	8002f34 <_dtoa_r+0x94c>
 8002e64:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002e66:	2b02      	cmp	r3, #2
 8002e68:	dc41      	bgt.n	8002eee <_dtoa_r+0x906>
 8002e6a:	e063      	b.n	8002f34 <_dtoa_r+0x94c>
 8002e6c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002e6e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8002e72:	e746      	b.n	8002d02 <_dtoa_r+0x71a>
 8002e74:	9b07      	ldr	r3, [sp, #28]
 8002e76:	1e5c      	subs	r4, r3, #1
 8002e78:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002e7a:	42a3      	cmp	r3, r4
 8002e7c:	bfbf      	itttt	lt
 8002e7e:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8002e80:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8002e82:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8002e84:	1ae3      	sublt	r3, r4, r3
 8002e86:	bfb4      	ite	lt
 8002e88:	18d2      	addlt	r2, r2, r3
 8002e8a:	1b1c      	subge	r4, r3, r4
 8002e8c:	9b07      	ldr	r3, [sp, #28]
 8002e8e:	bfbc      	itt	lt
 8002e90:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8002e92:	2400      	movlt	r4, #0
 8002e94:	2b00      	cmp	r3, #0
 8002e96:	bfb5      	itete	lt
 8002e98:	eba8 0603 	sublt.w	r6, r8, r3
 8002e9c:	9b07      	ldrge	r3, [sp, #28]
 8002e9e:	2300      	movlt	r3, #0
 8002ea0:	4646      	movge	r6, r8
 8002ea2:	e730      	b.n	8002d06 <_dtoa_r+0x71e>
 8002ea4:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002ea6:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8002ea8:	4646      	mov	r6, r8
 8002eaa:	e735      	b.n	8002d18 <_dtoa_r+0x730>
 8002eac:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002eae:	e75c      	b.n	8002d6a <_dtoa_r+0x782>
 8002eb0:	2300      	movs	r3, #0
 8002eb2:	e788      	b.n	8002dc6 <_dtoa_r+0x7de>
 8002eb4:	3fe00000 	.word	0x3fe00000
 8002eb8:	40240000 	.word	0x40240000
 8002ebc:	40140000 	.word	0x40140000
 8002ec0:	9b02      	ldr	r3, [sp, #8]
 8002ec2:	e780      	b.n	8002dc6 <_dtoa_r+0x7de>
 8002ec4:	2300      	movs	r3, #0
 8002ec6:	930a      	str	r3, [sp, #40]	@ 0x28
 8002ec8:	e782      	b.n	8002dd0 <_dtoa_r+0x7e8>
 8002eca:	d099      	beq.n	8002e00 <_dtoa_r+0x818>
 8002ecc:	9a08      	ldr	r2, [sp, #32]
 8002ece:	331c      	adds	r3, #28
 8002ed0:	441a      	add	r2, r3
 8002ed2:	4498      	add	r8, r3
 8002ed4:	441e      	add	r6, r3
 8002ed6:	9208      	str	r2, [sp, #32]
 8002ed8:	e792      	b.n	8002e00 <_dtoa_r+0x818>
 8002eda:	4603      	mov	r3, r0
 8002edc:	e7f6      	b.n	8002ecc <_dtoa_r+0x8e4>
 8002ede:	9b07      	ldr	r3, [sp, #28]
 8002ee0:	9704      	str	r7, [sp, #16]
 8002ee2:	2b00      	cmp	r3, #0
 8002ee4:	dc20      	bgt.n	8002f28 <_dtoa_r+0x940>
 8002ee6:	9300      	str	r3, [sp, #0]
 8002ee8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002eea:	2b02      	cmp	r3, #2
 8002eec:	dd1e      	ble.n	8002f2c <_dtoa_r+0x944>
 8002eee:	9b00      	ldr	r3, [sp, #0]
 8002ef0:	2b00      	cmp	r3, #0
 8002ef2:	f47f aec0 	bne.w	8002c76 <_dtoa_r+0x68e>
 8002ef6:	4621      	mov	r1, r4
 8002ef8:	2205      	movs	r2, #5
 8002efa:	4658      	mov	r0, fp
 8002efc:	f000 fa9a 	bl	8003434 <__multadd>
 8002f00:	4601      	mov	r1, r0
 8002f02:	4604      	mov	r4, r0
 8002f04:	4648      	mov	r0, r9
 8002f06:	f000 fcad 	bl	8003864 <__mcmp>
 8002f0a:	2800      	cmp	r0, #0
 8002f0c:	f77f aeb3 	ble.w	8002c76 <_dtoa_r+0x68e>
 8002f10:	4656      	mov	r6, sl
 8002f12:	2331      	movs	r3, #49	@ 0x31
 8002f14:	f806 3b01 	strb.w	r3, [r6], #1
 8002f18:	9b04      	ldr	r3, [sp, #16]
 8002f1a:	3301      	adds	r3, #1
 8002f1c:	9304      	str	r3, [sp, #16]
 8002f1e:	e6ae      	b.n	8002c7e <_dtoa_r+0x696>
 8002f20:	9c07      	ldr	r4, [sp, #28]
 8002f22:	9704      	str	r7, [sp, #16]
 8002f24:	4625      	mov	r5, r4
 8002f26:	e7f3      	b.n	8002f10 <_dtoa_r+0x928>
 8002f28:	9b07      	ldr	r3, [sp, #28]
 8002f2a:	9300      	str	r3, [sp, #0]
 8002f2c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002f2e:	2b00      	cmp	r3, #0
 8002f30:	f000 8104 	beq.w	800313c <_dtoa_r+0xb54>
 8002f34:	2e00      	cmp	r6, #0
 8002f36:	dd05      	ble.n	8002f44 <_dtoa_r+0x95c>
 8002f38:	4629      	mov	r1, r5
 8002f3a:	4632      	mov	r2, r6
 8002f3c:	4658      	mov	r0, fp
 8002f3e:	f000 fc25 	bl	800378c <__lshift>
 8002f42:	4605      	mov	r5, r0
 8002f44:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002f46:	2b00      	cmp	r3, #0
 8002f48:	d05a      	beq.n	8003000 <_dtoa_r+0xa18>
 8002f4a:	6869      	ldr	r1, [r5, #4]
 8002f4c:	4658      	mov	r0, fp
 8002f4e:	f000 fa0f 	bl	8003370 <_Balloc>
 8002f52:	4606      	mov	r6, r0
 8002f54:	b928      	cbnz	r0, 8002f62 <_dtoa_r+0x97a>
 8002f56:	4b84      	ldr	r3, [pc, #528]	@ (8003168 <_dtoa_r+0xb80>)
 8002f58:	4602      	mov	r2, r0
 8002f5a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8002f5e:	f7ff bb5a 	b.w	8002616 <_dtoa_r+0x2e>
 8002f62:	692a      	ldr	r2, [r5, #16]
 8002f64:	3202      	adds	r2, #2
 8002f66:	0092      	lsls	r2, r2, #2
 8002f68:	f105 010c 	add.w	r1, r5, #12
 8002f6c:	300c      	adds	r0, #12
 8002f6e:	f000 ffaf 	bl	8003ed0 <memcpy>
 8002f72:	2201      	movs	r2, #1
 8002f74:	4631      	mov	r1, r6
 8002f76:	4658      	mov	r0, fp
 8002f78:	f000 fc08 	bl	800378c <__lshift>
 8002f7c:	f10a 0301 	add.w	r3, sl, #1
 8002f80:	9307      	str	r3, [sp, #28]
 8002f82:	9b00      	ldr	r3, [sp, #0]
 8002f84:	4453      	add	r3, sl
 8002f86:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002f88:	9b02      	ldr	r3, [sp, #8]
 8002f8a:	f003 0301 	and.w	r3, r3, #1
 8002f8e:	462f      	mov	r7, r5
 8002f90:	930a      	str	r3, [sp, #40]	@ 0x28
 8002f92:	4605      	mov	r5, r0
 8002f94:	9b07      	ldr	r3, [sp, #28]
 8002f96:	4621      	mov	r1, r4
 8002f98:	3b01      	subs	r3, #1
 8002f9a:	4648      	mov	r0, r9
 8002f9c:	9300      	str	r3, [sp, #0]
 8002f9e:	f7ff fa98 	bl	80024d2 <quorem>
 8002fa2:	4639      	mov	r1, r7
 8002fa4:	9002      	str	r0, [sp, #8]
 8002fa6:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8002faa:	4648      	mov	r0, r9
 8002fac:	f000 fc5a 	bl	8003864 <__mcmp>
 8002fb0:	462a      	mov	r2, r5
 8002fb2:	9008      	str	r0, [sp, #32]
 8002fb4:	4621      	mov	r1, r4
 8002fb6:	4658      	mov	r0, fp
 8002fb8:	f000 fc70 	bl	800389c <__mdiff>
 8002fbc:	68c2      	ldr	r2, [r0, #12]
 8002fbe:	4606      	mov	r6, r0
 8002fc0:	bb02      	cbnz	r2, 8003004 <_dtoa_r+0xa1c>
 8002fc2:	4601      	mov	r1, r0
 8002fc4:	4648      	mov	r0, r9
 8002fc6:	f000 fc4d 	bl	8003864 <__mcmp>
 8002fca:	4602      	mov	r2, r0
 8002fcc:	4631      	mov	r1, r6
 8002fce:	4658      	mov	r0, fp
 8002fd0:	920e      	str	r2, [sp, #56]	@ 0x38
 8002fd2:	f000 fa0d 	bl	80033f0 <_Bfree>
 8002fd6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002fd8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8002fda:	9e07      	ldr	r6, [sp, #28]
 8002fdc:	ea43 0102 	orr.w	r1, r3, r2
 8002fe0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002fe2:	4319      	orrs	r1, r3
 8002fe4:	d110      	bne.n	8003008 <_dtoa_r+0xa20>
 8002fe6:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002fea:	d029      	beq.n	8003040 <_dtoa_r+0xa58>
 8002fec:	9b08      	ldr	r3, [sp, #32]
 8002fee:	2b00      	cmp	r3, #0
 8002ff0:	dd02      	ble.n	8002ff8 <_dtoa_r+0xa10>
 8002ff2:	9b02      	ldr	r3, [sp, #8]
 8002ff4:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8002ff8:	9b00      	ldr	r3, [sp, #0]
 8002ffa:	f883 8000 	strb.w	r8, [r3]
 8002ffe:	e63f      	b.n	8002c80 <_dtoa_r+0x698>
 8003000:	4628      	mov	r0, r5
 8003002:	e7bb      	b.n	8002f7c <_dtoa_r+0x994>
 8003004:	2201      	movs	r2, #1
 8003006:	e7e1      	b.n	8002fcc <_dtoa_r+0x9e4>
 8003008:	9b08      	ldr	r3, [sp, #32]
 800300a:	2b00      	cmp	r3, #0
 800300c:	db04      	blt.n	8003018 <_dtoa_r+0xa30>
 800300e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8003010:	430b      	orrs	r3, r1
 8003012:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8003014:	430b      	orrs	r3, r1
 8003016:	d120      	bne.n	800305a <_dtoa_r+0xa72>
 8003018:	2a00      	cmp	r2, #0
 800301a:	dded      	ble.n	8002ff8 <_dtoa_r+0xa10>
 800301c:	4649      	mov	r1, r9
 800301e:	2201      	movs	r2, #1
 8003020:	4658      	mov	r0, fp
 8003022:	f000 fbb3 	bl	800378c <__lshift>
 8003026:	4621      	mov	r1, r4
 8003028:	4681      	mov	r9, r0
 800302a:	f000 fc1b 	bl	8003864 <__mcmp>
 800302e:	2800      	cmp	r0, #0
 8003030:	dc03      	bgt.n	800303a <_dtoa_r+0xa52>
 8003032:	d1e1      	bne.n	8002ff8 <_dtoa_r+0xa10>
 8003034:	f018 0f01 	tst.w	r8, #1
 8003038:	d0de      	beq.n	8002ff8 <_dtoa_r+0xa10>
 800303a:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800303e:	d1d8      	bne.n	8002ff2 <_dtoa_r+0xa0a>
 8003040:	9a00      	ldr	r2, [sp, #0]
 8003042:	2339      	movs	r3, #57	@ 0x39
 8003044:	7013      	strb	r3, [r2, #0]
 8003046:	4633      	mov	r3, r6
 8003048:	461e      	mov	r6, r3
 800304a:	3b01      	subs	r3, #1
 800304c:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8003050:	2a39      	cmp	r2, #57	@ 0x39
 8003052:	d052      	beq.n	80030fa <_dtoa_r+0xb12>
 8003054:	3201      	adds	r2, #1
 8003056:	701a      	strb	r2, [r3, #0]
 8003058:	e612      	b.n	8002c80 <_dtoa_r+0x698>
 800305a:	2a00      	cmp	r2, #0
 800305c:	dd07      	ble.n	800306e <_dtoa_r+0xa86>
 800305e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003062:	d0ed      	beq.n	8003040 <_dtoa_r+0xa58>
 8003064:	9a00      	ldr	r2, [sp, #0]
 8003066:	f108 0301 	add.w	r3, r8, #1
 800306a:	7013      	strb	r3, [r2, #0]
 800306c:	e608      	b.n	8002c80 <_dtoa_r+0x698>
 800306e:	9b07      	ldr	r3, [sp, #28]
 8003070:	9a07      	ldr	r2, [sp, #28]
 8003072:	f803 8c01 	strb.w	r8, [r3, #-1]
 8003076:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003078:	4293      	cmp	r3, r2
 800307a:	d028      	beq.n	80030ce <_dtoa_r+0xae6>
 800307c:	4649      	mov	r1, r9
 800307e:	2300      	movs	r3, #0
 8003080:	220a      	movs	r2, #10
 8003082:	4658      	mov	r0, fp
 8003084:	f000 f9d6 	bl	8003434 <__multadd>
 8003088:	42af      	cmp	r7, r5
 800308a:	4681      	mov	r9, r0
 800308c:	f04f 0300 	mov.w	r3, #0
 8003090:	f04f 020a 	mov.w	r2, #10
 8003094:	4639      	mov	r1, r7
 8003096:	4658      	mov	r0, fp
 8003098:	d107      	bne.n	80030aa <_dtoa_r+0xac2>
 800309a:	f000 f9cb 	bl	8003434 <__multadd>
 800309e:	4607      	mov	r7, r0
 80030a0:	4605      	mov	r5, r0
 80030a2:	9b07      	ldr	r3, [sp, #28]
 80030a4:	3301      	adds	r3, #1
 80030a6:	9307      	str	r3, [sp, #28]
 80030a8:	e774      	b.n	8002f94 <_dtoa_r+0x9ac>
 80030aa:	f000 f9c3 	bl	8003434 <__multadd>
 80030ae:	4629      	mov	r1, r5
 80030b0:	4607      	mov	r7, r0
 80030b2:	2300      	movs	r3, #0
 80030b4:	220a      	movs	r2, #10
 80030b6:	4658      	mov	r0, fp
 80030b8:	f000 f9bc 	bl	8003434 <__multadd>
 80030bc:	4605      	mov	r5, r0
 80030be:	e7f0      	b.n	80030a2 <_dtoa_r+0xaba>
 80030c0:	9b00      	ldr	r3, [sp, #0]
 80030c2:	2b00      	cmp	r3, #0
 80030c4:	bfcc      	ite	gt
 80030c6:	461e      	movgt	r6, r3
 80030c8:	2601      	movle	r6, #1
 80030ca:	4456      	add	r6, sl
 80030cc:	2700      	movs	r7, #0
 80030ce:	4649      	mov	r1, r9
 80030d0:	2201      	movs	r2, #1
 80030d2:	4658      	mov	r0, fp
 80030d4:	f000 fb5a 	bl	800378c <__lshift>
 80030d8:	4621      	mov	r1, r4
 80030da:	4681      	mov	r9, r0
 80030dc:	f000 fbc2 	bl	8003864 <__mcmp>
 80030e0:	2800      	cmp	r0, #0
 80030e2:	dcb0      	bgt.n	8003046 <_dtoa_r+0xa5e>
 80030e4:	d102      	bne.n	80030ec <_dtoa_r+0xb04>
 80030e6:	f018 0f01 	tst.w	r8, #1
 80030ea:	d1ac      	bne.n	8003046 <_dtoa_r+0xa5e>
 80030ec:	4633      	mov	r3, r6
 80030ee:	461e      	mov	r6, r3
 80030f0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80030f4:	2a30      	cmp	r2, #48	@ 0x30
 80030f6:	d0fa      	beq.n	80030ee <_dtoa_r+0xb06>
 80030f8:	e5c2      	b.n	8002c80 <_dtoa_r+0x698>
 80030fa:	459a      	cmp	sl, r3
 80030fc:	d1a4      	bne.n	8003048 <_dtoa_r+0xa60>
 80030fe:	9b04      	ldr	r3, [sp, #16]
 8003100:	3301      	adds	r3, #1
 8003102:	9304      	str	r3, [sp, #16]
 8003104:	2331      	movs	r3, #49	@ 0x31
 8003106:	f88a 3000 	strb.w	r3, [sl]
 800310a:	e5b9      	b.n	8002c80 <_dtoa_r+0x698>
 800310c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800310e:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800316c <_dtoa_r+0xb84>
 8003112:	b11b      	cbz	r3, 800311c <_dtoa_r+0xb34>
 8003114:	f10a 0308 	add.w	r3, sl, #8
 8003118:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800311a:	6013      	str	r3, [r2, #0]
 800311c:	4650      	mov	r0, sl
 800311e:	b019      	add	sp, #100	@ 0x64
 8003120:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003124:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003126:	2b01      	cmp	r3, #1
 8003128:	f77f ae37 	ble.w	8002d9a <_dtoa_r+0x7b2>
 800312c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800312e:	930a      	str	r3, [sp, #40]	@ 0x28
 8003130:	2001      	movs	r0, #1
 8003132:	e655      	b.n	8002de0 <_dtoa_r+0x7f8>
 8003134:	9b00      	ldr	r3, [sp, #0]
 8003136:	2b00      	cmp	r3, #0
 8003138:	f77f aed6 	ble.w	8002ee8 <_dtoa_r+0x900>
 800313c:	4656      	mov	r6, sl
 800313e:	4621      	mov	r1, r4
 8003140:	4648      	mov	r0, r9
 8003142:	f7ff f9c6 	bl	80024d2 <quorem>
 8003146:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 800314a:	f806 8b01 	strb.w	r8, [r6], #1
 800314e:	9b00      	ldr	r3, [sp, #0]
 8003150:	eba6 020a 	sub.w	r2, r6, sl
 8003154:	4293      	cmp	r3, r2
 8003156:	ddb3      	ble.n	80030c0 <_dtoa_r+0xad8>
 8003158:	4649      	mov	r1, r9
 800315a:	2300      	movs	r3, #0
 800315c:	220a      	movs	r2, #10
 800315e:	4658      	mov	r0, fp
 8003160:	f000 f968 	bl	8003434 <__multadd>
 8003164:	4681      	mov	r9, r0
 8003166:	e7ea      	b.n	800313e <_dtoa_r+0xb56>
 8003168:	080048b3 	.word	0x080048b3
 800316c:	08004837 	.word	0x08004837

08003170 <_free_r>:
 8003170:	b538      	push	{r3, r4, r5, lr}
 8003172:	4605      	mov	r5, r0
 8003174:	2900      	cmp	r1, #0
 8003176:	d041      	beq.n	80031fc <_free_r+0x8c>
 8003178:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800317c:	1f0c      	subs	r4, r1, #4
 800317e:	2b00      	cmp	r3, #0
 8003180:	bfb8      	it	lt
 8003182:	18e4      	addlt	r4, r4, r3
 8003184:	f000 f8e8 	bl	8003358 <__malloc_lock>
 8003188:	4a1d      	ldr	r2, [pc, #116]	@ (8003200 <_free_r+0x90>)
 800318a:	6813      	ldr	r3, [r2, #0]
 800318c:	b933      	cbnz	r3, 800319c <_free_r+0x2c>
 800318e:	6063      	str	r3, [r4, #4]
 8003190:	6014      	str	r4, [r2, #0]
 8003192:	4628      	mov	r0, r5
 8003194:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003198:	f000 b8e4 	b.w	8003364 <__malloc_unlock>
 800319c:	42a3      	cmp	r3, r4
 800319e:	d908      	bls.n	80031b2 <_free_r+0x42>
 80031a0:	6820      	ldr	r0, [r4, #0]
 80031a2:	1821      	adds	r1, r4, r0
 80031a4:	428b      	cmp	r3, r1
 80031a6:	bf01      	itttt	eq
 80031a8:	6819      	ldreq	r1, [r3, #0]
 80031aa:	685b      	ldreq	r3, [r3, #4]
 80031ac:	1809      	addeq	r1, r1, r0
 80031ae:	6021      	streq	r1, [r4, #0]
 80031b0:	e7ed      	b.n	800318e <_free_r+0x1e>
 80031b2:	461a      	mov	r2, r3
 80031b4:	685b      	ldr	r3, [r3, #4]
 80031b6:	b10b      	cbz	r3, 80031bc <_free_r+0x4c>
 80031b8:	42a3      	cmp	r3, r4
 80031ba:	d9fa      	bls.n	80031b2 <_free_r+0x42>
 80031bc:	6811      	ldr	r1, [r2, #0]
 80031be:	1850      	adds	r0, r2, r1
 80031c0:	42a0      	cmp	r0, r4
 80031c2:	d10b      	bne.n	80031dc <_free_r+0x6c>
 80031c4:	6820      	ldr	r0, [r4, #0]
 80031c6:	4401      	add	r1, r0
 80031c8:	1850      	adds	r0, r2, r1
 80031ca:	4283      	cmp	r3, r0
 80031cc:	6011      	str	r1, [r2, #0]
 80031ce:	d1e0      	bne.n	8003192 <_free_r+0x22>
 80031d0:	6818      	ldr	r0, [r3, #0]
 80031d2:	685b      	ldr	r3, [r3, #4]
 80031d4:	6053      	str	r3, [r2, #4]
 80031d6:	4408      	add	r0, r1
 80031d8:	6010      	str	r0, [r2, #0]
 80031da:	e7da      	b.n	8003192 <_free_r+0x22>
 80031dc:	d902      	bls.n	80031e4 <_free_r+0x74>
 80031de:	230c      	movs	r3, #12
 80031e0:	602b      	str	r3, [r5, #0]
 80031e2:	e7d6      	b.n	8003192 <_free_r+0x22>
 80031e4:	6820      	ldr	r0, [r4, #0]
 80031e6:	1821      	adds	r1, r4, r0
 80031e8:	428b      	cmp	r3, r1
 80031ea:	bf04      	itt	eq
 80031ec:	6819      	ldreq	r1, [r3, #0]
 80031ee:	685b      	ldreq	r3, [r3, #4]
 80031f0:	6063      	str	r3, [r4, #4]
 80031f2:	bf04      	itt	eq
 80031f4:	1809      	addeq	r1, r1, r0
 80031f6:	6021      	streq	r1, [r4, #0]
 80031f8:	6054      	str	r4, [r2, #4]
 80031fa:	e7ca      	b.n	8003192 <_free_r+0x22>
 80031fc:	bd38      	pop	{r3, r4, r5, pc}
 80031fe:	bf00      	nop
 8003200:	20000384 	.word	0x20000384

08003204 <malloc>:
 8003204:	4b02      	ldr	r3, [pc, #8]	@ (8003210 <malloc+0xc>)
 8003206:	4601      	mov	r1, r0
 8003208:	6818      	ldr	r0, [r3, #0]
 800320a:	f000 b825 	b.w	8003258 <_malloc_r>
 800320e:	bf00      	nop
 8003210:	2000000c 	.word	0x2000000c

08003214 <sbrk_aligned>:
 8003214:	b570      	push	{r4, r5, r6, lr}
 8003216:	4e0f      	ldr	r6, [pc, #60]	@ (8003254 <sbrk_aligned+0x40>)
 8003218:	460c      	mov	r4, r1
 800321a:	6831      	ldr	r1, [r6, #0]
 800321c:	4605      	mov	r5, r0
 800321e:	b911      	cbnz	r1, 8003226 <sbrk_aligned+0x12>
 8003220:	f000 fe46 	bl	8003eb0 <_sbrk_r>
 8003224:	6030      	str	r0, [r6, #0]
 8003226:	4621      	mov	r1, r4
 8003228:	4628      	mov	r0, r5
 800322a:	f000 fe41 	bl	8003eb0 <_sbrk_r>
 800322e:	1c43      	adds	r3, r0, #1
 8003230:	d103      	bne.n	800323a <sbrk_aligned+0x26>
 8003232:	f04f 34ff 	mov.w	r4, #4294967295
 8003236:	4620      	mov	r0, r4
 8003238:	bd70      	pop	{r4, r5, r6, pc}
 800323a:	1cc4      	adds	r4, r0, #3
 800323c:	f024 0403 	bic.w	r4, r4, #3
 8003240:	42a0      	cmp	r0, r4
 8003242:	d0f8      	beq.n	8003236 <sbrk_aligned+0x22>
 8003244:	1a21      	subs	r1, r4, r0
 8003246:	4628      	mov	r0, r5
 8003248:	f000 fe32 	bl	8003eb0 <_sbrk_r>
 800324c:	3001      	adds	r0, #1
 800324e:	d1f2      	bne.n	8003236 <sbrk_aligned+0x22>
 8003250:	e7ef      	b.n	8003232 <sbrk_aligned+0x1e>
 8003252:	bf00      	nop
 8003254:	20000380 	.word	0x20000380

08003258 <_malloc_r>:
 8003258:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800325c:	1ccd      	adds	r5, r1, #3
 800325e:	f025 0503 	bic.w	r5, r5, #3
 8003262:	3508      	adds	r5, #8
 8003264:	2d0c      	cmp	r5, #12
 8003266:	bf38      	it	cc
 8003268:	250c      	movcc	r5, #12
 800326a:	2d00      	cmp	r5, #0
 800326c:	4606      	mov	r6, r0
 800326e:	db01      	blt.n	8003274 <_malloc_r+0x1c>
 8003270:	42a9      	cmp	r1, r5
 8003272:	d904      	bls.n	800327e <_malloc_r+0x26>
 8003274:	230c      	movs	r3, #12
 8003276:	6033      	str	r3, [r6, #0]
 8003278:	2000      	movs	r0, #0
 800327a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800327e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8003354 <_malloc_r+0xfc>
 8003282:	f000 f869 	bl	8003358 <__malloc_lock>
 8003286:	f8d8 3000 	ldr.w	r3, [r8]
 800328a:	461c      	mov	r4, r3
 800328c:	bb44      	cbnz	r4, 80032e0 <_malloc_r+0x88>
 800328e:	4629      	mov	r1, r5
 8003290:	4630      	mov	r0, r6
 8003292:	f7ff ffbf 	bl	8003214 <sbrk_aligned>
 8003296:	1c43      	adds	r3, r0, #1
 8003298:	4604      	mov	r4, r0
 800329a:	d158      	bne.n	800334e <_malloc_r+0xf6>
 800329c:	f8d8 4000 	ldr.w	r4, [r8]
 80032a0:	4627      	mov	r7, r4
 80032a2:	2f00      	cmp	r7, #0
 80032a4:	d143      	bne.n	800332e <_malloc_r+0xd6>
 80032a6:	2c00      	cmp	r4, #0
 80032a8:	d04b      	beq.n	8003342 <_malloc_r+0xea>
 80032aa:	6823      	ldr	r3, [r4, #0]
 80032ac:	4639      	mov	r1, r7
 80032ae:	4630      	mov	r0, r6
 80032b0:	eb04 0903 	add.w	r9, r4, r3
 80032b4:	f000 fdfc 	bl	8003eb0 <_sbrk_r>
 80032b8:	4581      	cmp	r9, r0
 80032ba:	d142      	bne.n	8003342 <_malloc_r+0xea>
 80032bc:	6821      	ldr	r1, [r4, #0]
 80032be:	1a6d      	subs	r5, r5, r1
 80032c0:	4629      	mov	r1, r5
 80032c2:	4630      	mov	r0, r6
 80032c4:	f7ff ffa6 	bl	8003214 <sbrk_aligned>
 80032c8:	3001      	adds	r0, #1
 80032ca:	d03a      	beq.n	8003342 <_malloc_r+0xea>
 80032cc:	6823      	ldr	r3, [r4, #0]
 80032ce:	442b      	add	r3, r5
 80032d0:	6023      	str	r3, [r4, #0]
 80032d2:	f8d8 3000 	ldr.w	r3, [r8]
 80032d6:	685a      	ldr	r2, [r3, #4]
 80032d8:	bb62      	cbnz	r2, 8003334 <_malloc_r+0xdc>
 80032da:	f8c8 7000 	str.w	r7, [r8]
 80032de:	e00f      	b.n	8003300 <_malloc_r+0xa8>
 80032e0:	6822      	ldr	r2, [r4, #0]
 80032e2:	1b52      	subs	r2, r2, r5
 80032e4:	d420      	bmi.n	8003328 <_malloc_r+0xd0>
 80032e6:	2a0b      	cmp	r2, #11
 80032e8:	d917      	bls.n	800331a <_malloc_r+0xc2>
 80032ea:	1961      	adds	r1, r4, r5
 80032ec:	42a3      	cmp	r3, r4
 80032ee:	6025      	str	r5, [r4, #0]
 80032f0:	bf18      	it	ne
 80032f2:	6059      	strne	r1, [r3, #4]
 80032f4:	6863      	ldr	r3, [r4, #4]
 80032f6:	bf08      	it	eq
 80032f8:	f8c8 1000 	streq.w	r1, [r8]
 80032fc:	5162      	str	r2, [r4, r5]
 80032fe:	604b      	str	r3, [r1, #4]
 8003300:	4630      	mov	r0, r6
 8003302:	f000 f82f 	bl	8003364 <__malloc_unlock>
 8003306:	f104 000b 	add.w	r0, r4, #11
 800330a:	1d23      	adds	r3, r4, #4
 800330c:	f020 0007 	bic.w	r0, r0, #7
 8003310:	1ac2      	subs	r2, r0, r3
 8003312:	bf1c      	itt	ne
 8003314:	1a1b      	subne	r3, r3, r0
 8003316:	50a3      	strne	r3, [r4, r2]
 8003318:	e7af      	b.n	800327a <_malloc_r+0x22>
 800331a:	6862      	ldr	r2, [r4, #4]
 800331c:	42a3      	cmp	r3, r4
 800331e:	bf0c      	ite	eq
 8003320:	f8c8 2000 	streq.w	r2, [r8]
 8003324:	605a      	strne	r2, [r3, #4]
 8003326:	e7eb      	b.n	8003300 <_malloc_r+0xa8>
 8003328:	4623      	mov	r3, r4
 800332a:	6864      	ldr	r4, [r4, #4]
 800332c:	e7ae      	b.n	800328c <_malloc_r+0x34>
 800332e:	463c      	mov	r4, r7
 8003330:	687f      	ldr	r7, [r7, #4]
 8003332:	e7b6      	b.n	80032a2 <_malloc_r+0x4a>
 8003334:	461a      	mov	r2, r3
 8003336:	685b      	ldr	r3, [r3, #4]
 8003338:	42a3      	cmp	r3, r4
 800333a:	d1fb      	bne.n	8003334 <_malloc_r+0xdc>
 800333c:	2300      	movs	r3, #0
 800333e:	6053      	str	r3, [r2, #4]
 8003340:	e7de      	b.n	8003300 <_malloc_r+0xa8>
 8003342:	230c      	movs	r3, #12
 8003344:	6033      	str	r3, [r6, #0]
 8003346:	4630      	mov	r0, r6
 8003348:	f000 f80c 	bl	8003364 <__malloc_unlock>
 800334c:	e794      	b.n	8003278 <_malloc_r+0x20>
 800334e:	6005      	str	r5, [r0, #0]
 8003350:	e7d6      	b.n	8003300 <_malloc_r+0xa8>
 8003352:	bf00      	nop
 8003354:	20000384 	.word	0x20000384

08003358 <__malloc_lock>:
 8003358:	4801      	ldr	r0, [pc, #4]	@ (8003360 <__malloc_lock+0x8>)
 800335a:	f7ff b8b8 	b.w	80024ce <__retarget_lock_acquire_recursive>
 800335e:	bf00      	nop
 8003360:	2000037c 	.word	0x2000037c

08003364 <__malloc_unlock>:
 8003364:	4801      	ldr	r0, [pc, #4]	@ (800336c <__malloc_unlock+0x8>)
 8003366:	f7ff b8b3 	b.w	80024d0 <__retarget_lock_release_recursive>
 800336a:	bf00      	nop
 800336c:	2000037c 	.word	0x2000037c

08003370 <_Balloc>:
 8003370:	b570      	push	{r4, r5, r6, lr}
 8003372:	69c6      	ldr	r6, [r0, #28]
 8003374:	4604      	mov	r4, r0
 8003376:	460d      	mov	r5, r1
 8003378:	b976      	cbnz	r6, 8003398 <_Balloc+0x28>
 800337a:	2010      	movs	r0, #16
 800337c:	f7ff ff42 	bl	8003204 <malloc>
 8003380:	4602      	mov	r2, r0
 8003382:	61e0      	str	r0, [r4, #28]
 8003384:	b920      	cbnz	r0, 8003390 <_Balloc+0x20>
 8003386:	4b18      	ldr	r3, [pc, #96]	@ (80033e8 <_Balloc+0x78>)
 8003388:	4818      	ldr	r0, [pc, #96]	@ (80033ec <_Balloc+0x7c>)
 800338a:	216b      	movs	r1, #107	@ 0x6b
 800338c:	f000 fdae 	bl	8003eec <__assert_func>
 8003390:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003394:	6006      	str	r6, [r0, #0]
 8003396:	60c6      	str	r6, [r0, #12]
 8003398:	69e6      	ldr	r6, [r4, #28]
 800339a:	68f3      	ldr	r3, [r6, #12]
 800339c:	b183      	cbz	r3, 80033c0 <_Balloc+0x50>
 800339e:	69e3      	ldr	r3, [r4, #28]
 80033a0:	68db      	ldr	r3, [r3, #12]
 80033a2:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80033a6:	b9b8      	cbnz	r0, 80033d8 <_Balloc+0x68>
 80033a8:	2101      	movs	r1, #1
 80033aa:	fa01 f605 	lsl.w	r6, r1, r5
 80033ae:	1d72      	adds	r2, r6, #5
 80033b0:	0092      	lsls	r2, r2, #2
 80033b2:	4620      	mov	r0, r4
 80033b4:	f000 fdb8 	bl	8003f28 <_calloc_r>
 80033b8:	b160      	cbz	r0, 80033d4 <_Balloc+0x64>
 80033ba:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80033be:	e00e      	b.n	80033de <_Balloc+0x6e>
 80033c0:	2221      	movs	r2, #33	@ 0x21
 80033c2:	2104      	movs	r1, #4
 80033c4:	4620      	mov	r0, r4
 80033c6:	f000 fdaf 	bl	8003f28 <_calloc_r>
 80033ca:	69e3      	ldr	r3, [r4, #28]
 80033cc:	60f0      	str	r0, [r6, #12]
 80033ce:	68db      	ldr	r3, [r3, #12]
 80033d0:	2b00      	cmp	r3, #0
 80033d2:	d1e4      	bne.n	800339e <_Balloc+0x2e>
 80033d4:	2000      	movs	r0, #0
 80033d6:	bd70      	pop	{r4, r5, r6, pc}
 80033d8:	6802      	ldr	r2, [r0, #0]
 80033da:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80033de:	2300      	movs	r3, #0
 80033e0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80033e4:	e7f7      	b.n	80033d6 <_Balloc+0x66>
 80033e6:	bf00      	nop
 80033e8:	08004844 	.word	0x08004844
 80033ec:	080048c4 	.word	0x080048c4

080033f0 <_Bfree>:
 80033f0:	b570      	push	{r4, r5, r6, lr}
 80033f2:	69c6      	ldr	r6, [r0, #28]
 80033f4:	4605      	mov	r5, r0
 80033f6:	460c      	mov	r4, r1
 80033f8:	b976      	cbnz	r6, 8003418 <_Bfree+0x28>
 80033fa:	2010      	movs	r0, #16
 80033fc:	f7ff ff02 	bl	8003204 <malloc>
 8003400:	4602      	mov	r2, r0
 8003402:	61e8      	str	r0, [r5, #28]
 8003404:	b920      	cbnz	r0, 8003410 <_Bfree+0x20>
 8003406:	4b09      	ldr	r3, [pc, #36]	@ (800342c <_Bfree+0x3c>)
 8003408:	4809      	ldr	r0, [pc, #36]	@ (8003430 <_Bfree+0x40>)
 800340a:	218f      	movs	r1, #143	@ 0x8f
 800340c:	f000 fd6e 	bl	8003eec <__assert_func>
 8003410:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003414:	6006      	str	r6, [r0, #0]
 8003416:	60c6      	str	r6, [r0, #12]
 8003418:	b13c      	cbz	r4, 800342a <_Bfree+0x3a>
 800341a:	69eb      	ldr	r3, [r5, #28]
 800341c:	6862      	ldr	r2, [r4, #4]
 800341e:	68db      	ldr	r3, [r3, #12]
 8003420:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003424:	6021      	str	r1, [r4, #0]
 8003426:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800342a:	bd70      	pop	{r4, r5, r6, pc}
 800342c:	08004844 	.word	0x08004844
 8003430:	080048c4 	.word	0x080048c4

08003434 <__multadd>:
 8003434:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003438:	690d      	ldr	r5, [r1, #16]
 800343a:	4607      	mov	r7, r0
 800343c:	460c      	mov	r4, r1
 800343e:	461e      	mov	r6, r3
 8003440:	f101 0c14 	add.w	ip, r1, #20
 8003444:	2000      	movs	r0, #0
 8003446:	f8dc 3000 	ldr.w	r3, [ip]
 800344a:	b299      	uxth	r1, r3
 800344c:	fb02 6101 	mla	r1, r2, r1, r6
 8003450:	0c1e      	lsrs	r6, r3, #16
 8003452:	0c0b      	lsrs	r3, r1, #16
 8003454:	fb02 3306 	mla	r3, r2, r6, r3
 8003458:	b289      	uxth	r1, r1
 800345a:	3001      	adds	r0, #1
 800345c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003460:	4285      	cmp	r5, r0
 8003462:	f84c 1b04 	str.w	r1, [ip], #4
 8003466:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800346a:	dcec      	bgt.n	8003446 <__multadd+0x12>
 800346c:	b30e      	cbz	r6, 80034b2 <__multadd+0x7e>
 800346e:	68a3      	ldr	r3, [r4, #8]
 8003470:	42ab      	cmp	r3, r5
 8003472:	dc19      	bgt.n	80034a8 <__multadd+0x74>
 8003474:	6861      	ldr	r1, [r4, #4]
 8003476:	4638      	mov	r0, r7
 8003478:	3101      	adds	r1, #1
 800347a:	f7ff ff79 	bl	8003370 <_Balloc>
 800347e:	4680      	mov	r8, r0
 8003480:	b928      	cbnz	r0, 800348e <__multadd+0x5a>
 8003482:	4602      	mov	r2, r0
 8003484:	4b0c      	ldr	r3, [pc, #48]	@ (80034b8 <__multadd+0x84>)
 8003486:	480d      	ldr	r0, [pc, #52]	@ (80034bc <__multadd+0x88>)
 8003488:	21ba      	movs	r1, #186	@ 0xba
 800348a:	f000 fd2f 	bl	8003eec <__assert_func>
 800348e:	6922      	ldr	r2, [r4, #16]
 8003490:	3202      	adds	r2, #2
 8003492:	f104 010c 	add.w	r1, r4, #12
 8003496:	0092      	lsls	r2, r2, #2
 8003498:	300c      	adds	r0, #12
 800349a:	f000 fd19 	bl	8003ed0 <memcpy>
 800349e:	4621      	mov	r1, r4
 80034a0:	4638      	mov	r0, r7
 80034a2:	f7ff ffa5 	bl	80033f0 <_Bfree>
 80034a6:	4644      	mov	r4, r8
 80034a8:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80034ac:	3501      	adds	r5, #1
 80034ae:	615e      	str	r6, [r3, #20]
 80034b0:	6125      	str	r5, [r4, #16]
 80034b2:	4620      	mov	r0, r4
 80034b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80034b8:	080048b3 	.word	0x080048b3
 80034bc:	080048c4 	.word	0x080048c4

080034c0 <__hi0bits>:
 80034c0:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80034c4:	4603      	mov	r3, r0
 80034c6:	bf36      	itet	cc
 80034c8:	0403      	lslcc	r3, r0, #16
 80034ca:	2000      	movcs	r0, #0
 80034cc:	2010      	movcc	r0, #16
 80034ce:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80034d2:	bf3c      	itt	cc
 80034d4:	021b      	lslcc	r3, r3, #8
 80034d6:	3008      	addcc	r0, #8
 80034d8:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80034dc:	bf3c      	itt	cc
 80034de:	011b      	lslcc	r3, r3, #4
 80034e0:	3004      	addcc	r0, #4
 80034e2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80034e6:	bf3c      	itt	cc
 80034e8:	009b      	lslcc	r3, r3, #2
 80034ea:	3002      	addcc	r0, #2
 80034ec:	2b00      	cmp	r3, #0
 80034ee:	db05      	blt.n	80034fc <__hi0bits+0x3c>
 80034f0:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 80034f4:	f100 0001 	add.w	r0, r0, #1
 80034f8:	bf08      	it	eq
 80034fa:	2020      	moveq	r0, #32
 80034fc:	4770      	bx	lr

080034fe <__lo0bits>:
 80034fe:	6803      	ldr	r3, [r0, #0]
 8003500:	4602      	mov	r2, r0
 8003502:	f013 0007 	ands.w	r0, r3, #7
 8003506:	d00b      	beq.n	8003520 <__lo0bits+0x22>
 8003508:	07d9      	lsls	r1, r3, #31
 800350a:	d421      	bmi.n	8003550 <__lo0bits+0x52>
 800350c:	0798      	lsls	r0, r3, #30
 800350e:	bf49      	itett	mi
 8003510:	085b      	lsrmi	r3, r3, #1
 8003512:	089b      	lsrpl	r3, r3, #2
 8003514:	2001      	movmi	r0, #1
 8003516:	6013      	strmi	r3, [r2, #0]
 8003518:	bf5c      	itt	pl
 800351a:	6013      	strpl	r3, [r2, #0]
 800351c:	2002      	movpl	r0, #2
 800351e:	4770      	bx	lr
 8003520:	b299      	uxth	r1, r3
 8003522:	b909      	cbnz	r1, 8003528 <__lo0bits+0x2a>
 8003524:	0c1b      	lsrs	r3, r3, #16
 8003526:	2010      	movs	r0, #16
 8003528:	b2d9      	uxtb	r1, r3
 800352a:	b909      	cbnz	r1, 8003530 <__lo0bits+0x32>
 800352c:	3008      	adds	r0, #8
 800352e:	0a1b      	lsrs	r3, r3, #8
 8003530:	0719      	lsls	r1, r3, #28
 8003532:	bf04      	itt	eq
 8003534:	091b      	lsreq	r3, r3, #4
 8003536:	3004      	addeq	r0, #4
 8003538:	0799      	lsls	r1, r3, #30
 800353a:	bf04      	itt	eq
 800353c:	089b      	lsreq	r3, r3, #2
 800353e:	3002      	addeq	r0, #2
 8003540:	07d9      	lsls	r1, r3, #31
 8003542:	d403      	bmi.n	800354c <__lo0bits+0x4e>
 8003544:	085b      	lsrs	r3, r3, #1
 8003546:	f100 0001 	add.w	r0, r0, #1
 800354a:	d003      	beq.n	8003554 <__lo0bits+0x56>
 800354c:	6013      	str	r3, [r2, #0]
 800354e:	4770      	bx	lr
 8003550:	2000      	movs	r0, #0
 8003552:	4770      	bx	lr
 8003554:	2020      	movs	r0, #32
 8003556:	4770      	bx	lr

08003558 <__i2b>:
 8003558:	b510      	push	{r4, lr}
 800355a:	460c      	mov	r4, r1
 800355c:	2101      	movs	r1, #1
 800355e:	f7ff ff07 	bl	8003370 <_Balloc>
 8003562:	4602      	mov	r2, r0
 8003564:	b928      	cbnz	r0, 8003572 <__i2b+0x1a>
 8003566:	4b05      	ldr	r3, [pc, #20]	@ (800357c <__i2b+0x24>)
 8003568:	4805      	ldr	r0, [pc, #20]	@ (8003580 <__i2b+0x28>)
 800356a:	f240 1145 	movw	r1, #325	@ 0x145
 800356e:	f000 fcbd 	bl	8003eec <__assert_func>
 8003572:	2301      	movs	r3, #1
 8003574:	6144      	str	r4, [r0, #20]
 8003576:	6103      	str	r3, [r0, #16]
 8003578:	bd10      	pop	{r4, pc}
 800357a:	bf00      	nop
 800357c:	080048b3 	.word	0x080048b3
 8003580:	080048c4 	.word	0x080048c4

08003584 <__multiply>:
 8003584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003588:	4614      	mov	r4, r2
 800358a:	690a      	ldr	r2, [r1, #16]
 800358c:	6923      	ldr	r3, [r4, #16]
 800358e:	429a      	cmp	r2, r3
 8003590:	bfa8      	it	ge
 8003592:	4623      	movge	r3, r4
 8003594:	460f      	mov	r7, r1
 8003596:	bfa4      	itt	ge
 8003598:	460c      	movge	r4, r1
 800359a:	461f      	movge	r7, r3
 800359c:	f8d4 a010 	ldr.w	sl, [r4, #16]
 80035a0:	f8d7 9010 	ldr.w	r9, [r7, #16]
 80035a4:	68a3      	ldr	r3, [r4, #8]
 80035a6:	6861      	ldr	r1, [r4, #4]
 80035a8:	eb0a 0609 	add.w	r6, sl, r9
 80035ac:	42b3      	cmp	r3, r6
 80035ae:	b085      	sub	sp, #20
 80035b0:	bfb8      	it	lt
 80035b2:	3101      	addlt	r1, #1
 80035b4:	f7ff fedc 	bl	8003370 <_Balloc>
 80035b8:	b930      	cbnz	r0, 80035c8 <__multiply+0x44>
 80035ba:	4602      	mov	r2, r0
 80035bc:	4b44      	ldr	r3, [pc, #272]	@ (80036d0 <__multiply+0x14c>)
 80035be:	4845      	ldr	r0, [pc, #276]	@ (80036d4 <__multiply+0x150>)
 80035c0:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80035c4:	f000 fc92 	bl	8003eec <__assert_func>
 80035c8:	f100 0514 	add.w	r5, r0, #20
 80035cc:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80035d0:	462b      	mov	r3, r5
 80035d2:	2200      	movs	r2, #0
 80035d4:	4543      	cmp	r3, r8
 80035d6:	d321      	bcc.n	800361c <__multiply+0x98>
 80035d8:	f107 0114 	add.w	r1, r7, #20
 80035dc:	f104 0214 	add.w	r2, r4, #20
 80035e0:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 80035e4:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 80035e8:	9302      	str	r3, [sp, #8]
 80035ea:	1b13      	subs	r3, r2, r4
 80035ec:	3b15      	subs	r3, #21
 80035ee:	f023 0303 	bic.w	r3, r3, #3
 80035f2:	3304      	adds	r3, #4
 80035f4:	f104 0715 	add.w	r7, r4, #21
 80035f8:	42ba      	cmp	r2, r7
 80035fa:	bf38      	it	cc
 80035fc:	2304      	movcc	r3, #4
 80035fe:	9301      	str	r3, [sp, #4]
 8003600:	9b02      	ldr	r3, [sp, #8]
 8003602:	9103      	str	r1, [sp, #12]
 8003604:	428b      	cmp	r3, r1
 8003606:	d80c      	bhi.n	8003622 <__multiply+0x9e>
 8003608:	2e00      	cmp	r6, #0
 800360a:	dd03      	ble.n	8003614 <__multiply+0x90>
 800360c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003610:	2b00      	cmp	r3, #0
 8003612:	d05b      	beq.n	80036cc <__multiply+0x148>
 8003614:	6106      	str	r6, [r0, #16]
 8003616:	b005      	add	sp, #20
 8003618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800361c:	f843 2b04 	str.w	r2, [r3], #4
 8003620:	e7d8      	b.n	80035d4 <__multiply+0x50>
 8003622:	f8b1 a000 	ldrh.w	sl, [r1]
 8003626:	f1ba 0f00 	cmp.w	sl, #0
 800362a:	d024      	beq.n	8003676 <__multiply+0xf2>
 800362c:	f104 0e14 	add.w	lr, r4, #20
 8003630:	46a9      	mov	r9, r5
 8003632:	f04f 0c00 	mov.w	ip, #0
 8003636:	f85e 7b04 	ldr.w	r7, [lr], #4
 800363a:	f8d9 3000 	ldr.w	r3, [r9]
 800363e:	fa1f fb87 	uxth.w	fp, r7
 8003642:	b29b      	uxth	r3, r3
 8003644:	fb0a 330b 	mla	r3, sl, fp, r3
 8003648:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 800364c:	f8d9 7000 	ldr.w	r7, [r9]
 8003650:	4463      	add	r3, ip
 8003652:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8003656:	fb0a c70b 	mla	r7, sl, fp, ip
 800365a:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 800365e:	b29b      	uxth	r3, r3
 8003660:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003664:	4572      	cmp	r2, lr
 8003666:	f849 3b04 	str.w	r3, [r9], #4
 800366a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800366e:	d8e2      	bhi.n	8003636 <__multiply+0xb2>
 8003670:	9b01      	ldr	r3, [sp, #4]
 8003672:	f845 c003 	str.w	ip, [r5, r3]
 8003676:	9b03      	ldr	r3, [sp, #12]
 8003678:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800367c:	3104      	adds	r1, #4
 800367e:	f1b9 0f00 	cmp.w	r9, #0
 8003682:	d021      	beq.n	80036c8 <__multiply+0x144>
 8003684:	682b      	ldr	r3, [r5, #0]
 8003686:	f104 0c14 	add.w	ip, r4, #20
 800368a:	46ae      	mov	lr, r5
 800368c:	f04f 0a00 	mov.w	sl, #0
 8003690:	f8bc b000 	ldrh.w	fp, [ip]
 8003694:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8003698:	fb09 770b 	mla	r7, r9, fp, r7
 800369c:	4457      	add	r7, sl
 800369e:	b29b      	uxth	r3, r3
 80036a0:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80036a4:	f84e 3b04 	str.w	r3, [lr], #4
 80036a8:	f85c 3b04 	ldr.w	r3, [ip], #4
 80036ac:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80036b0:	f8be 3000 	ldrh.w	r3, [lr]
 80036b4:	fb09 330a 	mla	r3, r9, sl, r3
 80036b8:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 80036bc:	4562      	cmp	r2, ip
 80036be:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80036c2:	d8e5      	bhi.n	8003690 <__multiply+0x10c>
 80036c4:	9f01      	ldr	r7, [sp, #4]
 80036c6:	51eb      	str	r3, [r5, r7]
 80036c8:	3504      	adds	r5, #4
 80036ca:	e799      	b.n	8003600 <__multiply+0x7c>
 80036cc:	3e01      	subs	r6, #1
 80036ce:	e79b      	b.n	8003608 <__multiply+0x84>
 80036d0:	080048b3 	.word	0x080048b3
 80036d4:	080048c4 	.word	0x080048c4

080036d8 <__pow5mult>:
 80036d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80036dc:	4615      	mov	r5, r2
 80036de:	f012 0203 	ands.w	r2, r2, #3
 80036e2:	4607      	mov	r7, r0
 80036e4:	460e      	mov	r6, r1
 80036e6:	d007      	beq.n	80036f8 <__pow5mult+0x20>
 80036e8:	4c25      	ldr	r4, [pc, #148]	@ (8003780 <__pow5mult+0xa8>)
 80036ea:	3a01      	subs	r2, #1
 80036ec:	2300      	movs	r3, #0
 80036ee:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 80036f2:	f7ff fe9f 	bl	8003434 <__multadd>
 80036f6:	4606      	mov	r6, r0
 80036f8:	10ad      	asrs	r5, r5, #2
 80036fa:	d03d      	beq.n	8003778 <__pow5mult+0xa0>
 80036fc:	69fc      	ldr	r4, [r7, #28]
 80036fe:	b97c      	cbnz	r4, 8003720 <__pow5mult+0x48>
 8003700:	2010      	movs	r0, #16
 8003702:	f7ff fd7f 	bl	8003204 <malloc>
 8003706:	4602      	mov	r2, r0
 8003708:	61f8      	str	r0, [r7, #28]
 800370a:	b928      	cbnz	r0, 8003718 <__pow5mult+0x40>
 800370c:	4b1d      	ldr	r3, [pc, #116]	@ (8003784 <__pow5mult+0xac>)
 800370e:	481e      	ldr	r0, [pc, #120]	@ (8003788 <__pow5mult+0xb0>)
 8003710:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003714:	f000 fbea 	bl	8003eec <__assert_func>
 8003718:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800371c:	6004      	str	r4, [r0, #0]
 800371e:	60c4      	str	r4, [r0, #12]
 8003720:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003724:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003728:	b94c      	cbnz	r4, 800373e <__pow5mult+0x66>
 800372a:	f240 2171 	movw	r1, #625	@ 0x271
 800372e:	4638      	mov	r0, r7
 8003730:	f7ff ff12 	bl	8003558 <__i2b>
 8003734:	2300      	movs	r3, #0
 8003736:	f8c8 0008 	str.w	r0, [r8, #8]
 800373a:	4604      	mov	r4, r0
 800373c:	6003      	str	r3, [r0, #0]
 800373e:	f04f 0900 	mov.w	r9, #0
 8003742:	07eb      	lsls	r3, r5, #31
 8003744:	d50a      	bpl.n	800375c <__pow5mult+0x84>
 8003746:	4631      	mov	r1, r6
 8003748:	4622      	mov	r2, r4
 800374a:	4638      	mov	r0, r7
 800374c:	f7ff ff1a 	bl	8003584 <__multiply>
 8003750:	4631      	mov	r1, r6
 8003752:	4680      	mov	r8, r0
 8003754:	4638      	mov	r0, r7
 8003756:	f7ff fe4b 	bl	80033f0 <_Bfree>
 800375a:	4646      	mov	r6, r8
 800375c:	106d      	asrs	r5, r5, #1
 800375e:	d00b      	beq.n	8003778 <__pow5mult+0xa0>
 8003760:	6820      	ldr	r0, [r4, #0]
 8003762:	b938      	cbnz	r0, 8003774 <__pow5mult+0x9c>
 8003764:	4622      	mov	r2, r4
 8003766:	4621      	mov	r1, r4
 8003768:	4638      	mov	r0, r7
 800376a:	f7ff ff0b 	bl	8003584 <__multiply>
 800376e:	6020      	str	r0, [r4, #0]
 8003770:	f8c0 9000 	str.w	r9, [r0]
 8003774:	4604      	mov	r4, r0
 8003776:	e7e4      	b.n	8003742 <__pow5mult+0x6a>
 8003778:	4630      	mov	r0, r6
 800377a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800377e:	bf00      	nop
 8003780:	08004920 	.word	0x08004920
 8003784:	08004844 	.word	0x08004844
 8003788:	080048c4 	.word	0x080048c4

0800378c <__lshift>:
 800378c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003790:	460c      	mov	r4, r1
 8003792:	6849      	ldr	r1, [r1, #4]
 8003794:	6923      	ldr	r3, [r4, #16]
 8003796:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800379a:	68a3      	ldr	r3, [r4, #8]
 800379c:	4607      	mov	r7, r0
 800379e:	4691      	mov	r9, r2
 80037a0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80037a4:	f108 0601 	add.w	r6, r8, #1
 80037a8:	42b3      	cmp	r3, r6
 80037aa:	db0b      	blt.n	80037c4 <__lshift+0x38>
 80037ac:	4638      	mov	r0, r7
 80037ae:	f7ff fddf 	bl	8003370 <_Balloc>
 80037b2:	4605      	mov	r5, r0
 80037b4:	b948      	cbnz	r0, 80037ca <__lshift+0x3e>
 80037b6:	4602      	mov	r2, r0
 80037b8:	4b28      	ldr	r3, [pc, #160]	@ (800385c <__lshift+0xd0>)
 80037ba:	4829      	ldr	r0, [pc, #164]	@ (8003860 <__lshift+0xd4>)
 80037bc:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80037c0:	f000 fb94 	bl	8003eec <__assert_func>
 80037c4:	3101      	adds	r1, #1
 80037c6:	005b      	lsls	r3, r3, #1
 80037c8:	e7ee      	b.n	80037a8 <__lshift+0x1c>
 80037ca:	2300      	movs	r3, #0
 80037cc:	f100 0114 	add.w	r1, r0, #20
 80037d0:	f100 0210 	add.w	r2, r0, #16
 80037d4:	4618      	mov	r0, r3
 80037d6:	4553      	cmp	r3, sl
 80037d8:	db33      	blt.n	8003842 <__lshift+0xb6>
 80037da:	6920      	ldr	r0, [r4, #16]
 80037dc:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80037e0:	f104 0314 	add.w	r3, r4, #20
 80037e4:	f019 091f 	ands.w	r9, r9, #31
 80037e8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 80037ec:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 80037f0:	d02b      	beq.n	800384a <__lshift+0xbe>
 80037f2:	f1c9 0e20 	rsb	lr, r9, #32
 80037f6:	468a      	mov	sl, r1
 80037f8:	2200      	movs	r2, #0
 80037fa:	6818      	ldr	r0, [r3, #0]
 80037fc:	fa00 f009 	lsl.w	r0, r0, r9
 8003800:	4310      	orrs	r0, r2
 8003802:	f84a 0b04 	str.w	r0, [sl], #4
 8003806:	f853 2b04 	ldr.w	r2, [r3], #4
 800380a:	459c      	cmp	ip, r3
 800380c:	fa22 f20e 	lsr.w	r2, r2, lr
 8003810:	d8f3      	bhi.n	80037fa <__lshift+0x6e>
 8003812:	ebac 0304 	sub.w	r3, ip, r4
 8003816:	3b15      	subs	r3, #21
 8003818:	f023 0303 	bic.w	r3, r3, #3
 800381c:	3304      	adds	r3, #4
 800381e:	f104 0015 	add.w	r0, r4, #21
 8003822:	4584      	cmp	ip, r0
 8003824:	bf38      	it	cc
 8003826:	2304      	movcc	r3, #4
 8003828:	50ca      	str	r2, [r1, r3]
 800382a:	b10a      	cbz	r2, 8003830 <__lshift+0xa4>
 800382c:	f108 0602 	add.w	r6, r8, #2
 8003830:	3e01      	subs	r6, #1
 8003832:	4638      	mov	r0, r7
 8003834:	612e      	str	r6, [r5, #16]
 8003836:	4621      	mov	r1, r4
 8003838:	f7ff fdda 	bl	80033f0 <_Bfree>
 800383c:	4628      	mov	r0, r5
 800383e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003842:	f842 0f04 	str.w	r0, [r2, #4]!
 8003846:	3301      	adds	r3, #1
 8003848:	e7c5      	b.n	80037d6 <__lshift+0x4a>
 800384a:	3904      	subs	r1, #4
 800384c:	f853 2b04 	ldr.w	r2, [r3], #4
 8003850:	f841 2f04 	str.w	r2, [r1, #4]!
 8003854:	459c      	cmp	ip, r3
 8003856:	d8f9      	bhi.n	800384c <__lshift+0xc0>
 8003858:	e7ea      	b.n	8003830 <__lshift+0xa4>
 800385a:	bf00      	nop
 800385c:	080048b3 	.word	0x080048b3
 8003860:	080048c4 	.word	0x080048c4

08003864 <__mcmp>:
 8003864:	690a      	ldr	r2, [r1, #16]
 8003866:	4603      	mov	r3, r0
 8003868:	6900      	ldr	r0, [r0, #16]
 800386a:	1a80      	subs	r0, r0, r2
 800386c:	b530      	push	{r4, r5, lr}
 800386e:	d10e      	bne.n	800388e <__mcmp+0x2a>
 8003870:	3314      	adds	r3, #20
 8003872:	3114      	adds	r1, #20
 8003874:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003878:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800387c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003880:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003884:	4295      	cmp	r5, r2
 8003886:	d003      	beq.n	8003890 <__mcmp+0x2c>
 8003888:	d205      	bcs.n	8003896 <__mcmp+0x32>
 800388a:	f04f 30ff 	mov.w	r0, #4294967295
 800388e:	bd30      	pop	{r4, r5, pc}
 8003890:	42a3      	cmp	r3, r4
 8003892:	d3f3      	bcc.n	800387c <__mcmp+0x18>
 8003894:	e7fb      	b.n	800388e <__mcmp+0x2a>
 8003896:	2001      	movs	r0, #1
 8003898:	e7f9      	b.n	800388e <__mcmp+0x2a>
	...

0800389c <__mdiff>:
 800389c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038a0:	4689      	mov	r9, r1
 80038a2:	4606      	mov	r6, r0
 80038a4:	4611      	mov	r1, r2
 80038a6:	4648      	mov	r0, r9
 80038a8:	4614      	mov	r4, r2
 80038aa:	f7ff ffdb 	bl	8003864 <__mcmp>
 80038ae:	1e05      	subs	r5, r0, #0
 80038b0:	d112      	bne.n	80038d8 <__mdiff+0x3c>
 80038b2:	4629      	mov	r1, r5
 80038b4:	4630      	mov	r0, r6
 80038b6:	f7ff fd5b 	bl	8003370 <_Balloc>
 80038ba:	4602      	mov	r2, r0
 80038bc:	b928      	cbnz	r0, 80038ca <__mdiff+0x2e>
 80038be:	4b3f      	ldr	r3, [pc, #252]	@ (80039bc <__mdiff+0x120>)
 80038c0:	f240 2137 	movw	r1, #567	@ 0x237
 80038c4:	483e      	ldr	r0, [pc, #248]	@ (80039c0 <__mdiff+0x124>)
 80038c6:	f000 fb11 	bl	8003eec <__assert_func>
 80038ca:	2301      	movs	r3, #1
 80038cc:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80038d0:	4610      	mov	r0, r2
 80038d2:	b003      	add	sp, #12
 80038d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80038d8:	bfbc      	itt	lt
 80038da:	464b      	movlt	r3, r9
 80038dc:	46a1      	movlt	r9, r4
 80038de:	4630      	mov	r0, r6
 80038e0:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80038e4:	bfba      	itte	lt
 80038e6:	461c      	movlt	r4, r3
 80038e8:	2501      	movlt	r5, #1
 80038ea:	2500      	movge	r5, #0
 80038ec:	f7ff fd40 	bl	8003370 <_Balloc>
 80038f0:	4602      	mov	r2, r0
 80038f2:	b918      	cbnz	r0, 80038fc <__mdiff+0x60>
 80038f4:	4b31      	ldr	r3, [pc, #196]	@ (80039bc <__mdiff+0x120>)
 80038f6:	f240 2145 	movw	r1, #581	@ 0x245
 80038fa:	e7e3      	b.n	80038c4 <__mdiff+0x28>
 80038fc:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003900:	6926      	ldr	r6, [r4, #16]
 8003902:	60c5      	str	r5, [r0, #12]
 8003904:	f109 0310 	add.w	r3, r9, #16
 8003908:	f109 0514 	add.w	r5, r9, #20
 800390c:	f104 0e14 	add.w	lr, r4, #20
 8003910:	f100 0b14 	add.w	fp, r0, #20
 8003914:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003918:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800391c:	9301      	str	r3, [sp, #4]
 800391e:	46d9      	mov	r9, fp
 8003920:	f04f 0c00 	mov.w	ip, #0
 8003924:	9b01      	ldr	r3, [sp, #4]
 8003926:	f85e 0b04 	ldr.w	r0, [lr], #4
 800392a:	f853 af04 	ldr.w	sl, [r3, #4]!
 800392e:	9301      	str	r3, [sp, #4]
 8003930:	fa1f f38a 	uxth.w	r3, sl
 8003934:	4619      	mov	r1, r3
 8003936:	b283      	uxth	r3, r0
 8003938:	1acb      	subs	r3, r1, r3
 800393a:	0c00      	lsrs	r0, r0, #16
 800393c:	4463      	add	r3, ip
 800393e:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003942:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003946:	b29b      	uxth	r3, r3
 8003948:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800394c:	4576      	cmp	r6, lr
 800394e:	f849 3b04 	str.w	r3, [r9], #4
 8003952:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003956:	d8e5      	bhi.n	8003924 <__mdiff+0x88>
 8003958:	1b33      	subs	r3, r6, r4
 800395a:	3b15      	subs	r3, #21
 800395c:	f023 0303 	bic.w	r3, r3, #3
 8003960:	3415      	adds	r4, #21
 8003962:	3304      	adds	r3, #4
 8003964:	42a6      	cmp	r6, r4
 8003966:	bf38      	it	cc
 8003968:	2304      	movcc	r3, #4
 800396a:	441d      	add	r5, r3
 800396c:	445b      	add	r3, fp
 800396e:	461e      	mov	r6, r3
 8003970:	462c      	mov	r4, r5
 8003972:	4544      	cmp	r4, r8
 8003974:	d30e      	bcc.n	8003994 <__mdiff+0xf8>
 8003976:	f108 0103 	add.w	r1, r8, #3
 800397a:	1b49      	subs	r1, r1, r5
 800397c:	f021 0103 	bic.w	r1, r1, #3
 8003980:	3d03      	subs	r5, #3
 8003982:	45a8      	cmp	r8, r5
 8003984:	bf38      	it	cc
 8003986:	2100      	movcc	r1, #0
 8003988:	440b      	add	r3, r1
 800398a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800398e:	b191      	cbz	r1, 80039b6 <__mdiff+0x11a>
 8003990:	6117      	str	r7, [r2, #16]
 8003992:	e79d      	b.n	80038d0 <__mdiff+0x34>
 8003994:	f854 1b04 	ldr.w	r1, [r4], #4
 8003998:	46e6      	mov	lr, ip
 800399a:	0c08      	lsrs	r0, r1, #16
 800399c:	fa1c fc81 	uxtah	ip, ip, r1
 80039a0:	4471      	add	r1, lr
 80039a2:	eb00 402c 	add.w	r0, r0, ip, asr #16
 80039a6:	b289      	uxth	r1, r1
 80039a8:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80039ac:	f846 1b04 	str.w	r1, [r6], #4
 80039b0:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80039b4:	e7dd      	b.n	8003972 <__mdiff+0xd6>
 80039b6:	3f01      	subs	r7, #1
 80039b8:	e7e7      	b.n	800398a <__mdiff+0xee>
 80039ba:	bf00      	nop
 80039bc:	080048b3 	.word	0x080048b3
 80039c0:	080048c4 	.word	0x080048c4

080039c4 <__d2b>:
 80039c4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80039c8:	460f      	mov	r7, r1
 80039ca:	2101      	movs	r1, #1
 80039cc:	ec59 8b10 	vmov	r8, r9, d0
 80039d0:	4616      	mov	r6, r2
 80039d2:	f7ff fccd 	bl	8003370 <_Balloc>
 80039d6:	4604      	mov	r4, r0
 80039d8:	b930      	cbnz	r0, 80039e8 <__d2b+0x24>
 80039da:	4602      	mov	r2, r0
 80039dc:	4b23      	ldr	r3, [pc, #140]	@ (8003a6c <__d2b+0xa8>)
 80039de:	4824      	ldr	r0, [pc, #144]	@ (8003a70 <__d2b+0xac>)
 80039e0:	f240 310f 	movw	r1, #783	@ 0x30f
 80039e4:	f000 fa82 	bl	8003eec <__assert_func>
 80039e8:	f3c9 550a 	ubfx	r5, r9, #20, #11
 80039ec:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80039f0:	b10d      	cbz	r5, 80039f6 <__d2b+0x32>
 80039f2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80039f6:	9301      	str	r3, [sp, #4]
 80039f8:	f1b8 0300 	subs.w	r3, r8, #0
 80039fc:	d023      	beq.n	8003a46 <__d2b+0x82>
 80039fe:	4668      	mov	r0, sp
 8003a00:	9300      	str	r3, [sp, #0]
 8003a02:	f7ff fd7c 	bl	80034fe <__lo0bits>
 8003a06:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003a0a:	b1d0      	cbz	r0, 8003a42 <__d2b+0x7e>
 8003a0c:	f1c0 0320 	rsb	r3, r0, #32
 8003a10:	fa02 f303 	lsl.w	r3, r2, r3
 8003a14:	430b      	orrs	r3, r1
 8003a16:	40c2      	lsrs	r2, r0
 8003a18:	6163      	str	r3, [r4, #20]
 8003a1a:	9201      	str	r2, [sp, #4]
 8003a1c:	9b01      	ldr	r3, [sp, #4]
 8003a1e:	61a3      	str	r3, [r4, #24]
 8003a20:	2b00      	cmp	r3, #0
 8003a22:	bf0c      	ite	eq
 8003a24:	2201      	moveq	r2, #1
 8003a26:	2202      	movne	r2, #2
 8003a28:	6122      	str	r2, [r4, #16]
 8003a2a:	b1a5      	cbz	r5, 8003a56 <__d2b+0x92>
 8003a2c:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003a30:	4405      	add	r5, r0
 8003a32:	603d      	str	r5, [r7, #0]
 8003a34:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003a38:	6030      	str	r0, [r6, #0]
 8003a3a:	4620      	mov	r0, r4
 8003a3c:	b003      	add	sp, #12
 8003a3e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8003a42:	6161      	str	r1, [r4, #20]
 8003a44:	e7ea      	b.n	8003a1c <__d2b+0x58>
 8003a46:	a801      	add	r0, sp, #4
 8003a48:	f7ff fd59 	bl	80034fe <__lo0bits>
 8003a4c:	9b01      	ldr	r3, [sp, #4]
 8003a4e:	6163      	str	r3, [r4, #20]
 8003a50:	3020      	adds	r0, #32
 8003a52:	2201      	movs	r2, #1
 8003a54:	e7e8      	b.n	8003a28 <__d2b+0x64>
 8003a56:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003a5a:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003a5e:	6038      	str	r0, [r7, #0]
 8003a60:	6918      	ldr	r0, [r3, #16]
 8003a62:	f7ff fd2d 	bl	80034c0 <__hi0bits>
 8003a66:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003a6a:	e7e5      	b.n	8003a38 <__d2b+0x74>
 8003a6c:	080048b3 	.word	0x080048b3
 8003a70:	080048c4 	.word	0x080048c4

08003a74 <__ssputs_r>:
 8003a74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003a78:	688e      	ldr	r6, [r1, #8]
 8003a7a:	461f      	mov	r7, r3
 8003a7c:	42be      	cmp	r6, r7
 8003a7e:	680b      	ldr	r3, [r1, #0]
 8003a80:	4682      	mov	sl, r0
 8003a82:	460c      	mov	r4, r1
 8003a84:	4690      	mov	r8, r2
 8003a86:	d82d      	bhi.n	8003ae4 <__ssputs_r+0x70>
 8003a88:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003a8c:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8003a90:	d026      	beq.n	8003ae0 <__ssputs_r+0x6c>
 8003a92:	6965      	ldr	r5, [r4, #20]
 8003a94:	6909      	ldr	r1, [r1, #16]
 8003a96:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003a9a:	eba3 0901 	sub.w	r9, r3, r1
 8003a9e:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003aa2:	1c7b      	adds	r3, r7, #1
 8003aa4:	444b      	add	r3, r9
 8003aa6:	106d      	asrs	r5, r5, #1
 8003aa8:	429d      	cmp	r5, r3
 8003aaa:	bf38      	it	cc
 8003aac:	461d      	movcc	r5, r3
 8003aae:	0553      	lsls	r3, r2, #21
 8003ab0:	d527      	bpl.n	8003b02 <__ssputs_r+0x8e>
 8003ab2:	4629      	mov	r1, r5
 8003ab4:	f7ff fbd0 	bl	8003258 <_malloc_r>
 8003ab8:	4606      	mov	r6, r0
 8003aba:	b360      	cbz	r0, 8003b16 <__ssputs_r+0xa2>
 8003abc:	6921      	ldr	r1, [r4, #16]
 8003abe:	464a      	mov	r2, r9
 8003ac0:	f000 fa06 	bl	8003ed0 <memcpy>
 8003ac4:	89a3      	ldrh	r3, [r4, #12]
 8003ac6:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8003aca:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003ace:	81a3      	strh	r3, [r4, #12]
 8003ad0:	6126      	str	r6, [r4, #16]
 8003ad2:	6165      	str	r5, [r4, #20]
 8003ad4:	444e      	add	r6, r9
 8003ad6:	eba5 0509 	sub.w	r5, r5, r9
 8003ada:	6026      	str	r6, [r4, #0]
 8003adc:	60a5      	str	r5, [r4, #8]
 8003ade:	463e      	mov	r6, r7
 8003ae0:	42be      	cmp	r6, r7
 8003ae2:	d900      	bls.n	8003ae6 <__ssputs_r+0x72>
 8003ae4:	463e      	mov	r6, r7
 8003ae6:	6820      	ldr	r0, [r4, #0]
 8003ae8:	4632      	mov	r2, r6
 8003aea:	4641      	mov	r1, r8
 8003aec:	f000 f9c6 	bl	8003e7c <memmove>
 8003af0:	68a3      	ldr	r3, [r4, #8]
 8003af2:	1b9b      	subs	r3, r3, r6
 8003af4:	60a3      	str	r3, [r4, #8]
 8003af6:	6823      	ldr	r3, [r4, #0]
 8003af8:	4433      	add	r3, r6
 8003afa:	6023      	str	r3, [r4, #0]
 8003afc:	2000      	movs	r0, #0
 8003afe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003b02:	462a      	mov	r2, r5
 8003b04:	f000 fa36 	bl	8003f74 <_realloc_r>
 8003b08:	4606      	mov	r6, r0
 8003b0a:	2800      	cmp	r0, #0
 8003b0c:	d1e0      	bne.n	8003ad0 <__ssputs_r+0x5c>
 8003b0e:	6921      	ldr	r1, [r4, #16]
 8003b10:	4650      	mov	r0, sl
 8003b12:	f7ff fb2d 	bl	8003170 <_free_r>
 8003b16:	230c      	movs	r3, #12
 8003b18:	f8ca 3000 	str.w	r3, [sl]
 8003b1c:	89a3      	ldrh	r3, [r4, #12]
 8003b1e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003b22:	81a3      	strh	r3, [r4, #12]
 8003b24:	f04f 30ff 	mov.w	r0, #4294967295
 8003b28:	e7e9      	b.n	8003afe <__ssputs_r+0x8a>
	...

08003b2c <_svfiprintf_r>:
 8003b2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003b30:	4698      	mov	r8, r3
 8003b32:	898b      	ldrh	r3, [r1, #12]
 8003b34:	061b      	lsls	r3, r3, #24
 8003b36:	b09d      	sub	sp, #116	@ 0x74
 8003b38:	4607      	mov	r7, r0
 8003b3a:	460d      	mov	r5, r1
 8003b3c:	4614      	mov	r4, r2
 8003b3e:	d510      	bpl.n	8003b62 <_svfiprintf_r+0x36>
 8003b40:	690b      	ldr	r3, [r1, #16]
 8003b42:	b973      	cbnz	r3, 8003b62 <_svfiprintf_r+0x36>
 8003b44:	2140      	movs	r1, #64	@ 0x40
 8003b46:	f7ff fb87 	bl	8003258 <_malloc_r>
 8003b4a:	6028      	str	r0, [r5, #0]
 8003b4c:	6128      	str	r0, [r5, #16]
 8003b4e:	b930      	cbnz	r0, 8003b5e <_svfiprintf_r+0x32>
 8003b50:	230c      	movs	r3, #12
 8003b52:	603b      	str	r3, [r7, #0]
 8003b54:	f04f 30ff 	mov.w	r0, #4294967295
 8003b58:	b01d      	add	sp, #116	@ 0x74
 8003b5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003b5e:	2340      	movs	r3, #64	@ 0x40
 8003b60:	616b      	str	r3, [r5, #20]
 8003b62:	2300      	movs	r3, #0
 8003b64:	9309      	str	r3, [sp, #36]	@ 0x24
 8003b66:	2320      	movs	r3, #32
 8003b68:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003b6c:	f8cd 800c 	str.w	r8, [sp, #12]
 8003b70:	2330      	movs	r3, #48	@ 0x30
 8003b72:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8003d10 <_svfiprintf_r+0x1e4>
 8003b76:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003b7a:	f04f 0901 	mov.w	r9, #1
 8003b7e:	4623      	mov	r3, r4
 8003b80:	469a      	mov	sl, r3
 8003b82:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003b86:	b10a      	cbz	r2, 8003b8c <_svfiprintf_r+0x60>
 8003b88:	2a25      	cmp	r2, #37	@ 0x25
 8003b8a:	d1f9      	bne.n	8003b80 <_svfiprintf_r+0x54>
 8003b8c:	ebba 0b04 	subs.w	fp, sl, r4
 8003b90:	d00b      	beq.n	8003baa <_svfiprintf_r+0x7e>
 8003b92:	465b      	mov	r3, fp
 8003b94:	4622      	mov	r2, r4
 8003b96:	4629      	mov	r1, r5
 8003b98:	4638      	mov	r0, r7
 8003b9a:	f7ff ff6b 	bl	8003a74 <__ssputs_r>
 8003b9e:	3001      	adds	r0, #1
 8003ba0:	f000 80a7 	beq.w	8003cf2 <_svfiprintf_r+0x1c6>
 8003ba4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003ba6:	445a      	add	r2, fp
 8003ba8:	9209      	str	r2, [sp, #36]	@ 0x24
 8003baa:	f89a 3000 	ldrb.w	r3, [sl]
 8003bae:	2b00      	cmp	r3, #0
 8003bb0:	f000 809f 	beq.w	8003cf2 <_svfiprintf_r+0x1c6>
 8003bb4:	2300      	movs	r3, #0
 8003bb6:	f04f 32ff 	mov.w	r2, #4294967295
 8003bba:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003bbe:	f10a 0a01 	add.w	sl, sl, #1
 8003bc2:	9304      	str	r3, [sp, #16]
 8003bc4:	9307      	str	r3, [sp, #28]
 8003bc6:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003bca:	931a      	str	r3, [sp, #104]	@ 0x68
 8003bcc:	4654      	mov	r4, sl
 8003bce:	2205      	movs	r2, #5
 8003bd0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003bd4:	484e      	ldr	r0, [pc, #312]	@ (8003d10 <_svfiprintf_r+0x1e4>)
 8003bd6:	f7fc fb1b 	bl	8000210 <memchr>
 8003bda:	9a04      	ldr	r2, [sp, #16]
 8003bdc:	b9d8      	cbnz	r0, 8003c16 <_svfiprintf_r+0xea>
 8003bde:	06d0      	lsls	r0, r2, #27
 8003be0:	bf44      	itt	mi
 8003be2:	2320      	movmi	r3, #32
 8003be4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003be8:	0711      	lsls	r1, r2, #28
 8003bea:	bf44      	itt	mi
 8003bec:	232b      	movmi	r3, #43	@ 0x2b
 8003bee:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003bf2:	f89a 3000 	ldrb.w	r3, [sl]
 8003bf6:	2b2a      	cmp	r3, #42	@ 0x2a
 8003bf8:	d015      	beq.n	8003c26 <_svfiprintf_r+0xfa>
 8003bfa:	9a07      	ldr	r2, [sp, #28]
 8003bfc:	4654      	mov	r4, sl
 8003bfe:	2000      	movs	r0, #0
 8003c00:	f04f 0c0a 	mov.w	ip, #10
 8003c04:	4621      	mov	r1, r4
 8003c06:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003c0a:	3b30      	subs	r3, #48	@ 0x30
 8003c0c:	2b09      	cmp	r3, #9
 8003c0e:	d94b      	bls.n	8003ca8 <_svfiprintf_r+0x17c>
 8003c10:	b1b0      	cbz	r0, 8003c40 <_svfiprintf_r+0x114>
 8003c12:	9207      	str	r2, [sp, #28]
 8003c14:	e014      	b.n	8003c40 <_svfiprintf_r+0x114>
 8003c16:	eba0 0308 	sub.w	r3, r0, r8
 8003c1a:	fa09 f303 	lsl.w	r3, r9, r3
 8003c1e:	4313      	orrs	r3, r2
 8003c20:	9304      	str	r3, [sp, #16]
 8003c22:	46a2      	mov	sl, r4
 8003c24:	e7d2      	b.n	8003bcc <_svfiprintf_r+0xa0>
 8003c26:	9b03      	ldr	r3, [sp, #12]
 8003c28:	1d19      	adds	r1, r3, #4
 8003c2a:	681b      	ldr	r3, [r3, #0]
 8003c2c:	9103      	str	r1, [sp, #12]
 8003c2e:	2b00      	cmp	r3, #0
 8003c30:	bfbb      	ittet	lt
 8003c32:	425b      	neglt	r3, r3
 8003c34:	f042 0202 	orrlt.w	r2, r2, #2
 8003c38:	9307      	strge	r3, [sp, #28]
 8003c3a:	9307      	strlt	r3, [sp, #28]
 8003c3c:	bfb8      	it	lt
 8003c3e:	9204      	strlt	r2, [sp, #16]
 8003c40:	7823      	ldrb	r3, [r4, #0]
 8003c42:	2b2e      	cmp	r3, #46	@ 0x2e
 8003c44:	d10a      	bne.n	8003c5c <_svfiprintf_r+0x130>
 8003c46:	7863      	ldrb	r3, [r4, #1]
 8003c48:	2b2a      	cmp	r3, #42	@ 0x2a
 8003c4a:	d132      	bne.n	8003cb2 <_svfiprintf_r+0x186>
 8003c4c:	9b03      	ldr	r3, [sp, #12]
 8003c4e:	1d1a      	adds	r2, r3, #4
 8003c50:	681b      	ldr	r3, [r3, #0]
 8003c52:	9203      	str	r2, [sp, #12]
 8003c54:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003c58:	3402      	adds	r4, #2
 8003c5a:	9305      	str	r3, [sp, #20]
 8003c5c:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8003d20 <_svfiprintf_r+0x1f4>
 8003c60:	7821      	ldrb	r1, [r4, #0]
 8003c62:	2203      	movs	r2, #3
 8003c64:	4650      	mov	r0, sl
 8003c66:	f7fc fad3 	bl	8000210 <memchr>
 8003c6a:	b138      	cbz	r0, 8003c7c <_svfiprintf_r+0x150>
 8003c6c:	9b04      	ldr	r3, [sp, #16]
 8003c6e:	eba0 000a 	sub.w	r0, r0, sl
 8003c72:	2240      	movs	r2, #64	@ 0x40
 8003c74:	4082      	lsls	r2, r0
 8003c76:	4313      	orrs	r3, r2
 8003c78:	3401      	adds	r4, #1
 8003c7a:	9304      	str	r3, [sp, #16]
 8003c7c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003c80:	4824      	ldr	r0, [pc, #144]	@ (8003d14 <_svfiprintf_r+0x1e8>)
 8003c82:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003c86:	2206      	movs	r2, #6
 8003c88:	f7fc fac2 	bl	8000210 <memchr>
 8003c8c:	2800      	cmp	r0, #0
 8003c8e:	d036      	beq.n	8003cfe <_svfiprintf_r+0x1d2>
 8003c90:	4b21      	ldr	r3, [pc, #132]	@ (8003d18 <_svfiprintf_r+0x1ec>)
 8003c92:	bb1b      	cbnz	r3, 8003cdc <_svfiprintf_r+0x1b0>
 8003c94:	9b03      	ldr	r3, [sp, #12]
 8003c96:	3307      	adds	r3, #7
 8003c98:	f023 0307 	bic.w	r3, r3, #7
 8003c9c:	3308      	adds	r3, #8
 8003c9e:	9303      	str	r3, [sp, #12]
 8003ca0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003ca2:	4433      	add	r3, r6
 8003ca4:	9309      	str	r3, [sp, #36]	@ 0x24
 8003ca6:	e76a      	b.n	8003b7e <_svfiprintf_r+0x52>
 8003ca8:	fb0c 3202 	mla	r2, ip, r2, r3
 8003cac:	460c      	mov	r4, r1
 8003cae:	2001      	movs	r0, #1
 8003cb0:	e7a8      	b.n	8003c04 <_svfiprintf_r+0xd8>
 8003cb2:	2300      	movs	r3, #0
 8003cb4:	3401      	adds	r4, #1
 8003cb6:	9305      	str	r3, [sp, #20]
 8003cb8:	4619      	mov	r1, r3
 8003cba:	f04f 0c0a 	mov.w	ip, #10
 8003cbe:	4620      	mov	r0, r4
 8003cc0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003cc4:	3a30      	subs	r2, #48	@ 0x30
 8003cc6:	2a09      	cmp	r2, #9
 8003cc8:	d903      	bls.n	8003cd2 <_svfiprintf_r+0x1a6>
 8003cca:	2b00      	cmp	r3, #0
 8003ccc:	d0c6      	beq.n	8003c5c <_svfiprintf_r+0x130>
 8003cce:	9105      	str	r1, [sp, #20]
 8003cd0:	e7c4      	b.n	8003c5c <_svfiprintf_r+0x130>
 8003cd2:	fb0c 2101 	mla	r1, ip, r1, r2
 8003cd6:	4604      	mov	r4, r0
 8003cd8:	2301      	movs	r3, #1
 8003cda:	e7f0      	b.n	8003cbe <_svfiprintf_r+0x192>
 8003cdc:	ab03      	add	r3, sp, #12
 8003cde:	9300      	str	r3, [sp, #0]
 8003ce0:	462a      	mov	r2, r5
 8003ce2:	4b0e      	ldr	r3, [pc, #56]	@ (8003d1c <_svfiprintf_r+0x1f0>)
 8003ce4:	a904      	add	r1, sp, #16
 8003ce6:	4638      	mov	r0, r7
 8003ce8:	f7fd fe82 	bl	80019f0 <_printf_float>
 8003cec:	1c42      	adds	r2, r0, #1
 8003cee:	4606      	mov	r6, r0
 8003cf0:	d1d6      	bne.n	8003ca0 <_svfiprintf_r+0x174>
 8003cf2:	89ab      	ldrh	r3, [r5, #12]
 8003cf4:	065b      	lsls	r3, r3, #25
 8003cf6:	f53f af2d 	bmi.w	8003b54 <_svfiprintf_r+0x28>
 8003cfa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003cfc:	e72c      	b.n	8003b58 <_svfiprintf_r+0x2c>
 8003cfe:	ab03      	add	r3, sp, #12
 8003d00:	9300      	str	r3, [sp, #0]
 8003d02:	462a      	mov	r2, r5
 8003d04:	4b05      	ldr	r3, [pc, #20]	@ (8003d1c <_svfiprintf_r+0x1f0>)
 8003d06:	a904      	add	r1, sp, #16
 8003d08:	4638      	mov	r0, r7
 8003d0a:	f7fe f909 	bl	8001f20 <_printf_i>
 8003d0e:	e7ed      	b.n	8003cec <_svfiprintf_r+0x1c0>
 8003d10:	08004a20 	.word	0x08004a20
 8003d14:	08004a2a 	.word	0x08004a2a
 8003d18:	080019f1 	.word	0x080019f1
 8003d1c:	08003a75 	.word	0x08003a75
 8003d20:	08004a26 	.word	0x08004a26

08003d24 <__sflush_r>:
 8003d24:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003d28:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d2c:	0716      	lsls	r6, r2, #28
 8003d2e:	4605      	mov	r5, r0
 8003d30:	460c      	mov	r4, r1
 8003d32:	d454      	bmi.n	8003dde <__sflush_r+0xba>
 8003d34:	684b      	ldr	r3, [r1, #4]
 8003d36:	2b00      	cmp	r3, #0
 8003d38:	dc02      	bgt.n	8003d40 <__sflush_r+0x1c>
 8003d3a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003d3c:	2b00      	cmp	r3, #0
 8003d3e:	dd48      	ble.n	8003dd2 <__sflush_r+0xae>
 8003d40:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003d42:	2e00      	cmp	r6, #0
 8003d44:	d045      	beq.n	8003dd2 <__sflush_r+0xae>
 8003d46:	2300      	movs	r3, #0
 8003d48:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003d4c:	682f      	ldr	r7, [r5, #0]
 8003d4e:	6a21      	ldr	r1, [r4, #32]
 8003d50:	602b      	str	r3, [r5, #0]
 8003d52:	d030      	beq.n	8003db6 <__sflush_r+0x92>
 8003d54:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003d56:	89a3      	ldrh	r3, [r4, #12]
 8003d58:	0759      	lsls	r1, r3, #29
 8003d5a:	d505      	bpl.n	8003d68 <__sflush_r+0x44>
 8003d5c:	6863      	ldr	r3, [r4, #4]
 8003d5e:	1ad2      	subs	r2, r2, r3
 8003d60:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003d62:	b10b      	cbz	r3, 8003d68 <__sflush_r+0x44>
 8003d64:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003d66:	1ad2      	subs	r2, r2, r3
 8003d68:	2300      	movs	r3, #0
 8003d6a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003d6c:	6a21      	ldr	r1, [r4, #32]
 8003d6e:	4628      	mov	r0, r5
 8003d70:	47b0      	blx	r6
 8003d72:	1c43      	adds	r3, r0, #1
 8003d74:	89a3      	ldrh	r3, [r4, #12]
 8003d76:	d106      	bne.n	8003d86 <__sflush_r+0x62>
 8003d78:	6829      	ldr	r1, [r5, #0]
 8003d7a:	291d      	cmp	r1, #29
 8003d7c:	d82b      	bhi.n	8003dd6 <__sflush_r+0xb2>
 8003d7e:	4a2a      	ldr	r2, [pc, #168]	@ (8003e28 <__sflush_r+0x104>)
 8003d80:	410a      	asrs	r2, r1
 8003d82:	07d6      	lsls	r6, r2, #31
 8003d84:	d427      	bmi.n	8003dd6 <__sflush_r+0xb2>
 8003d86:	2200      	movs	r2, #0
 8003d88:	6062      	str	r2, [r4, #4]
 8003d8a:	04d9      	lsls	r1, r3, #19
 8003d8c:	6922      	ldr	r2, [r4, #16]
 8003d8e:	6022      	str	r2, [r4, #0]
 8003d90:	d504      	bpl.n	8003d9c <__sflush_r+0x78>
 8003d92:	1c42      	adds	r2, r0, #1
 8003d94:	d101      	bne.n	8003d9a <__sflush_r+0x76>
 8003d96:	682b      	ldr	r3, [r5, #0]
 8003d98:	b903      	cbnz	r3, 8003d9c <__sflush_r+0x78>
 8003d9a:	6560      	str	r0, [r4, #84]	@ 0x54
 8003d9c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003d9e:	602f      	str	r7, [r5, #0]
 8003da0:	b1b9      	cbz	r1, 8003dd2 <__sflush_r+0xae>
 8003da2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003da6:	4299      	cmp	r1, r3
 8003da8:	d002      	beq.n	8003db0 <__sflush_r+0x8c>
 8003daa:	4628      	mov	r0, r5
 8003dac:	f7ff f9e0 	bl	8003170 <_free_r>
 8003db0:	2300      	movs	r3, #0
 8003db2:	6363      	str	r3, [r4, #52]	@ 0x34
 8003db4:	e00d      	b.n	8003dd2 <__sflush_r+0xae>
 8003db6:	2301      	movs	r3, #1
 8003db8:	4628      	mov	r0, r5
 8003dba:	47b0      	blx	r6
 8003dbc:	4602      	mov	r2, r0
 8003dbe:	1c50      	adds	r0, r2, #1
 8003dc0:	d1c9      	bne.n	8003d56 <__sflush_r+0x32>
 8003dc2:	682b      	ldr	r3, [r5, #0]
 8003dc4:	2b00      	cmp	r3, #0
 8003dc6:	d0c6      	beq.n	8003d56 <__sflush_r+0x32>
 8003dc8:	2b1d      	cmp	r3, #29
 8003dca:	d001      	beq.n	8003dd0 <__sflush_r+0xac>
 8003dcc:	2b16      	cmp	r3, #22
 8003dce:	d11e      	bne.n	8003e0e <__sflush_r+0xea>
 8003dd0:	602f      	str	r7, [r5, #0]
 8003dd2:	2000      	movs	r0, #0
 8003dd4:	e022      	b.n	8003e1c <__sflush_r+0xf8>
 8003dd6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003dda:	b21b      	sxth	r3, r3
 8003ddc:	e01b      	b.n	8003e16 <__sflush_r+0xf2>
 8003dde:	690f      	ldr	r7, [r1, #16]
 8003de0:	2f00      	cmp	r7, #0
 8003de2:	d0f6      	beq.n	8003dd2 <__sflush_r+0xae>
 8003de4:	0793      	lsls	r3, r2, #30
 8003de6:	680e      	ldr	r6, [r1, #0]
 8003de8:	bf08      	it	eq
 8003dea:	694b      	ldreq	r3, [r1, #20]
 8003dec:	600f      	str	r7, [r1, #0]
 8003dee:	bf18      	it	ne
 8003df0:	2300      	movne	r3, #0
 8003df2:	eba6 0807 	sub.w	r8, r6, r7
 8003df6:	608b      	str	r3, [r1, #8]
 8003df8:	f1b8 0f00 	cmp.w	r8, #0
 8003dfc:	dde9      	ble.n	8003dd2 <__sflush_r+0xae>
 8003dfe:	6a21      	ldr	r1, [r4, #32]
 8003e00:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8003e02:	4643      	mov	r3, r8
 8003e04:	463a      	mov	r2, r7
 8003e06:	4628      	mov	r0, r5
 8003e08:	47b0      	blx	r6
 8003e0a:	2800      	cmp	r0, #0
 8003e0c:	dc08      	bgt.n	8003e20 <__sflush_r+0xfc>
 8003e0e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003e12:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003e16:	81a3      	strh	r3, [r4, #12]
 8003e18:	f04f 30ff 	mov.w	r0, #4294967295
 8003e1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003e20:	4407      	add	r7, r0
 8003e22:	eba8 0800 	sub.w	r8, r8, r0
 8003e26:	e7e7      	b.n	8003df8 <__sflush_r+0xd4>
 8003e28:	dfbffffe 	.word	0xdfbffffe

08003e2c <_fflush_r>:
 8003e2c:	b538      	push	{r3, r4, r5, lr}
 8003e2e:	690b      	ldr	r3, [r1, #16]
 8003e30:	4605      	mov	r5, r0
 8003e32:	460c      	mov	r4, r1
 8003e34:	b913      	cbnz	r3, 8003e3c <_fflush_r+0x10>
 8003e36:	2500      	movs	r5, #0
 8003e38:	4628      	mov	r0, r5
 8003e3a:	bd38      	pop	{r3, r4, r5, pc}
 8003e3c:	b118      	cbz	r0, 8003e46 <_fflush_r+0x1a>
 8003e3e:	6a03      	ldr	r3, [r0, #32]
 8003e40:	b90b      	cbnz	r3, 8003e46 <_fflush_r+0x1a>
 8003e42:	f7fe fa19 	bl	8002278 <__sinit>
 8003e46:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003e4a:	2b00      	cmp	r3, #0
 8003e4c:	d0f3      	beq.n	8003e36 <_fflush_r+0xa>
 8003e4e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003e50:	07d0      	lsls	r0, r2, #31
 8003e52:	d404      	bmi.n	8003e5e <_fflush_r+0x32>
 8003e54:	0599      	lsls	r1, r3, #22
 8003e56:	d402      	bmi.n	8003e5e <_fflush_r+0x32>
 8003e58:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003e5a:	f7fe fb38 	bl	80024ce <__retarget_lock_acquire_recursive>
 8003e5e:	4628      	mov	r0, r5
 8003e60:	4621      	mov	r1, r4
 8003e62:	f7ff ff5f 	bl	8003d24 <__sflush_r>
 8003e66:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003e68:	07da      	lsls	r2, r3, #31
 8003e6a:	4605      	mov	r5, r0
 8003e6c:	d4e4      	bmi.n	8003e38 <_fflush_r+0xc>
 8003e6e:	89a3      	ldrh	r3, [r4, #12]
 8003e70:	059b      	lsls	r3, r3, #22
 8003e72:	d4e1      	bmi.n	8003e38 <_fflush_r+0xc>
 8003e74:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003e76:	f7fe fb2b 	bl	80024d0 <__retarget_lock_release_recursive>
 8003e7a:	e7dd      	b.n	8003e38 <_fflush_r+0xc>

08003e7c <memmove>:
 8003e7c:	4288      	cmp	r0, r1
 8003e7e:	b510      	push	{r4, lr}
 8003e80:	eb01 0402 	add.w	r4, r1, r2
 8003e84:	d902      	bls.n	8003e8c <memmove+0x10>
 8003e86:	4284      	cmp	r4, r0
 8003e88:	4623      	mov	r3, r4
 8003e8a:	d807      	bhi.n	8003e9c <memmove+0x20>
 8003e8c:	1e43      	subs	r3, r0, #1
 8003e8e:	42a1      	cmp	r1, r4
 8003e90:	d008      	beq.n	8003ea4 <memmove+0x28>
 8003e92:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003e96:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003e9a:	e7f8      	b.n	8003e8e <memmove+0x12>
 8003e9c:	4402      	add	r2, r0
 8003e9e:	4601      	mov	r1, r0
 8003ea0:	428a      	cmp	r2, r1
 8003ea2:	d100      	bne.n	8003ea6 <memmove+0x2a>
 8003ea4:	bd10      	pop	{r4, pc}
 8003ea6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003eaa:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003eae:	e7f7      	b.n	8003ea0 <memmove+0x24>

08003eb0 <_sbrk_r>:
 8003eb0:	b538      	push	{r3, r4, r5, lr}
 8003eb2:	4d06      	ldr	r5, [pc, #24]	@ (8003ecc <_sbrk_r+0x1c>)
 8003eb4:	2300      	movs	r3, #0
 8003eb6:	4604      	mov	r4, r0
 8003eb8:	4608      	mov	r0, r1
 8003eba:	602b      	str	r3, [r5, #0]
 8003ebc:	f7fd fc5c 	bl	8001778 <_sbrk>
 8003ec0:	1c43      	adds	r3, r0, #1
 8003ec2:	d102      	bne.n	8003eca <_sbrk_r+0x1a>
 8003ec4:	682b      	ldr	r3, [r5, #0]
 8003ec6:	b103      	cbz	r3, 8003eca <_sbrk_r+0x1a>
 8003ec8:	6023      	str	r3, [r4, #0]
 8003eca:	bd38      	pop	{r3, r4, r5, pc}
 8003ecc:	20000378 	.word	0x20000378

08003ed0 <memcpy>:
 8003ed0:	440a      	add	r2, r1
 8003ed2:	4291      	cmp	r1, r2
 8003ed4:	f100 33ff 	add.w	r3, r0, #4294967295
 8003ed8:	d100      	bne.n	8003edc <memcpy+0xc>
 8003eda:	4770      	bx	lr
 8003edc:	b510      	push	{r4, lr}
 8003ede:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003ee2:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003ee6:	4291      	cmp	r1, r2
 8003ee8:	d1f9      	bne.n	8003ede <memcpy+0xe>
 8003eea:	bd10      	pop	{r4, pc}

08003eec <__assert_func>:
 8003eec:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003eee:	4614      	mov	r4, r2
 8003ef0:	461a      	mov	r2, r3
 8003ef2:	4b09      	ldr	r3, [pc, #36]	@ (8003f18 <__assert_func+0x2c>)
 8003ef4:	681b      	ldr	r3, [r3, #0]
 8003ef6:	4605      	mov	r5, r0
 8003ef8:	68d8      	ldr	r0, [r3, #12]
 8003efa:	b954      	cbnz	r4, 8003f12 <__assert_func+0x26>
 8003efc:	4b07      	ldr	r3, [pc, #28]	@ (8003f1c <__assert_func+0x30>)
 8003efe:	461c      	mov	r4, r3
 8003f00:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003f04:	9100      	str	r1, [sp, #0]
 8003f06:	462b      	mov	r3, r5
 8003f08:	4905      	ldr	r1, [pc, #20]	@ (8003f20 <__assert_func+0x34>)
 8003f0a:	f000 f86f 	bl	8003fec <fiprintf>
 8003f0e:	f000 f87f 	bl	8004010 <abort>
 8003f12:	4b04      	ldr	r3, [pc, #16]	@ (8003f24 <__assert_func+0x38>)
 8003f14:	e7f4      	b.n	8003f00 <__assert_func+0x14>
 8003f16:	bf00      	nop
 8003f18:	2000000c 	.word	0x2000000c
 8003f1c:	08004a76 	.word	0x08004a76
 8003f20:	08004a48 	.word	0x08004a48
 8003f24:	08004a3b 	.word	0x08004a3b

08003f28 <_calloc_r>:
 8003f28:	b570      	push	{r4, r5, r6, lr}
 8003f2a:	fba1 5402 	umull	r5, r4, r1, r2
 8003f2e:	b93c      	cbnz	r4, 8003f40 <_calloc_r+0x18>
 8003f30:	4629      	mov	r1, r5
 8003f32:	f7ff f991 	bl	8003258 <_malloc_r>
 8003f36:	4606      	mov	r6, r0
 8003f38:	b928      	cbnz	r0, 8003f46 <_calloc_r+0x1e>
 8003f3a:	2600      	movs	r6, #0
 8003f3c:	4630      	mov	r0, r6
 8003f3e:	bd70      	pop	{r4, r5, r6, pc}
 8003f40:	220c      	movs	r2, #12
 8003f42:	6002      	str	r2, [r0, #0]
 8003f44:	e7f9      	b.n	8003f3a <_calloc_r+0x12>
 8003f46:	462a      	mov	r2, r5
 8003f48:	4621      	mov	r1, r4
 8003f4a:	f7fe fa42 	bl	80023d2 <memset>
 8003f4e:	e7f5      	b.n	8003f3c <_calloc_r+0x14>

08003f50 <__ascii_mbtowc>:
 8003f50:	b082      	sub	sp, #8
 8003f52:	b901      	cbnz	r1, 8003f56 <__ascii_mbtowc+0x6>
 8003f54:	a901      	add	r1, sp, #4
 8003f56:	b142      	cbz	r2, 8003f6a <__ascii_mbtowc+0x1a>
 8003f58:	b14b      	cbz	r3, 8003f6e <__ascii_mbtowc+0x1e>
 8003f5a:	7813      	ldrb	r3, [r2, #0]
 8003f5c:	600b      	str	r3, [r1, #0]
 8003f5e:	7812      	ldrb	r2, [r2, #0]
 8003f60:	1e10      	subs	r0, r2, #0
 8003f62:	bf18      	it	ne
 8003f64:	2001      	movne	r0, #1
 8003f66:	b002      	add	sp, #8
 8003f68:	4770      	bx	lr
 8003f6a:	4610      	mov	r0, r2
 8003f6c:	e7fb      	b.n	8003f66 <__ascii_mbtowc+0x16>
 8003f6e:	f06f 0001 	mvn.w	r0, #1
 8003f72:	e7f8      	b.n	8003f66 <__ascii_mbtowc+0x16>

08003f74 <_realloc_r>:
 8003f74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f78:	4680      	mov	r8, r0
 8003f7a:	4615      	mov	r5, r2
 8003f7c:	460c      	mov	r4, r1
 8003f7e:	b921      	cbnz	r1, 8003f8a <_realloc_r+0x16>
 8003f80:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003f84:	4611      	mov	r1, r2
 8003f86:	f7ff b967 	b.w	8003258 <_malloc_r>
 8003f8a:	b92a      	cbnz	r2, 8003f98 <_realloc_r+0x24>
 8003f8c:	f7ff f8f0 	bl	8003170 <_free_r>
 8003f90:	2400      	movs	r4, #0
 8003f92:	4620      	mov	r0, r4
 8003f94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003f98:	f000 f841 	bl	800401e <_malloc_usable_size_r>
 8003f9c:	4285      	cmp	r5, r0
 8003f9e:	4606      	mov	r6, r0
 8003fa0:	d802      	bhi.n	8003fa8 <_realloc_r+0x34>
 8003fa2:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8003fa6:	d8f4      	bhi.n	8003f92 <_realloc_r+0x1e>
 8003fa8:	4629      	mov	r1, r5
 8003faa:	4640      	mov	r0, r8
 8003fac:	f7ff f954 	bl	8003258 <_malloc_r>
 8003fb0:	4607      	mov	r7, r0
 8003fb2:	2800      	cmp	r0, #0
 8003fb4:	d0ec      	beq.n	8003f90 <_realloc_r+0x1c>
 8003fb6:	42b5      	cmp	r5, r6
 8003fb8:	462a      	mov	r2, r5
 8003fba:	4621      	mov	r1, r4
 8003fbc:	bf28      	it	cs
 8003fbe:	4632      	movcs	r2, r6
 8003fc0:	f7ff ff86 	bl	8003ed0 <memcpy>
 8003fc4:	4621      	mov	r1, r4
 8003fc6:	4640      	mov	r0, r8
 8003fc8:	f7ff f8d2 	bl	8003170 <_free_r>
 8003fcc:	463c      	mov	r4, r7
 8003fce:	e7e0      	b.n	8003f92 <_realloc_r+0x1e>

08003fd0 <__ascii_wctomb>:
 8003fd0:	4603      	mov	r3, r0
 8003fd2:	4608      	mov	r0, r1
 8003fd4:	b141      	cbz	r1, 8003fe8 <__ascii_wctomb+0x18>
 8003fd6:	2aff      	cmp	r2, #255	@ 0xff
 8003fd8:	d904      	bls.n	8003fe4 <__ascii_wctomb+0x14>
 8003fda:	228a      	movs	r2, #138	@ 0x8a
 8003fdc:	601a      	str	r2, [r3, #0]
 8003fde:	f04f 30ff 	mov.w	r0, #4294967295
 8003fe2:	4770      	bx	lr
 8003fe4:	700a      	strb	r2, [r1, #0]
 8003fe6:	2001      	movs	r0, #1
 8003fe8:	4770      	bx	lr
	...

08003fec <fiprintf>:
 8003fec:	b40e      	push	{r1, r2, r3}
 8003fee:	b503      	push	{r0, r1, lr}
 8003ff0:	4601      	mov	r1, r0
 8003ff2:	ab03      	add	r3, sp, #12
 8003ff4:	4805      	ldr	r0, [pc, #20]	@ (800400c <fiprintf+0x20>)
 8003ff6:	f853 2b04 	ldr.w	r2, [r3], #4
 8003ffa:	6800      	ldr	r0, [r0, #0]
 8003ffc:	9301      	str	r3, [sp, #4]
 8003ffe:	f000 f83f 	bl	8004080 <_vfiprintf_r>
 8004002:	b002      	add	sp, #8
 8004004:	f85d eb04 	ldr.w	lr, [sp], #4
 8004008:	b003      	add	sp, #12
 800400a:	4770      	bx	lr
 800400c:	2000000c 	.word	0x2000000c

08004010 <abort>:
 8004010:	b508      	push	{r3, lr}
 8004012:	2006      	movs	r0, #6
 8004014:	f000 fa08 	bl	8004428 <raise>
 8004018:	2001      	movs	r0, #1
 800401a:	f7fd fb35 	bl	8001688 <_exit>

0800401e <_malloc_usable_size_r>:
 800401e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004022:	1f18      	subs	r0, r3, #4
 8004024:	2b00      	cmp	r3, #0
 8004026:	bfbc      	itt	lt
 8004028:	580b      	ldrlt	r3, [r1, r0]
 800402a:	18c0      	addlt	r0, r0, r3
 800402c:	4770      	bx	lr

0800402e <__sfputc_r>:
 800402e:	6893      	ldr	r3, [r2, #8]
 8004030:	3b01      	subs	r3, #1
 8004032:	2b00      	cmp	r3, #0
 8004034:	b410      	push	{r4}
 8004036:	6093      	str	r3, [r2, #8]
 8004038:	da08      	bge.n	800404c <__sfputc_r+0x1e>
 800403a:	6994      	ldr	r4, [r2, #24]
 800403c:	42a3      	cmp	r3, r4
 800403e:	db01      	blt.n	8004044 <__sfputc_r+0x16>
 8004040:	290a      	cmp	r1, #10
 8004042:	d103      	bne.n	800404c <__sfputc_r+0x1e>
 8004044:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004048:	f000 b932 	b.w	80042b0 <__swbuf_r>
 800404c:	6813      	ldr	r3, [r2, #0]
 800404e:	1c58      	adds	r0, r3, #1
 8004050:	6010      	str	r0, [r2, #0]
 8004052:	7019      	strb	r1, [r3, #0]
 8004054:	4608      	mov	r0, r1
 8004056:	f85d 4b04 	ldr.w	r4, [sp], #4
 800405a:	4770      	bx	lr

0800405c <__sfputs_r>:
 800405c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800405e:	4606      	mov	r6, r0
 8004060:	460f      	mov	r7, r1
 8004062:	4614      	mov	r4, r2
 8004064:	18d5      	adds	r5, r2, r3
 8004066:	42ac      	cmp	r4, r5
 8004068:	d101      	bne.n	800406e <__sfputs_r+0x12>
 800406a:	2000      	movs	r0, #0
 800406c:	e007      	b.n	800407e <__sfputs_r+0x22>
 800406e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004072:	463a      	mov	r2, r7
 8004074:	4630      	mov	r0, r6
 8004076:	f7ff ffda 	bl	800402e <__sfputc_r>
 800407a:	1c43      	adds	r3, r0, #1
 800407c:	d1f3      	bne.n	8004066 <__sfputs_r+0xa>
 800407e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004080 <_vfiprintf_r>:
 8004080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004084:	460d      	mov	r5, r1
 8004086:	b09d      	sub	sp, #116	@ 0x74
 8004088:	4614      	mov	r4, r2
 800408a:	4698      	mov	r8, r3
 800408c:	4606      	mov	r6, r0
 800408e:	b118      	cbz	r0, 8004098 <_vfiprintf_r+0x18>
 8004090:	6a03      	ldr	r3, [r0, #32]
 8004092:	b90b      	cbnz	r3, 8004098 <_vfiprintf_r+0x18>
 8004094:	f7fe f8f0 	bl	8002278 <__sinit>
 8004098:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800409a:	07d9      	lsls	r1, r3, #31
 800409c:	d405      	bmi.n	80040aa <_vfiprintf_r+0x2a>
 800409e:	89ab      	ldrh	r3, [r5, #12]
 80040a0:	059a      	lsls	r2, r3, #22
 80040a2:	d402      	bmi.n	80040aa <_vfiprintf_r+0x2a>
 80040a4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80040a6:	f7fe fa12 	bl	80024ce <__retarget_lock_acquire_recursive>
 80040aa:	89ab      	ldrh	r3, [r5, #12]
 80040ac:	071b      	lsls	r3, r3, #28
 80040ae:	d501      	bpl.n	80040b4 <_vfiprintf_r+0x34>
 80040b0:	692b      	ldr	r3, [r5, #16]
 80040b2:	b99b      	cbnz	r3, 80040dc <_vfiprintf_r+0x5c>
 80040b4:	4629      	mov	r1, r5
 80040b6:	4630      	mov	r0, r6
 80040b8:	f000 f938 	bl	800432c <__swsetup_r>
 80040bc:	b170      	cbz	r0, 80040dc <_vfiprintf_r+0x5c>
 80040be:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80040c0:	07dc      	lsls	r4, r3, #31
 80040c2:	d504      	bpl.n	80040ce <_vfiprintf_r+0x4e>
 80040c4:	f04f 30ff 	mov.w	r0, #4294967295
 80040c8:	b01d      	add	sp, #116	@ 0x74
 80040ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80040ce:	89ab      	ldrh	r3, [r5, #12]
 80040d0:	0598      	lsls	r0, r3, #22
 80040d2:	d4f7      	bmi.n	80040c4 <_vfiprintf_r+0x44>
 80040d4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80040d6:	f7fe f9fb 	bl	80024d0 <__retarget_lock_release_recursive>
 80040da:	e7f3      	b.n	80040c4 <_vfiprintf_r+0x44>
 80040dc:	2300      	movs	r3, #0
 80040de:	9309      	str	r3, [sp, #36]	@ 0x24
 80040e0:	2320      	movs	r3, #32
 80040e2:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80040e6:	f8cd 800c 	str.w	r8, [sp, #12]
 80040ea:	2330      	movs	r3, #48	@ 0x30
 80040ec:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800429c <_vfiprintf_r+0x21c>
 80040f0:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80040f4:	f04f 0901 	mov.w	r9, #1
 80040f8:	4623      	mov	r3, r4
 80040fa:	469a      	mov	sl, r3
 80040fc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004100:	b10a      	cbz	r2, 8004106 <_vfiprintf_r+0x86>
 8004102:	2a25      	cmp	r2, #37	@ 0x25
 8004104:	d1f9      	bne.n	80040fa <_vfiprintf_r+0x7a>
 8004106:	ebba 0b04 	subs.w	fp, sl, r4
 800410a:	d00b      	beq.n	8004124 <_vfiprintf_r+0xa4>
 800410c:	465b      	mov	r3, fp
 800410e:	4622      	mov	r2, r4
 8004110:	4629      	mov	r1, r5
 8004112:	4630      	mov	r0, r6
 8004114:	f7ff ffa2 	bl	800405c <__sfputs_r>
 8004118:	3001      	adds	r0, #1
 800411a:	f000 80a7 	beq.w	800426c <_vfiprintf_r+0x1ec>
 800411e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004120:	445a      	add	r2, fp
 8004122:	9209      	str	r2, [sp, #36]	@ 0x24
 8004124:	f89a 3000 	ldrb.w	r3, [sl]
 8004128:	2b00      	cmp	r3, #0
 800412a:	f000 809f 	beq.w	800426c <_vfiprintf_r+0x1ec>
 800412e:	2300      	movs	r3, #0
 8004130:	f04f 32ff 	mov.w	r2, #4294967295
 8004134:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004138:	f10a 0a01 	add.w	sl, sl, #1
 800413c:	9304      	str	r3, [sp, #16]
 800413e:	9307      	str	r3, [sp, #28]
 8004140:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8004144:	931a      	str	r3, [sp, #104]	@ 0x68
 8004146:	4654      	mov	r4, sl
 8004148:	2205      	movs	r2, #5
 800414a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800414e:	4853      	ldr	r0, [pc, #332]	@ (800429c <_vfiprintf_r+0x21c>)
 8004150:	f7fc f85e 	bl	8000210 <memchr>
 8004154:	9a04      	ldr	r2, [sp, #16]
 8004156:	b9d8      	cbnz	r0, 8004190 <_vfiprintf_r+0x110>
 8004158:	06d1      	lsls	r1, r2, #27
 800415a:	bf44      	itt	mi
 800415c:	2320      	movmi	r3, #32
 800415e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004162:	0713      	lsls	r3, r2, #28
 8004164:	bf44      	itt	mi
 8004166:	232b      	movmi	r3, #43	@ 0x2b
 8004168:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800416c:	f89a 3000 	ldrb.w	r3, [sl]
 8004170:	2b2a      	cmp	r3, #42	@ 0x2a
 8004172:	d015      	beq.n	80041a0 <_vfiprintf_r+0x120>
 8004174:	9a07      	ldr	r2, [sp, #28]
 8004176:	4654      	mov	r4, sl
 8004178:	2000      	movs	r0, #0
 800417a:	f04f 0c0a 	mov.w	ip, #10
 800417e:	4621      	mov	r1, r4
 8004180:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004184:	3b30      	subs	r3, #48	@ 0x30
 8004186:	2b09      	cmp	r3, #9
 8004188:	d94b      	bls.n	8004222 <_vfiprintf_r+0x1a2>
 800418a:	b1b0      	cbz	r0, 80041ba <_vfiprintf_r+0x13a>
 800418c:	9207      	str	r2, [sp, #28]
 800418e:	e014      	b.n	80041ba <_vfiprintf_r+0x13a>
 8004190:	eba0 0308 	sub.w	r3, r0, r8
 8004194:	fa09 f303 	lsl.w	r3, r9, r3
 8004198:	4313      	orrs	r3, r2
 800419a:	9304      	str	r3, [sp, #16]
 800419c:	46a2      	mov	sl, r4
 800419e:	e7d2      	b.n	8004146 <_vfiprintf_r+0xc6>
 80041a0:	9b03      	ldr	r3, [sp, #12]
 80041a2:	1d19      	adds	r1, r3, #4
 80041a4:	681b      	ldr	r3, [r3, #0]
 80041a6:	9103      	str	r1, [sp, #12]
 80041a8:	2b00      	cmp	r3, #0
 80041aa:	bfbb      	ittet	lt
 80041ac:	425b      	neglt	r3, r3
 80041ae:	f042 0202 	orrlt.w	r2, r2, #2
 80041b2:	9307      	strge	r3, [sp, #28]
 80041b4:	9307      	strlt	r3, [sp, #28]
 80041b6:	bfb8      	it	lt
 80041b8:	9204      	strlt	r2, [sp, #16]
 80041ba:	7823      	ldrb	r3, [r4, #0]
 80041bc:	2b2e      	cmp	r3, #46	@ 0x2e
 80041be:	d10a      	bne.n	80041d6 <_vfiprintf_r+0x156>
 80041c0:	7863      	ldrb	r3, [r4, #1]
 80041c2:	2b2a      	cmp	r3, #42	@ 0x2a
 80041c4:	d132      	bne.n	800422c <_vfiprintf_r+0x1ac>
 80041c6:	9b03      	ldr	r3, [sp, #12]
 80041c8:	1d1a      	adds	r2, r3, #4
 80041ca:	681b      	ldr	r3, [r3, #0]
 80041cc:	9203      	str	r2, [sp, #12]
 80041ce:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80041d2:	3402      	adds	r4, #2
 80041d4:	9305      	str	r3, [sp, #20]
 80041d6:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80042ac <_vfiprintf_r+0x22c>
 80041da:	7821      	ldrb	r1, [r4, #0]
 80041dc:	2203      	movs	r2, #3
 80041de:	4650      	mov	r0, sl
 80041e0:	f7fc f816 	bl	8000210 <memchr>
 80041e4:	b138      	cbz	r0, 80041f6 <_vfiprintf_r+0x176>
 80041e6:	9b04      	ldr	r3, [sp, #16]
 80041e8:	eba0 000a 	sub.w	r0, r0, sl
 80041ec:	2240      	movs	r2, #64	@ 0x40
 80041ee:	4082      	lsls	r2, r0
 80041f0:	4313      	orrs	r3, r2
 80041f2:	3401      	adds	r4, #1
 80041f4:	9304      	str	r3, [sp, #16]
 80041f6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80041fa:	4829      	ldr	r0, [pc, #164]	@ (80042a0 <_vfiprintf_r+0x220>)
 80041fc:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004200:	2206      	movs	r2, #6
 8004202:	f7fc f805 	bl	8000210 <memchr>
 8004206:	2800      	cmp	r0, #0
 8004208:	d03f      	beq.n	800428a <_vfiprintf_r+0x20a>
 800420a:	4b26      	ldr	r3, [pc, #152]	@ (80042a4 <_vfiprintf_r+0x224>)
 800420c:	bb1b      	cbnz	r3, 8004256 <_vfiprintf_r+0x1d6>
 800420e:	9b03      	ldr	r3, [sp, #12]
 8004210:	3307      	adds	r3, #7
 8004212:	f023 0307 	bic.w	r3, r3, #7
 8004216:	3308      	adds	r3, #8
 8004218:	9303      	str	r3, [sp, #12]
 800421a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800421c:	443b      	add	r3, r7
 800421e:	9309      	str	r3, [sp, #36]	@ 0x24
 8004220:	e76a      	b.n	80040f8 <_vfiprintf_r+0x78>
 8004222:	fb0c 3202 	mla	r2, ip, r2, r3
 8004226:	460c      	mov	r4, r1
 8004228:	2001      	movs	r0, #1
 800422a:	e7a8      	b.n	800417e <_vfiprintf_r+0xfe>
 800422c:	2300      	movs	r3, #0
 800422e:	3401      	adds	r4, #1
 8004230:	9305      	str	r3, [sp, #20]
 8004232:	4619      	mov	r1, r3
 8004234:	f04f 0c0a 	mov.w	ip, #10
 8004238:	4620      	mov	r0, r4
 800423a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800423e:	3a30      	subs	r2, #48	@ 0x30
 8004240:	2a09      	cmp	r2, #9
 8004242:	d903      	bls.n	800424c <_vfiprintf_r+0x1cc>
 8004244:	2b00      	cmp	r3, #0
 8004246:	d0c6      	beq.n	80041d6 <_vfiprintf_r+0x156>
 8004248:	9105      	str	r1, [sp, #20]
 800424a:	e7c4      	b.n	80041d6 <_vfiprintf_r+0x156>
 800424c:	fb0c 2101 	mla	r1, ip, r1, r2
 8004250:	4604      	mov	r4, r0
 8004252:	2301      	movs	r3, #1
 8004254:	e7f0      	b.n	8004238 <_vfiprintf_r+0x1b8>
 8004256:	ab03      	add	r3, sp, #12
 8004258:	9300      	str	r3, [sp, #0]
 800425a:	462a      	mov	r2, r5
 800425c:	4b12      	ldr	r3, [pc, #72]	@ (80042a8 <_vfiprintf_r+0x228>)
 800425e:	a904      	add	r1, sp, #16
 8004260:	4630      	mov	r0, r6
 8004262:	f7fd fbc5 	bl	80019f0 <_printf_float>
 8004266:	4607      	mov	r7, r0
 8004268:	1c78      	adds	r0, r7, #1
 800426a:	d1d6      	bne.n	800421a <_vfiprintf_r+0x19a>
 800426c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800426e:	07d9      	lsls	r1, r3, #31
 8004270:	d405      	bmi.n	800427e <_vfiprintf_r+0x1fe>
 8004272:	89ab      	ldrh	r3, [r5, #12]
 8004274:	059a      	lsls	r2, r3, #22
 8004276:	d402      	bmi.n	800427e <_vfiprintf_r+0x1fe>
 8004278:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800427a:	f7fe f929 	bl	80024d0 <__retarget_lock_release_recursive>
 800427e:	89ab      	ldrh	r3, [r5, #12]
 8004280:	065b      	lsls	r3, r3, #25
 8004282:	f53f af1f 	bmi.w	80040c4 <_vfiprintf_r+0x44>
 8004286:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004288:	e71e      	b.n	80040c8 <_vfiprintf_r+0x48>
 800428a:	ab03      	add	r3, sp, #12
 800428c:	9300      	str	r3, [sp, #0]
 800428e:	462a      	mov	r2, r5
 8004290:	4b05      	ldr	r3, [pc, #20]	@ (80042a8 <_vfiprintf_r+0x228>)
 8004292:	a904      	add	r1, sp, #16
 8004294:	4630      	mov	r0, r6
 8004296:	f7fd fe43 	bl	8001f20 <_printf_i>
 800429a:	e7e4      	b.n	8004266 <_vfiprintf_r+0x1e6>
 800429c:	08004a20 	.word	0x08004a20
 80042a0:	08004a2a 	.word	0x08004a2a
 80042a4:	080019f1 	.word	0x080019f1
 80042a8:	0800405d 	.word	0x0800405d
 80042ac:	08004a26 	.word	0x08004a26

080042b0 <__swbuf_r>:
 80042b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80042b2:	460e      	mov	r6, r1
 80042b4:	4614      	mov	r4, r2
 80042b6:	4605      	mov	r5, r0
 80042b8:	b118      	cbz	r0, 80042c2 <__swbuf_r+0x12>
 80042ba:	6a03      	ldr	r3, [r0, #32]
 80042bc:	b90b      	cbnz	r3, 80042c2 <__swbuf_r+0x12>
 80042be:	f7fd ffdb 	bl	8002278 <__sinit>
 80042c2:	69a3      	ldr	r3, [r4, #24]
 80042c4:	60a3      	str	r3, [r4, #8]
 80042c6:	89a3      	ldrh	r3, [r4, #12]
 80042c8:	071a      	lsls	r2, r3, #28
 80042ca:	d501      	bpl.n	80042d0 <__swbuf_r+0x20>
 80042cc:	6923      	ldr	r3, [r4, #16]
 80042ce:	b943      	cbnz	r3, 80042e2 <__swbuf_r+0x32>
 80042d0:	4621      	mov	r1, r4
 80042d2:	4628      	mov	r0, r5
 80042d4:	f000 f82a 	bl	800432c <__swsetup_r>
 80042d8:	b118      	cbz	r0, 80042e2 <__swbuf_r+0x32>
 80042da:	f04f 37ff 	mov.w	r7, #4294967295
 80042de:	4638      	mov	r0, r7
 80042e0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80042e2:	6823      	ldr	r3, [r4, #0]
 80042e4:	6922      	ldr	r2, [r4, #16]
 80042e6:	1a98      	subs	r0, r3, r2
 80042e8:	6963      	ldr	r3, [r4, #20]
 80042ea:	b2f6      	uxtb	r6, r6
 80042ec:	4283      	cmp	r3, r0
 80042ee:	4637      	mov	r7, r6
 80042f0:	dc05      	bgt.n	80042fe <__swbuf_r+0x4e>
 80042f2:	4621      	mov	r1, r4
 80042f4:	4628      	mov	r0, r5
 80042f6:	f7ff fd99 	bl	8003e2c <_fflush_r>
 80042fa:	2800      	cmp	r0, #0
 80042fc:	d1ed      	bne.n	80042da <__swbuf_r+0x2a>
 80042fe:	68a3      	ldr	r3, [r4, #8]
 8004300:	3b01      	subs	r3, #1
 8004302:	60a3      	str	r3, [r4, #8]
 8004304:	6823      	ldr	r3, [r4, #0]
 8004306:	1c5a      	adds	r2, r3, #1
 8004308:	6022      	str	r2, [r4, #0]
 800430a:	701e      	strb	r6, [r3, #0]
 800430c:	6962      	ldr	r2, [r4, #20]
 800430e:	1c43      	adds	r3, r0, #1
 8004310:	429a      	cmp	r2, r3
 8004312:	d004      	beq.n	800431e <__swbuf_r+0x6e>
 8004314:	89a3      	ldrh	r3, [r4, #12]
 8004316:	07db      	lsls	r3, r3, #31
 8004318:	d5e1      	bpl.n	80042de <__swbuf_r+0x2e>
 800431a:	2e0a      	cmp	r6, #10
 800431c:	d1df      	bne.n	80042de <__swbuf_r+0x2e>
 800431e:	4621      	mov	r1, r4
 8004320:	4628      	mov	r0, r5
 8004322:	f7ff fd83 	bl	8003e2c <_fflush_r>
 8004326:	2800      	cmp	r0, #0
 8004328:	d0d9      	beq.n	80042de <__swbuf_r+0x2e>
 800432a:	e7d6      	b.n	80042da <__swbuf_r+0x2a>

0800432c <__swsetup_r>:
 800432c:	b538      	push	{r3, r4, r5, lr}
 800432e:	4b29      	ldr	r3, [pc, #164]	@ (80043d4 <__swsetup_r+0xa8>)
 8004330:	4605      	mov	r5, r0
 8004332:	6818      	ldr	r0, [r3, #0]
 8004334:	460c      	mov	r4, r1
 8004336:	b118      	cbz	r0, 8004340 <__swsetup_r+0x14>
 8004338:	6a03      	ldr	r3, [r0, #32]
 800433a:	b90b      	cbnz	r3, 8004340 <__swsetup_r+0x14>
 800433c:	f7fd ff9c 	bl	8002278 <__sinit>
 8004340:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004344:	0719      	lsls	r1, r3, #28
 8004346:	d422      	bmi.n	800438e <__swsetup_r+0x62>
 8004348:	06da      	lsls	r2, r3, #27
 800434a:	d407      	bmi.n	800435c <__swsetup_r+0x30>
 800434c:	2209      	movs	r2, #9
 800434e:	602a      	str	r2, [r5, #0]
 8004350:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8004354:	81a3      	strh	r3, [r4, #12]
 8004356:	f04f 30ff 	mov.w	r0, #4294967295
 800435a:	e033      	b.n	80043c4 <__swsetup_r+0x98>
 800435c:	0758      	lsls	r0, r3, #29
 800435e:	d512      	bpl.n	8004386 <__swsetup_r+0x5a>
 8004360:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004362:	b141      	cbz	r1, 8004376 <__swsetup_r+0x4a>
 8004364:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004368:	4299      	cmp	r1, r3
 800436a:	d002      	beq.n	8004372 <__swsetup_r+0x46>
 800436c:	4628      	mov	r0, r5
 800436e:	f7fe feff 	bl	8003170 <_free_r>
 8004372:	2300      	movs	r3, #0
 8004374:	6363      	str	r3, [r4, #52]	@ 0x34
 8004376:	89a3      	ldrh	r3, [r4, #12]
 8004378:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800437c:	81a3      	strh	r3, [r4, #12]
 800437e:	2300      	movs	r3, #0
 8004380:	6063      	str	r3, [r4, #4]
 8004382:	6923      	ldr	r3, [r4, #16]
 8004384:	6023      	str	r3, [r4, #0]
 8004386:	89a3      	ldrh	r3, [r4, #12]
 8004388:	f043 0308 	orr.w	r3, r3, #8
 800438c:	81a3      	strh	r3, [r4, #12]
 800438e:	6923      	ldr	r3, [r4, #16]
 8004390:	b94b      	cbnz	r3, 80043a6 <__swsetup_r+0x7a>
 8004392:	89a3      	ldrh	r3, [r4, #12]
 8004394:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8004398:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800439c:	d003      	beq.n	80043a6 <__swsetup_r+0x7a>
 800439e:	4621      	mov	r1, r4
 80043a0:	4628      	mov	r0, r5
 80043a2:	f000 f883 	bl	80044ac <__smakebuf_r>
 80043a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80043aa:	f013 0201 	ands.w	r2, r3, #1
 80043ae:	d00a      	beq.n	80043c6 <__swsetup_r+0x9a>
 80043b0:	2200      	movs	r2, #0
 80043b2:	60a2      	str	r2, [r4, #8]
 80043b4:	6962      	ldr	r2, [r4, #20]
 80043b6:	4252      	negs	r2, r2
 80043b8:	61a2      	str	r2, [r4, #24]
 80043ba:	6922      	ldr	r2, [r4, #16]
 80043bc:	b942      	cbnz	r2, 80043d0 <__swsetup_r+0xa4>
 80043be:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80043c2:	d1c5      	bne.n	8004350 <__swsetup_r+0x24>
 80043c4:	bd38      	pop	{r3, r4, r5, pc}
 80043c6:	0799      	lsls	r1, r3, #30
 80043c8:	bf58      	it	pl
 80043ca:	6962      	ldrpl	r2, [r4, #20]
 80043cc:	60a2      	str	r2, [r4, #8]
 80043ce:	e7f4      	b.n	80043ba <__swsetup_r+0x8e>
 80043d0:	2000      	movs	r0, #0
 80043d2:	e7f7      	b.n	80043c4 <__swsetup_r+0x98>
 80043d4:	2000000c 	.word	0x2000000c

080043d8 <_raise_r>:
 80043d8:	291f      	cmp	r1, #31
 80043da:	b538      	push	{r3, r4, r5, lr}
 80043dc:	4605      	mov	r5, r0
 80043de:	460c      	mov	r4, r1
 80043e0:	d904      	bls.n	80043ec <_raise_r+0x14>
 80043e2:	2316      	movs	r3, #22
 80043e4:	6003      	str	r3, [r0, #0]
 80043e6:	f04f 30ff 	mov.w	r0, #4294967295
 80043ea:	bd38      	pop	{r3, r4, r5, pc}
 80043ec:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80043ee:	b112      	cbz	r2, 80043f6 <_raise_r+0x1e>
 80043f0:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80043f4:	b94b      	cbnz	r3, 800440a <_raise_r+0x32>
 80043f6:	4628      	mov	r0, r5
 80043f8:	f000 f830 	bl	800445c <_getpid_r>
 80043fc:	4622      	mov	r2, r4
 80043fe:	4601      	mov	r1, r0
 8004400:	4628      	mov	r0, r5
 8004402:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004406:	f000 b817 	b.w	8004438 <_kill_r>
 800440a:	2b01      	cmp	r3, #1
 800440c:	d00a      	beq.n	8004424 <_raise_r+0x4c>
 800440e:	1c59      	adds	r1, r3, #1
 8004410:	d103      	bne.n	800441a <_raise_r+0x42>
 8004412:	2316      	movs	r3, #22
 8004414:	6003      	str	r3, [r0, #0]
 8004416:	2001      	movs	r0, #1
 8004418:	e7e7      	b.n	80043ea <_raise_r+0x12>
 800441a:	2100      	movs	r1, #0
 800441c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004420:	4620      	mov	r0, r4
 8004422:	4798      	blx	r3
 8004424:	2000      	movs	r0, #0
 8004426:	e7e0      	b.n	80043ea <_raise_r+0x12>

08004428 <raise>:
 8004428:	4b02      	ldr	r3, [pc, #8]	@ (8004434 <raise+0xc>)
 800442a:	4601      	mov	r1, r0
 800442c:	6818      	ldr	r0, [r3, #0]
 800442e:	f7ff bfd3 	b.w	80043d8 <_raise_r>
 8004432:	bf00      	nop
 8004434:	2000000c 	.word	0x2000000c

08004438 <_kill_r>:
 8004438:	b538      	push	{r3, r4, r5, lr}
 800443a:	4d07      	ldr	r5, [pc, #28]	@ (8004458 <_kill_r+0x20>)
 800443c:	2300      	movs	r3, #0
 800443e:	4604      	mov	r4, r0
 8004440:	4608      	mov	r0, r1
 8004442:	4611      	mov	r1, r2
 8004444:	602b      	str	r3, [r5, #0]
 8004446:	f7fd f90f 	bl	8001668 <_kill>
 800444a:	1c43      	adds	r3, r0, #1
 800444c:	d102      	bne.n	8004454 <_kill_r+0x1c>
 800444e:	682b      	ldr	r3, [r5, #0]
 8004450:	b103      	cbz	r3, 8004454 <_kill_r+0x1c>
 8004452:	6023      	str	r3, [r4, #0]
 8004454:	bd38      	pop	{r3, r4, r5, pc}
 8004456:	bf00      	nop
 8004458:	20000378 	.word	0x20000378

0800445c <_getpid_r>:
 800445c:	f7fd b8fc 	b.w	8001658 <_getpid>

08004460 <__swhatbuf_r>:
 8004460:	b570      	push	{r4, r5, r6, lr}
 8004462:	460c      	mov	r4, r1
 8004464:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004468:	2900      	cmp	r1, #0
 800446a:	b096      	sub	sp, #88	@ 0x58
 800446c:	4615      	mov	r5, r2
 800446e:	461e      	mov	r6, r3
 8004470:	da0d      	bge.n	800448e <__swhatbuf_r+0x2e>
 8004472:	89a3      	ldrh	r3, [r4, #12]
 8004474:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004478:	f04f 0100 	mov.w	r1, #0
 800447c:	bf14      	ite	ne
 800447e:	2340      	movne	r3, #64	@ 0x40
 8004480:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8004484:	2000      	movs	r0, #0
 8004486:	6031      	str	r1, [r6, #0]
 8004488:	602b      	str	r3, [r5, #0]
 800448a:	b016      	add	sp, #88	@ 0x58
 800448c:	bd70      	pop	{r4, r5, r6, pc}
 800448e:	466a      	mov	r2, sp
 8004490:	f000 f848 	bl	8004524 <_fstat_r>
 8004494:	2800      	cmp	r0, #0
 8004496:	dbec      	blt.n	8004472 <__swhatbuf_r+0x12>
 8004498:	9901      	ldr	r1, [sp, #4]
 800449a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800449e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80044a2:	4259      	negs	r1, r3
 80044a4:	4159      	adcs	r1, r3
 80044a6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80044aa:	e7eb      	b.n	8004484 <__swhatbuf_r+0x24>

080044ac <__smakebuf_r>:
 80044ac:	898b      	ldrh	r3, [r1, #12]
 80044ae:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80044b0:	079d      	lsls	r5, r3, #30
 80044b2:	4606      	mov	r6, r0
 80044b4:	460c      	mov	r4, r1
 80044b6:	d507      	bpl.n	80044c8 <__smakebuf_r+0x1c>
 80044b8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80044bc:	6023      	str	r3, [r4, #0]
 80044be:	6123      	str	r3, [r4, #16]
 80044c0:	2301      	movs	r3, #1
 80044c2:	6163      	str	r3, [r4, #20]
 80044c4:	b003      	add	sp, #12
 80044c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80044c8:	ab01      	add	r3, sp, #4
 80044ca:	466a      	mov	r2, sp
 80044cc:	f7ff ffc8 	bl	8004460 <__swhatbuf_r>
 80044d0:	9f00      	ldr	r7, [sp, #0]
 80044d2:	4605      	mov	r5, r0
 80044d4:	4639      	mov	r1, r7
 80044d6:	4630      	mov	r0, r6
 80044d8:	f7fe febe 	bl	8003258 <_malloc_r>
 80044dc:	b948      	cbnz	r0, 80044f2 <__smakebuf_r+0x46>
 80044de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80044e2:	059a      	lsls	r2, r3, #22
 80044e4:	d4ee      	bmi.n	80044c4 <__smakebuf_r+0x18>
 80044e6:	f023 0303 	bic.w	r3, r3, #3
 80044ea:	f043 0302 	orr.w	r3, r3, #2
 80044ee:	81a3      	strh	r3, [r4, #12]
 80044f0:	e7e2      	b.n	80044b8 <__smakebuf_r+0xc>
 80044f2:	89a3      	ldrh	r3, [r4, #12]
 80044f4:	6020      	str	r0, [r4, #0]
 80044f6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80044fa:	81a3      	strh	r3, [r4, #12]
 80044fc:	9b01      	ldr	r3, [sp, #4]
 80044fe:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8004502:	b15b      	cbz	r3, 800451c <__smakebuf_r+0x70>
 8004504:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004508:	4630      	mov	r0, r6
 800450a:	f000 f81d 	bl	8004548 <_isatty_r>
 800450e:	b128      	cbz	r0, 800451c <__smakebuf_r+0x70>
 8004510:	89a3      	ldrh	r3, [r4, #12]
 8004512:	f023 0303 	bic.w	r3, r3, #3
 8004516:	f043 0301 	orr.w	r3, r3, #1
 800451a:	81a3      	strh	r3, [r4, #12]
 800451c:	89a3      	ldrh	r3, [r4, #12]
 800451e:	431d      	orrs	r5, r3
 8004520:	81a5      	strh	r5, [r4, #12]
 8004522:	e7cf      	b.n	80044c4 <__smakebuf_r+0x18>

08004524 <_fstat_r>:
 8004524:	b538      	push	{r3, r4, r5, lr}
 8004526:	4d07      	ldr	r5, [pc, #28]	@ (8004544 <_fstat_r+0x20>)
 8004528:	2300      	movs	r3, #0
 800452a:	4604      	mov	r4, r0
 800452c:	4608      	mov	r0, r1
 800452e:	4611      	mov	r1, r2
 8004530:	602b      	str	r3, [r5, #0]
 8004532:	f7fd f8f9 	bl	8001728 <_fstat>
 8004536:	1c43      	adds	r3, r0, #1
 8004538:	d102      	bne.n	8004540 <_fstat_r+0x1c>
 800453a:	682b      	ldr	r3, [r5, #0]
 800453c:	b103      	cbz	r3, 8004540 <_fstat_r+0x1c>
 800453e:	6023      	str	r3, [r4, #0]
 8004540:	bd38      	pop	{r3, r4, r5, pc}
 8004542:	bf00      	nop
 8004544:	20000378 	.word	0x20000378

08004548 <_isatty_r>:
 8004548:	b538      	push	{r3, r4, r5, lr}
 800454a:	4d06      	ldr	r5, [pc, #24]	@ (8004564 <_isatty_r+0x1c>)
 800454c:	2300      	movs	r3, #0
 800454e:	4604      	mov	r4, r0
 8004550:	4608      	mov	r0, r1
 8004552:	602b      	str	r3, [r5, #0]
 8004554:	f7fd f8f8 	bl	8001748 <_isatty>
 8004558:	1c43      	adds	r3, r0, #1
 800455a:	d102      	bne.n	8004562 <_isatty_r+0x1a>
 800455c:	682b      	ldr	r3, [r5, #0]
 800455e:	b103      	cbz	r3, 8004562 <_isatty_r+0x1a>
 8004560:	6023      	str	r3, [r4, #0]
 8004562:	bd38      	pop	{r3, r4, r5, pc}
 8004564:	20000378 	.word	0x20000378

08004568 <logf>:
 8004568:	b508      	push	{r3, lr}
 800456a:	ed2d 8b02 	vpush	{d8}
 800456e:	eeb0 8a40 	vmov.f32	s16, s0
 8004572:	f000 f82d 	bl	80045d0 <__ieee754_logf>
 8004576:	eeb4 8a48 	vcmp.f32	s16, s16
 800457a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800457e:	d60f      	bvs.n	80045a0 <logf+0x38>
 8004580:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8004584:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004588:	dc0a      	bgt.n	80045a0 <logf+0x38>
 800458a:	eeb5 8a40 	vcmp.f32	s16, #0.0
 800458e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004592:	d108      	bne.n	80045a6 <logf+0x3e>
 8004594:	f7fd ff70 	bl	8002478 <__errno>
 8004598:	2322      	movs	r3, #34	@ 0x22
 800459a:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 80045bc <logf+0x54>
 800459e:	6003      	str	r3, [r0, #0]
 80045a0:	ecbd 8b02 	vpop	{d8}
 80045a4:	bd08      	pop	{r3, pc}
 80045a6:	f7fd ff67 	bl	8002478 <__errno>
 80045aa:	ecbd 8b02 	vpop	{d8}
 80045ae:	2321      	movs	r3, #33	@ 0x21
 80045b0:	6003      	str	r3, [r0, #0]
 80045b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80045b6:	4802      	ldr	r0, [pc, #8]	@ (80045c0 <logf+0x58>)
 80045b8:	f000 b804 	b.w	80045c4 <nanf>
 80045bc:	ff800000 	.word	0xff800000
 80045c0:	08004a76 	.word	0x08004a76

080045c4 <nanf>:
 80045c4:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80045cc <nanf+0x8>
 80045c8:	4770      	bx	lr
 80045ca:	bf00      	nop
 80045cc:	7fc00000 	.word	0x7fc00000

080045d0 <__ieee754_logf>:
 80045d0:	ee10 3a10 	vmov	r3, s0
 80045d4:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 80045d8:	d106      	bne.n	80045e8 <__ieee754_logf+0x18>
 80045da:	ed9f 7a66 	vldr	s14, [pc, #408]	@ 8004774 <__ieee754_logf+0x1a4>
 80045de:	eddf 7a66 	vldr	s15, [pc, #408]	@ 8004778 <__ieee754_logf+0x1a8>
 80045e2:	ee87 0a27 	vdiv.f32	s0, s14, s15
 80045e6:	4770      	bx	lr
 80045e8:	2b00      	cmp	r3, #0
 80045ea:	461a      	mov	r2, r3
 80045ec:	da02      	bge.n	80045f4 <__ieee754_logf+0x24>
 80045ee:	ee30 7a40 	vsub.f32	s14, s0, s0
 80045f2:	e7f4      	b.n	80045de <__ieee754_logf+0xe>
 80045f4:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 80045f8:	db02      	blt.n	8004600 <__ieee754_logf+0x30>
 80045fa:	ee30 0a00 	vadd.f32	s0, s0, s0
 80045fe:	4770      	bx	lr
 8004600:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8004604:	bfb8      	it	lt
 8004606:	eddf 7a5d 	vldrlt	s15, [pc, #372]	@ 800477c <__ieee754_logf+0x1ac>
 800460a:	485d      	ldr	r0, [pc, #372]	@ (8004780 <__ieee754_logf+0x1b0>)
 800460c:	bfbe      	ittt	lt
 800460e:	ee60 7a27 	vmullt.f32	s15, s0, s15
 8004612:	f06f 0118 	mvnlt.w	r1, #24
 8004616:	ee17 2a90 	vmovlt	r2, s15
 800461a:	ea4f 53e2 	mov.w	r3, r2, asr #23
 800461e:	f3c2 0216 	ubfx	r2, r2, #0, #23
 8004622:	4410      	add	r0, r2
 8004624:	bfa8      	it	ge
 8004626:	2100      	movge	r1, #0
 8004628:	3b7f      	subs	r3, #127	@ 0x7f
 800462a:	440b      	add	r3, r1
 800462c:	f400 0100 	and.w	r1, r0, #8388608	@ 0x800000
 8004630:	f081 517e 	eor.w	r1, r1, #1065353216	@ 0x3f800000
 8004634:	4311      	orrs	r1, r2
 8004636:	ee00 1a10 	vmov	s0, r1
 800463a:	4952      	ldr	r1, [pc, #328]	@ (8004784 <__ieee754_logf+0x1b4>)
 800463c:	eb03 53d0 	add.w	r3, r3, r0, lsr #23
 8004640:	f102 000f 	add.w	r0, r2, #15
 8004644:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8004648:	4001      	ands	r1, r0
 800464a:	ee30 0a67 	vsub.f32	s0, s0, s15
 800464e:	bb89      	cbnz	r1, 80046b4 <__ieee754_logf+0xe4>
 8004650:	eeb5 0a40 	vcmp.f32	s0, #0.0
 8004654:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004658:	d10f      	bne.n	800467a <__ieee754_logf+0xaa>
 800465a:	2b00      	cmp	r3, #0
 800465c:	f000 8087 	beq.w	800476e <__ieee754_logf+0x19e>
 8004660:	ee07 3a90 	vmov	s15, r3
 8004664:	ed9f 0a48 	vldr	s0, [pc, #288]	@ 8004788 <__ieee754_logf+0x1b8>
 8004668:	ed9f 7a48 	vldr	s14, [pc, #288]	@ 800478c <__ieee754_logf+0x1bc>
 800466c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004670:	ee27 0a80 	vmul.f32	s0, s15, s0
 8004674:	eea7 0a87 	vfma.f32	s0, s15, s14
 8004678:	4770      	bx	lr
 800467a:	eddf 6a45 	vldr	s13, [pc, #276]	@ 8004790 <__ieee754_logf+0x1c0>
 800467e:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 8004682:	eee0 7a66 	vfms.f32	s15, s0, s13
 8004686:	ee20 7a00 	vmul.f32	s14, s0, s0
 800468a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800468e:	b913      	cbnz	r3, 8004696 <__ieee754_logf+0xc6>
 8004690:	ee30 0a47 	vsub.f32	s0, s0, s14
 8004694:	4770      	bx	lr
 8004696:	ee07 3a90 	vmov	s15, r3
 800469a:	eddf 6a3b 	vldr	s13, [pc, #236]	@ 8004788 <__ieee754_logf+0x1b8>
 800469e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80046a2:	eea7 7ae6 	vfms.f32	s14, s15, s13
 80046a6:	ee37 0a40 	vsub.f32	s0, s14, s0
 80046aa:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 800478c <__ieee754_logf+0x1bc>
 80046ae:	ee97 0a87 	vfnms.f32	s0, s15, s14
 80046b2:	4770      	bx	lr
 80046b4:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 80046b8:	ee70 7a27 	vadd.f32	s15, s0, s15
 80046bc:	eddf 5a35 	vldr	s11, [pc, #212]	@ 8004794 <__ieee754_logf+0x1c4>
 80046c0:	eddf 4a35 	vldr	s9, [pc, #212]	@ 8004798 <__ieee754_logf+0x1c8>
 80046c4:	4935      	ldr	r1, [pc, #212]	@ (800479c <__ieee754_logf+0x1cc>)
 80046c6:	ee80 6a27 	vdiv.f32	s12, s0, s15
 80046ca:	4411      	add	r1, r2
 80046cc:	f5c2 1257 	rsb	r2, r2, #3522560	@ 0x35c000
 80046d0:	f502 7222 	add.w	r2, r2, #648	@ 0x288
 80046d4:	430a      	orrs	r2, r1
 80046d6:	2a00      	cmp	r2, #0
 80046d8:	ee07 3a90 	vmov	s15, r3
 80046dc:	ee26 5a06 	vmul.f32	s10, s12, s12
 80046e0:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80046e4:	ee25 7a05 	vmul.f32	s14, s10, s10
 80046e8:	eddf 7a2d 	vldr	s15, [pc, #180]	@ 80047a0 <__ieee754_logf+0x1d0>
 80046ec:	eee7 7a25 	vfma.f32	s15, s14, s11
 80046f0:	eddf 5a2c 	vldr	s11, [pc, #176]	@ 80047a4 <__ieee754_logf+0x1d4>
 80046f4:	eee7 5a87 	vfma.f32	s11, s15, s14
 80046f8:	eddf 7a2b 	vldr	s15, [pc, #172]	@ 80047a8 <__ieee754_logf+0x1d8>
 80046fc:	eee7 7a24 	vfma.f32	s15, s14, s9
 8004700:	eddf 4a2a 	vldr	s9, [pc, #168]	@ 80047ac <__ieee754_logf+0x1dc>
 8004704:	eee7 4a87 	vfma.f32	s9, s15, s14
 8004708:	eddf 7a29 	vldr	s15, [pc, #164]	@ 80047b0 <__ieee754_logf+0x1e0>
 800470c:	eee4 7a87 	vfma.f32	s15, s9, s14
 8004710:	ee67 7a85 	vmul.f32	s15, s15, s10
 8004714:	eee5 7a87 	vfma.f32	s15, s11, s14
 8004718:	dd1a      	ble.n	8004750 <__ieee754_logf+0x180>
 800471a:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 800471e:	ee20 7a07 	vmul.f32	s14, s0, s14
 8004722:	ee27 7a00 	vmul.f32	s14, s14, s0
 8004726:	ee77 7a87 	vadd.f32	s15, s15, s14
 800472a:	ee67 7a86 	vmul.f32	s15, s15, s12
 800472e:	b913      	cbnz	r3, 8004736 <__ieee754_logf+0x166>
 8004730:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004734:	e7ac      	b.n	8004690 <__ieee754_logf+0xc0>
 8004736:	ed9f 6a14 	vldr	s12, [pc, #80]	@ 8004788 <__ieee754_logf+0x1b8>
 800473a:	eee6 7a86 	vfma.f32	s15, s13, s12
 800473e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8004742:	ee37 0a40 	vsub.f32	s0, s14, s0
 8004746:	eddf 7a11 	vldr	s15, [pc, #68]	@ 800478c <__ieee754_logf+0x1bc>
 800474a:	ee96 0aa7 	vfnms.f32	s0, s13, s15
 800474e:	4770      	bx	lr
 8004750:	ee70 7a67 	vsub.f32	s15, s0, s15
 8004754:	ee67 7a86 	vmul.f32	s15, s15, s12
 8004758:	b913      	cbnz	r3, 8004760 <__ieee754_logf+0x190>
 800475a:	ee30 0a67 	vsub.f32	s0, s0, s15
 800475e:	4770      	bx	lr
 8004760:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 8004788 <__ieee754_logf+0x1b8>
 8004764:	eee6 7ac7 	vfms.f32	s15, s13, s14
 8004768:	ee37 0ac0 	vsub.f32	s0, s15, s0
 800476c:	e7eb      	b.n	8004746 <__ieee754_logf+0x176>
 800476e:	ed9f 0a02 	vldr	s0, [pc, #8]	@ 8004778 <__ieee754_logf+0x1a8>
 8004772:	4770      	bx	lr
 8004774:	cc000000 	.word	0xcc000000
 8004778:	00000000 	.word	0x00000000
 800477c:	4c000000 	.word	0x4c000000
 8004780:	004afb20 	.word	0x004afb20
 8004784:	007ffff0 	.word	0x007ffff0
 8004788:	3717f7d1 	.word	0x3717f7d1
 800478c:	3f317180 	.word	0x3f317180
 8004790:	3eaaaaab 	.word	0x3eaaaaab
 8004794:	3e1cd04f 	.word	0x3e1cd04f
 8004798:	3e178897 	.word	0x3e178897
 800479c:	ffcf5c30 	.word	0xffcf5c30
 80047a0:	3e638e29 	.word	0x3e638e29
 80047a4:	3ecccccd 	.word	0x3ecccccd
 80047a8:	3e3a3325 	.word	0x3e3a3325
 80047ac:	3e924925 	.word	0x3e924925
 80047b0:	3f2aaaab 	.word	0x3f2aaaab

080047b4 <_init>:
 80047b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80047b6:	bf00      	nop
 80047b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80047ba:	bc08      	pop	{r3}
 80047bc:	469e      	mov	lr, r3
 80047be:	4770      	bx	lr

080047c0 <_fini>:
 80047c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80047c2:	bf00      	nop
 80047c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80047c6:	bc08      	pop	{r3}
 80047c8:	469e      	mov	lr, r3
 80047ca:	4770      	bx	lr
