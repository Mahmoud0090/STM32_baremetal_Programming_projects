
Weather Station with LCD Display_and_RTC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004514  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003a0  080046e8  080046e8  000056e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004a88  08004a88  000061c8  2**0
                  CONTENTS
  4 .ARM          00000008  08004a88  08004a88  00005a88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004a90  08004a90  000061c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004a90  08004a90  00005a90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004a94  08004a94  00005a94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001c8  20000000  08004a98  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001c0  200001c8  08004c60  000061c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000388  08004c60  00006388  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000061c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001f2f  00000000  00000000  000061f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000a9a  00000000  00000000  00008127  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002b8  00000000  00000000  00008bc8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001dd  00000000  00000000  00008e80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001ae20  00000000  00000000  0000905d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003810  00000000  00000000  00023e7d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000917e9  00000000  00000000  0002768d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000b8e76  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001a80  00000000  00000000  000b8ebc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000064  00000000  00000000  000ba93c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001c8 	.word	0x200001c8
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080046cc 	.word	0x080046cc

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001cc 	.word	0x200001cc
 800020c:	080046cc 	.word	0x080046cc

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <adc_init>:
#include "stm32f4xx.h"
#include "adc.h"

void adc_init(void)
{
 8000c88:	b480      	push	{r7}
 8000c8a:	af00      	add	r7, sp, #0
    // Enable clocks for GPIOA and ADC1
    RCC->AHB1ENR |= (1U << 0);   // GPIOA
 8000c8c:	4b1a      	ldr	r3, [pc, #104]	@ (8000cf8 <adc_init+0x70>)
 8000c8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c90:	4a19      	ldr	r2, [pc, #100]	@ (8000cf8 <adc_init+0x70>)
 8000c92:	f043 0301 	orr.w	r3, r3, #1
 8000c96:	6313      	str	r3, [r2, #48]	@ 0x30
    RCC->APB2ENR |= (1U << 8);   // ADC1
 8000c98:	4b17      	ldr	r3, [pc, #92]	@ (8000cf8 <adc_init+0x70>)
 8000c9a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8000c9c:	4a16      	ldr	r2, [pc, #88]	@ (8000cf8 <adc_init+0x70>)
 8000c9e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8000ca2:	6453      	str	r3, [r2, #68]	@ 0x44

    // Configure PA1 as analog (assume thermistor connected to PA1)
    GPIOA->MODER |= (3U << (2 * 1)); // Analog mode
 8000ca4:	4b15      	ldr	r3, [pc, #84]	@ (8000cfc <adc_init+0x74>)
 8000ca6:	681b      	ldr	r3, [r3, #0]
 8000ca8:	4a14      	ldr	r2, [pc, #80]	@ (8000cfc <adc_init+0x74>)
 8000caa:	f043 030c 	orr.w	r3, r3, #12
 8000cae:	6013      	str	r3, [r2, #0]

    // ADC Common config (prescaler /4)
    ADC->CCR &= ~(3U << 16);
 8000cb0:	4b13      	ldr	r3, [pc, #76]	@ (8000d00 <adc_init+0x78>)
 8000cb2:	685b      	ldr	r3, [r3, #4]
 8000cb4:	4a12      	ldr	r2, [pc, #72]	@ (8000d00 <adc_init+0x78>)
 8000cb6:	f423 3340 	bic.w	r3, r3, #196608	@ 0x30000
 8000cba:	6053      	str	r3, [r2, #4]
    ADC->CCR |=  (1U << 16);    // PCLK2 / 4
 8000cbc:	4b10      	ldr	r3, [pc, #64]	@ (8000d00 <adc_init+0x78>)
 8000cbe:	685b      	ldr	r3, [r3, #4]
 8000cc0:	4a0f      	ldr	r2, [pc, #60]	@ (8000d00 <adc_init+0x78>)
 8000cc2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000cc6:	6053      	str	r3, [r2, #4]

    // ADC1 Config
    ADC1->CR2 = 0;               // Clear CR2
 8000cc8:	4b0e      	ldr	r3, [pc, #56]	@ (8000d04 <adc_init+0x7c>)
 8000cca:	2200      	movs	r2, #0
 8000ccc:	609a      	str	r2, [r3, #8]
    ADC1->SQR3 = 1;              // First conversion on channel 1 (PA1)
 8000cce:	4b0d      	ldr	r3, [pc, #52]	@ (8000d04 <adc_init+0x7c>)
 8000cd0:	2201      	movs	r2, #1
 8000cd2:	635a      	str	r2, [r3, #52]	@ 0x34
    ADC1->SMPR2 |= (3U << 3);    // Sampling time for channel 1 = 56 cycles
 8000cd4:	4b0b      	ldr	r3, [pc, #44]	@ (8000d04 <adc_init+0x7c>)
 8000cd6:	691b      	ldr	r3, [r3, #16]
 8000cd8:	4a0a      	ldr	r2, [pc, #40]	@ (8000d04 <adc_init+0x7c>)
 8000cda:	f043 0318 	orr.w	r3, r3, #24
 8000cde:	6113      	str	r3, [r2, #16]
    ADC1->CR2 |= (1U << 0);      // Enable ADC1
 8000ce0:	4b08      	ldr	r3, [pc, #32]	@ (8000d04 <adc_init+0x7c>)
 8000ce2:	689b      	ldr	r3, [r3, #8]
 8000ce4:	4a07      	ldr	r2, [pc, #28]	@ (8000d04 <adc_init+0x7c>)
 8000ce6:	f043 0301 	orr.w	r3, r3, #1
 8000cea:	6093      	str	r3, [r2, #8]
}
 8000cec:	bf00      	nop
 8000cee:	46bd      	mov	sp, r7
 8000cf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cf4:	4770      	bx	lr
 8000cf6:	bf00      	nop
 8000cf8:	40023800 	.word	0x40023800
 8000cfc:	40020000 	.word	0x40020000
 8000d00:	40012300 	.word	0x40012300
 8000d04:	40012000 	.word	0x40012000

08000d08 <adc_read>:

uint16_t adc_read(uint8_t channel)
{
 8000d08:	b480      	push	{r7}
 8000d0a:	b083      	sub	sp, #12
 8000d0c:	af00      	add	r7, sp, #0
 8000d0e:	4603      	mov	r3, r0
 8000d10:	71fb      	strb	r3, [r7, #7]
    // Select ADC channel
    ADC1->SQR3 = channel;
 8000d12:	4a0c      	ldr	r2, [pc, #48]	@ (8000d44 <adc_read+0x3c>)
 8000d14:	79fb      	ldrb	r3, [r7, #7]
 8000d16:	6353      	str	r3, [r2, #52]	@ 0x34

    // Start conversion
    ADC1->CR2 |= (1U << 30);
 8000d18:	4b0a      	ldr	r3, [pc, #40]	@ (8000d44 <adc_read+0x3c>)
 8000d1a:	689b      	ldr	r3, [r3, #8]
 8000d1c:	4a09      	ldr	r2, [pc, #36]	@ (8000d44 <adc_read+0x3c>)
 8000d1e:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8000d22:	6093      	str	r3, [r2, #8]

    // Wait until EOC (End Of Conversion)
    while (!(ADC1->SR & (1U << 1)));
 8000d24:	bf00      	nop
 8000d26:	4b07      	ldr	r3, [pc, #28]	@ (8000d44 <adc_read+0x3c>)
 8000d28:	681b      	ldr	r3, [r3, #0]
 8000d2a:	f003 0302 	and.w	r3, r3, #2
 8000d2e:	2b00      	cmp	r3, #0
 8000d30:	d0f9      	beq.n	8000d26 <adc_read+0x1e>

    // Return converted value
    return ADC1->DR;
 8000d32:	4b04      	ldr	r3, [pc, #16]	@ (8000d44 <adc_read+0x3c>)
 8000d34:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000d36:	b29b      	uxth	r3, r3
}
 8000d38:	4618      	mov	r0, r3
 8000d3a:	370c      	adds	r7, #12
 8000d3c:	46bd      	mov	sp, r7
 8000d3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d42:	4770      	bx	lr
 8000d44:	40012000 	.word	0x40012000

08000d48 <delay_init>:
#include "delay.h"

// Assumes system clock = 16 MHz
#define SYSCLK_HZ 16000000U

void delay_init(void) {
 8000d48:	b480      	push	{r7}
 8000d4a:	af00      	add	r7, sp, #0
    // SysTick configuration for 1us tick
    SysTick->LOAD = (SYSCLK_HZ / 1000000U) - 1;  // 1us reload
 8000d4c:	4b06      	ldr	r3, [pc, #24]	@ (8000d68 <delay_init+0x20>)
 8000d4e:	220f      	movs	r2, #15
 8000d50:	605a      	str	r2, [r3, #4]
    SysTick->VAL = 0;                            // Clear current value
 8000d52:	4b05      	ldr	r3, [pc, #20]	@ (8000d68 <delay_init+0x20>)
 8000d54:	2200      	movs	r2, #0
 8000d56:	609a      	str	r2, [r3, #8]
    SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk;
 8000d58:	4b03      	ldr	r3, [pc, #12]	@ (8000d68 <delay_init+0x20>)
 8000d5a:	2205      	movs	r2, #5
 8000d5c:	601a      	str	r2, [r3, #0]
}
 8000d5e:	bf00      	nop
 8000d60:	46bd      	mov	sp, r7
 8000d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d66:	4770      	bx	lr
 8000d68:	e000e010 	.word	0xe000e010

08000d6c <delay_us>:

void delay_us(uint32_t us) {
 8000d6c:	b480      	push	{r7}
 8000d6e:	b083      	sub	sp, #12
 8000d70:	af00      	add	r7, sp, #0
 8000d72:	6078      	str	r0, [r7, #4]
    while (us--) {
 8000d74:	e006      	b.n	8000d84 <delay_us+0x18>
        // Wait for COUNTFLAG to set (indicates 1us passed)
        while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk));
 8000d76:	bf00      	nop
 8000d78:	4b08      	ldr	r3, [pc, #32]	@ (8000d9c <delay_us+0x30>)
 8000d7a:	681b      	ldr	r3, [r3, #0]
 8000d7c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8000d80:	2b00      	cmp	r3, #0
 8000d82:	d0f9      	beq.n	8000d78 <delay_us+0xc>
    while (us--) {
 8000d84:	687b      	ldr	r3, [r7, #4]
 8000d86:	1e5a      	subs	r2, r3, #1
 8000d88:	607a      	str	r2, [r7, #4]
 8000d8a:	2b00      	cmp	r3, #0
 8000d8c:	d1f3      	bne.n	8000d76 <delay_us+0xa>
    }
}
 8000d8e:	bf00      	nop
 8000d90:	bf00      	nop
 8000d92:	370c      	adds	r7, #12
 8000d94:	46bd      	mov	sp, r7
 8000d96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d9a:	4770      	bx	lr
 8000d9c:	e000e010 	.word	0xe000e010

08000da0 <delay_ms>:

void delay_ms(uint32_t ms) {
 8000da0:	b580      	push	{r7, lr}
 8000da2:	b082      	sub	sp, #8
 8000da4:	af00      	add	r7, sp, #0
 8000da6:	6078      	str	r0, [r7, #4]
    while (ms--) {
 8000da8:	e003      	b.n	8000db2 <delay_ms+0x12>
        delay_us(1000);
 8000daa:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000dae:	f7ff ffdd 	bl	8000d6c <delay_us>
    while (ms--) {
 8000db2:	687b      	ldr	r3, [r7, #4]
 8000db4:	1e5a      	subs	r2, r3, #1
 8000db6:	607a      	str	r2, [r7, #4]
 8000db8:	2b00      	cmp	r3, #0
 8000dba:	d1f6      	bne.n	8000daa <delay_ms+0xa>
    }
}
 8000dbc:	bf00      	nop
 8000dbe:	bf00      	nop
 8000dc0:	3708      	adds	r7, #8
 8000dc2:	46bd      	mov	sp, r7
 8000dc4:	bd80      	pop	{r7, pc}

08000dc6 <i2c_delay>:

#define I2C_GPIO GPIOB
#define SDA_PIN 7
#define SCL_PIN 6

static void i2c_delay(void) {
 8000dc6:	b580      	push	{r7, lr}
 8000dc8:	af00      	add	r7, sp, #0
    delay_us(5); // ~100 kHz I2C
 8000dca:	2005      	movs	r0, #5
 8000dcc:	f7ff ffce 	bl	8000d6c <delay_us>
}
 8000dd0:	bf00      	nop
 8000dd2:	bd80      	pop	{r7, pc}

08000dd4 <sda_output>:

static void sda_output(void) {
 8000dd4:	b480      	push	{r7}
 8000dd6:	af00      	add	r7, sp, #0
    I2C_GPIO->MODER &= ~(3U << (2 * SDA_PIN));
 8000dd8:	4b08      	ldr	r3, [pc, #32]	@ (8000dfc <sda_output+0x28>)
 8000dda:	681b      	ldr	r3, [r3, #0]
 8000ddc:	4a07      	ldr	r2, [pc, #28]	@ (8000dfc <sda_output+0x28>)
 8000dde:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000de2:	6013      	str	r3, [r2, #0]
    I2C_GPIO->MODER |=  (1U << (2 * SDA_PIN)); // Output
 8000de4:	4b05      	ldr	r3, [pc, #20]	@ (8000dfc <sda_output+0x28>)
 8000de6:	681b      	ldr	r3, [r3, #0]
 8000de8:	4a04      	ldr	r2, [pc, #16]	@ (8000dfc <sda_output+0x28>)
 8000dea:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000dee:	6013      	str	r3, [r2, #0]
}
 8000df0:	bf00      	nop
 8000df2:	46bd      	mov	sp, r7
 8000df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000df8:	4770      	bx	lr
 8000dfa:	bf00      	nop
 8000dfc:	40020400 	.word	0x40020400

08000e00 <sda_input>:

static void sda_input(void) {
 8000e00:	b480      	push	{r7}
 8000e02:	af00      	add	r7, sp, #0
    I2C_GPIO->MODER &= ~(3U << (2 * SDA_PIN)); // Input
 8000e04:	4b05      	ldr	r3, [pc, #20]	@ (8000e1c <sda_input+0x1c>)
 8000e06:	681b      	ldr	r3, [r3, #0]
 8000e08:	4a04      	ldr	r2, [pc, #16]	@ (8000e1c <sda_input+0x1c>)
 8000e0a:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000e0e:	6013      	str	r3, [r2, #0]
}
 8000e10:	bf00      	nop
 8000e12:	46bd      	mov	sp, r7
 8000e14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e18:	4770      	bx	lr
 8000e1a:	bf00      	nop
 8000e1c:	40020400 	.word	0x40020400

08000e20 <scl_high>:

static void scl_high(void) {
 8000e20:	b480      	push	{r7}
 8000e22:	af00      	add	r7, sp, #0
    I2C_GPIO->BSRR = (1U << SCL_PIN);
 8000e24:	4b03      	ldr	r3, [pc, #12]	@ (8000e34 <scl_high+0x14>)
 8000e26:	2240      	movs	r2, #64	@ 0x40
 8000e28:	619a      	str	r2, [r3, #24]
}
 8000e2a:	bf00      	nop
 8000e2c:	46bd      	mov	sp, r7
 8000e2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e32:	4770      	bx	lr
 8000e34:	40020400 	.word	0x40020400

08000e38 <scl_low>:

static void scl_low(void) {
 8000e38:	b480      	push	{r7}
 8000e3a:	af00      	add	r7, sp, #0
    I2C_GPIO->BSRR = (1U << (SCL_PIN + 16));
 8000e3c:	4b04      	ldr	r3, [pc, #16]	@ (8000e50 <scl_low+0x18>)
 8000e3e:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8000e42:	619a      	str	r2, [r3, #24]
}
 8000e44:	bf00      	nop
 8000e46:	46bd      	mov	sp, r7
 8000e48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e4c:	4770      	bx	lr
 8000e4e:	bf00      	nop
 8000e50:	40020400 	.word	0x40020400

08000e54 <sda_high>:

static void sda_high(void) {
 8000e54:	b480      	push	{r7}
 8000e56:	af00      	add	r7, sp, #0
    I2C_GPIO->BSRR = (1U << SDA_PIN);
 8000e58:	4b03      	ldr	r3, [pc, #12]	@ (8000e68 <sda_high+0x14>)
 8000e5a:	2280      	movs	r2, #128	@ 0x80
 8000e5c:	619a      	str	r2, [r3, #24]
}
 8000e5e:	bf00      	nop
 8000e60:	46bd      	mov	sp, r7
 8000e62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e66:	4770      	bx	lr
 8000e68:	40020400 	.word	0x40020400

08000e6c <sda_low>:

static void sda_low(void) {
 8000e6c:	b480      	push	{r7}
 8000e6e:	af00      	add	r7, sp, #0
    I2C_GPIO->BSRR = (1U << (SDA_PIN + 16));
 8000e70:	4b04      	ldr	r3, [pc, #16]	@ (8000e84 <sda_low+0x18>)
 8000e72:	f44f 0200 	mov.w	r2, #8388608	@ 0x800000
 8000e76:	619a      	str	r2, [r3, #24]
}
 8000e78:	bf00      	nop
 8000e7a:	46bd      	mov	sp, r7
 8000e7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e80:	4770      	bx	lr
 8000e82:	bf00      	nop
 8000e84:	40020400 	.word	0x40020400

08000e88 <i2c_init>:

void i2c_init(void) {
 8000e88:	b580      	push	{r7, lr}
 8000e8a:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= RCC_AHB1ENR_GPIOBEN;
 8000e8c:	4b14      	ldr	r3, [pc, #80]	@ (8000ee0 <i2c_init+0x58>)
 8000e8e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000e90:	4a13      	ldr	r2, [pc, #76]	@ (8000ee0 <i2c_init+0x58>)
 8000e92:	f043 0302 	orr.w	r3, r3, #2
 8000e96:	6313      	str	r3, [r2, #48]	@ 0x30

    I2C_GPIO->MODER &= ~((3U << (2 * SDA_PIN)) | (3U << (2 * SCL_PIN)));
 8000e98:	4b12      	ldr	r3, [pc, #72]	@ (8000ee4 <i2c_init+0x5c>)
 8000e9a:	681b      	ldr	r3, [r3, #0]
 8000e9c:	4a11      	ldr	r2, [pc, #68]	@ (8000ee4 <i2c_init+0x5c>)
 8000e9e:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8000ea2:	6013      	str	r3, [r2, #0]
    I2C_GPIO->MODER |=  ((1U << (2 * SDA_PIN)) | (1U << (2 * SCL_PIN))); // Output
 8000ea4:	4b0f      	ldr	r3, [pc, #60]	@ (8000ee4 <i2c_init+0x5c>)
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	4a0e      	ldr	r2, [pc, #56]	@ (8000ee4 <i2c_init+0x5c>)
 8000eaa:	f443 43a0 	orr.w	r3, r3, #20480	@ 0x5000
 8000eae:	6013      	str	r3, [r2, #0]

    I2C_GPIO->OTYPER |= (1U << SDA_PIN) | (1U << SCL_PIN);  // Open-drain
 8000eb0:	4b0c      	ldr	r3, [pc, #48]	@ (8000ee4 <i2c_init+0x5c>)
 8000eb2:	685b      	ldr	r3, [r3, #4]
 8000eb4:	4a0b      	ldr	r2, [pc, #44]	@ (8000ee4 <i2c_init+0x5c>)
 8000eb6:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
 8000eba:	6053      	str	r3, [r2, #4]
    I2C_GPIO->PUPDR &= ~((3U << (2 * SDA_PIN)) | (3U << (2 * SCL_PIN))); // No pull
 8000ebc:	4b09      	ldr	r3, [pc, #36]	@ (8000ee4 <i2c_init+0x5c>)
 8000ebe:	68db      	ldr	r3, [r3, #12]
 8000ec0:	4a08      	ldr	r2, [pc, #32]	@ (8000ee4 <i2c_init+0x5c>)
 8000ec2:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8000ec6:	60d3      	str	r3, [r2, #12]
    I2C_GPIO->PUPDR |=  ((1U << (2 * SDA_PIN)) | (1U << (2 * SCL_PIN))); // Pull-up
 8000ec8:	4b06      	ldr	r3, [pc, #24]	@ (8000ee4 <i2c_init+0x5c>)
 8000eca:	68db      	ldr	r3, [r3, #12]
 8000ecc:	4a05      	ldr	r2, [pc, #20]	@ (8000ee4 <i2c_init+0x5c>)
 8000ece:	f443 43a0 	orr.w	r3, r3, #20480	@ 0x5000
 8000ed2:	60d3      	str	r3, [r2, #12]

    sda_high();
 8000ed4:	f7ff ffbe 	bl	8000e54 <sda_high>
    scl_high();
 8000ed8:	f7ff ffa2 	bl	8000e20 <scl_high>
}
 8000edc:	bf00      	nop
 8000ede:	bd80      	pop	{r7, pc}
 8000ee0:	40023800 	.word	0x40023800
 8000ee4:	40020400 	.word	0x40020400

08000ee8 <i2c_start>:

void i2c_start(void) {
 8000ee8:	b580      	push	{r7, lr}
 8000eea:	af00      	add	r7, sp, #0
    sda_high(); scl_high(); i2c_delay();
 8000eec:	f7ff ffb2 	bl	8000e54 <sda_high>
 8000ef0:	f7ff ff96 	bl	8000e20 <scl_high>
 8000ef4:	f7ff ff67 	bl	8000dc6 <i2c_delay>
    sda_low();  i2c_delay();
 8000ef8:	f7ff ffb8 	bl	8000e6c <sda_low>
 8000efc:	f7ff ff63 	bl	8000dc6 <i2c_delay>
    scl_low();  i2c_delay();
 8000f00:	f7ff ff9a 	bl	8000e38 <scl_low>
 8000f04:	f7ff ff5f 	bl	8000dc6 <i2c_delay>
}
 8000f08:	bf00      	nop
 8000f0a:	bd80      	pop	{r7, pc}

08000f0c <i2c_stop>:

void i2c_stop(void) {
 8000f0c:	b580      	push	{r7, lr}
 8000f0e:	af00      	add	r7, sp, #0
    scl_low();  sda_low(); i2c_delay();
 8000f10:	f7ff ff92 	bl	8000e38 <scl_low>
 8000f14:	f7ff ffaa 	bl	8000e6c <sda_low>
 8000f18:	f7ff ff55 	bl	8000dc6 <i2c_delay>
    scl_high(); i2c_delay();
 8000f1c:	f7ff ff80 	bl	8000e20 <scl_high>
 8000f20:	f7ff ff51 	bl	8000dc6 <i2c_delay>
    sda_high(); i2c_delay();
 8000f24:	f7ff ff96 	bl	8000e54 <sda_high>
 8000f28:	f7ff ff4d 	bl	8000dc6 <i2c_delay>
}
 8000f2c:	bf00      	nop
 8000f2e:	bd80      	pop	{r7, pc}

08000f30 <i2c_write>:

uint8_t i2c_write(uint8_t data) {
 8000f30:	b580      	push	{r7, lr}
 8000f32:	b084      	sub	sp, #16
 8000f34:	af00      	add	r7, sp, #0
 8000f36:	4603      	mov	r3, r0
 8000f38:	71fb      	strb	r3, [r7, #7]
    for (int i = 0; i < 8; i++) {
 8000f3a:	2300      	movs	r3, #0
 8000f3c:	60fb      	str	r3, [r7, #12]
 8000f3e:	e016      	b.n	8000f6e <i2c_write+0x3e>
        if (data & 0x80) sda_high(); else sda_low();
 8000f40:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000f44:	2b00      	cmp	r3, #0
 8000f46:	da02      	bge.n	8000f4e <i2c_write+0x1e>
 8000f48:	f7ff ff84 	bl	8000e54 <sda_high>
 8000f4c:	e001      	b.n	8000f52 <i2c_write+0x22>
 8000f4e:	f7ff ff8d 	bl	8000e6c <sda_low>
        scl_high(); i2c_delay();
 8000f52:	f7ff ff65 	bl	8000e20 <scl_high>
 8000f56:	f7ff ff36 	bl	8000dc6 <i2c_delay>
        scl_low();  i2c_delay();
 8000f5a:	f7ff ff6d 	bl	8000e38 <scl_low>
 8000f5e:	f7ff ff32 	bl	8000dc6 <i2c_delay>
        data <<= 1;
 8000f62:	79fb      	ldrb	r3, [r7, #7]
 8000f64:	005b      	lsls	r3, r3, #1
 8000f66:	71fb      	strb	r3, [r7, #7]
    for (int i = 0; i < 8; i++) {
 8000f68:	68fb      	ldr	r3, [r7, #12]
 8000f6a:	3301      	adds	r3, #1
 8000f6c:	60fb      	str	r3, [r7, #12]
 8000f6e:	68fb      	ldr	r3, [r7, #12]
 8000f70:	2b07      	cmp	r3, #7
 8000f72:	dde5      	ble.n	8000f40 <i2c_write+0x10>
    }

    // ACK bit
    sda_input(); scl_high(); i2c_delay();
 8000f74:	f7ff ff44 	bl	8000e00 <sda_input>
 8000f78:	f7ff ff52 	bl	8000e20 <scl_high>
 8000f7c:	f7ff ff23 	bl	8000dc6 <i2c_delay>
    uint8_t ack = !(I2C_GPIO->IDR & (1U << SDA_PIN));
 8000f80:	4b0a      	ldr	r3, [pc, #40]	@ (8000fac <i2c_write+0x7c>)
 8000f82:	691b      	ldr	r3, [r3, #16]
 8000f84:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000f88:	2b00      	cmp	r3, #0
 8000f8a:	bf0c      	ite	eq
 8000f8c:	2301      	moveq	r3, #1
 8000f8e:	2300      	movne	r3, #0
 8000f90:	b2db      	uxtb	r3, r3
 8000f92:	72fb      	strb	r3, [r7, #11]
    scl_low(); sda_output(); i2c_delay();
 8000f94:	f7ff ff50 	bl	8000e38 <scl_low>
 8000f98:	f7ff ff1c 	bl	8000dd4 <sda_output>
 8000f9c:	f7ff ff13 	bl	8000dc6 <i2c_delay>
    return ack;
 8000fa0:	7afb      	ldrb	r3, [r7, #11]
}
 8000fa2:	4618      	mov	r0, r3
 8000fa4:	3710      	adds	r7, #16
 8000fa6:	46bd      	mov	sp, r7
 8000fa8:	bd80      	pop	{r7, pc}
 8000faa:	bf00      	nop
 8000fac:	40020400 	.word	0x40020400

08000fb0 <i2c_restart>:

void i2c_restart(void) {
 8000fb0:	b580      	push	{r7, lr}
 8000fb2:	af00      	add	r7, sp, #0
    sda_high(); scl_high(); i2c_delay();  // Release lines
 8000fb4:	f7ff ff4e 	bl	8000e54 <sda_high>
 8000fb8:	f7ff ff32 	bl	8000e20 <scl_high>
 8000fbc:	f7ff ff03 	bl	8000dc6 <i2c_delay>
    sda_low();  i2c_delay();              // Start condition again
 8000fc0:	f7ff ff54 	bl	8000e6c <sda_low>
 8000fc4:	f7ff feff 	bl	8000dc6 <i2c_delay>
    scl_low();  i2c_delay();
 8000fc8:	f7ff ff36 	bl	8000e38 <scl_low>
 8000fcc:	f7ff fefb 	bl	8000dc6 <i2c_delay>
}
 8000fd0:	bf00      	nop
 8000fd2:	bd80      	pop	{r7, pc}

08000fd4 <i2c_read_ack>:

uint8_t i2c_read_ack(void) {
 8000fd4:	b580      	push	{r7, lr}
 8000fd6:	b082      	sub	sp, #8
 8000fd8:	af00      	add	r7, sp, #0
    uint8_t data = 0;
 8000fda:	2300      	movs	r3, #0
 8000fdc:	71fb      	strb	r3, [r7, #7]
    // Read one byte and ACK
    for (int i = 0; i < 8; i++) {
 8000fde:	2300      	movs	r3, #0
 8000fe0:	603b      	str	r3, [r7, #0]
 8000fe2:	e018      	b.n	8001016 <i2c_read_ack+0x42>
        scl_high(); delay_us(2);
 8000fe4:	f7ff ff1c 	bl	8000e20 <scl_high>
 8000fe8:	2002      	movs	r0, #2
 8000fea:	f7ff febf 	bl	8000d6c <delay_us>
        data = (data << 1) | ((GPIOB->IDR >> 7) & 0x01); // SDA on PB7
 8000fee:	79fb      	ldrb	r3, [r7, #7]
 8000ff0:	005b      	lsls	r3, r3, #1
 8000ff2:	b2da      	uxtb	r2, r3
 8000ff4:	4b14      	ldr	r3, [pc, #80]	@ (8001048 <i2c_read_ack+0x74>)
 8000ff6:	691b      	ldr	r3, [r3, #16]
 8000ff8:	09db      	lsrs	r3, r3, #7
 8000ffa:	b2db      	uxtb	r3, r3
 8000ffc:	f003 0301 	and.w	r3, r3, #1
 8001000:	b2db      	uxtb	r3, r3
 8001002:	4313      	orrs	r3, r2
 8001004:	71fb      	strb	r3, [r7, #7]
        scl_low(); delay_us(2);
 8001006:	f7ff ff17 	bl	8000e38 <scl_low>
 800100a:	2002      	movs	r0, #2
 800100c:	f7ff feae 	bl	8000d6c <delay_us>
    for (int i = 0; i < 8; i++) {
 8001010:	683b      	ldr	r3, [r7, #0]
 8001012:	3301      	adds	r3, #1
 8001014:	603b      	str	r3, [r7, #0]
 8001016:	683b      	ldr	r3, [r7, #0]
 8001018:	2b07      	cmp	r3, #7
 800101a:	dde3      	ble.n	8000fe4 <i2c_read_ack+0x10>
    }
    // Send ACK
    sda_output(); sda_low();
 800101c:	f7ff feda 	bl	8000dd4 <sda_output>
 8001020:	f7ff ff24 	bl	8000e6c <sda_low>
    scl_high(); delay_us(2);
 8001024:	f7ff fefc 	bl	8000e20 <scl_high>
 8001028:	2002      	movs	r0, #2
 800102a:	f7ff fe9f 	bl	8000d6c <delay_us>
    scl_low(); delay_us(2);
 800102e:	f7ff ff03 	bl	8000e38 <scl_low>
 8001032:	2002      	movs	r0, #2
 8001034:	f7ff fe9a 	bl	8000d6c <delay_us>
    sda_high();  // Release
 8001038:	f7ff ff0c 	bl	8000e54 <sda_high>
    return data;
 800103c:	79fb      	ldrb	r3, [r7, #7]
}
 800103e:	4618      	mov	r0, r3
 8001040:	3708      	adds	r7, #8
 8001042:	46bd      	mov	sp, r7
 8001044:	bd80      	pop	{r7, pc}
 8001046:	bf00      	nop
 8001048:	40020400 	.word	0x40020400

0800104c <i2c_read_nack>:

uint8_t i2c_read_nack(void) {
 800104c:	b580      	push	{r7, lr}
 800104e:	b082      	sub	sp, #8
 8001050:	af00      	add	r7, sp, #0
    uint8_t data = 0;
 8001052:	2300      	movs	r3, #0
 8001054:	71fb      	strb	r3, [r7, #7]
    // Read one byte and NACK
    for (int i = 0; i < 8; i++) {
 8001056:	2300      	movs	r3, #0
 8001058:	603b      	str	r3, [r7, #0]
 800105a:	e018      	b.n	800108e <i2c_read_nack+0x42>
        scl_high(); delay_us(2);
 800105c:	f7ff fee0 	bl	8000e20 <scl_high>
 8001060:	2002      	movs	r0, #2
 8001062:	f7ff fe83 	bl	8000d6c <delay_us>
        data = (data << 1) | ((GPIOB->IDR >> 7) & 0x01);
 8001066:	79fb      	ldrb	r3, [r7, #7]
 8001068:	005b      	lsls	r3, r3, #1
 800106a:	b2da      	uxtb	r2, r3
 800106c:	4b13      	ldr	r3, [pc, #76]	@ (80010bc <i2c_read_nack+0x70>)
 800106e:	691b      	ldr	r3, [r3, #16]
 8001070:	09db      	lsrs	r3, r3, #7
 8001072:	b2db      	uxtb	r3, r3
 8001074:	f003 0301 	and.w	r3, r3, #1
 8001078:	b2db      	uxtb	r3, r3
 800107a:	4313      	orrs	r3, r2
 800107c:	71fb      	strb	r3, [r7, #7]
        scl_low(); delay_us(2);
 800107e:	f7ff fedb 	bl	8000e38 <scl_low>
 8001082:	2002      	movs	r0, #2
 8001084:	f7ff fe72 	bl	8000d6c <delay_us>
    for (int i = 0; i < 8; i++) {
 8001088:	683b      	ldr	r3, [r7, #0]
 800108a:	3301      	adds	r3, #1
 800108c:	603b      	str	r3, [r7, #0]
 800108e:	683b      	ldr	r3, [r7, #0]
 8001090:	2b07      	cmp	r3, #7
 8001092:	dde3      	ble.n	800105c <i2c_read_nack+0x10>
    }
    // Send NACK
    sda_output(); sda_high();
 8001094:	f7ff fe9e 	bl	8000dd4 <sda_output>
 8001098:	f7ff fedc 	bl	8000e54 <sda_high>
    scl_high(); delay_us(2);
 800109c:	f7ff fec0 	bl	8000e20 <scl_high>
 80010a0:	2002      	movs	r0, #2
 80010a2:	f7ff fe63 	bl	8000d6c <delay_us>
    scl_low(); delay_us(2);
 80010a6:	f7ff fec7 	bl	8000e38 <scl_low>
 80010aa:	2002      	movs	r0, #2
 80010ac:	f7ff fe5e 	bl	8000d6c <delay_us>
    return data;
 80010b0:	79fb      	ldrb	r3, [r7, #7]
}
 80010b2:	4618      	mov	r0, r3
 80010b4:	3708      	adds	r7, #8
 80010b6:	46bd      	mov	sp, r7
 80010b8:	bd80      	pop	{r7, pc}
 80010ba:	bf00      	nop
 80010bc:	40020400 	.word	0x40020400

080010c0 <lcd_init>:
static void lcd_send_cmd(uint8_t cmd);
static void lcd_send_data(uint8_t data);
static void lcd_write_nibble(uint8_t nibble);
static void lcd_toggle(uint8_t data);

void lcd_init(void) {
 80010c0:	b580      	push	{r7, lr}
 80010c2:	af00      	add	r7, sp, #0
    i2c_init();
 80010c4:	f7ff fee0 	bl	8000e88 <i2c_init>
    delay_ms(50);
 80010c8:	2032      	movs	r0, #50	@ 0x32
 80010ca:	f7ff fe69 	bl	8000da0 <delay_ms>

    lcd_write_nibble(0x30);
 80010ce:	2030      	movs	r0, #48	@ 0x30
 80010d0:	f000 f896 	bl	8001200 <lcd_write_nibble>
    delay_ms(5);
 80010d4:	2005      	movs	r0, #5
 80010d6:	f7ff fe63 	bl	8000da0 <delay_ms>
    lcd_write_nibble(0x30);
 80010da:	2030      	movs	r0, #48	@ 0x30
 80010dc:	f000 f890 	bl	8001200 <lcd_write_nibble>
    delay_ms(5);
 80010e0:	2005      	movs	r0, #5
 80010e2:	f7ff fe5d 	bl	8000da0 <delay_ms>
    lcd_write_nibble(0x30);
 80010e6:	2030      	movs	r0, #48	@ 0x30
 80010e8:	f000 f88a 	bl	8001200 <lcd_write_nibble>
    delay_ms(1);
 80010ec:	2001      	movs	r0, #1
 80010ee:	f7ff fe57 	bl	8000da0 <delay_ms>
    lcd_write_nibble(0x20);  // 4-bit mode
 80010f2:	2020      	movs	r0, #32
 80010f4:	f000 f884 	bl	8001200 <lcd_write_nibble>

    lcd_send_cmd(0x28);  // 2 lines, 5x8
 80010f8:	2028      	movs	r0, #40	@ 0x28
 80010fa:	f000 f84c 	bl	8001196 <lcd_send_cmd>
    lcd_send_cmd(0x0C);  // Display on, cursor off
 80010fe:	200c      	movs	r0, #12
 8001100:	f000 f849 	bl	8001196 <lcd_send_cmd>
    lcd_send_cmd(0x06);  // Increment
 8001104:	2006      	movs	r0, #6
 8001106:	f000 f846 	bl	8001196 <lcd_send_cmd>
    lcd_clear();
 800110a:	f000 f802 	bl	8001112 <lcd_clear>
}
 800110e:	bf00      	nop
 8001110:	bd80      	pop	{r7, pc}

08001112 <lcd_clear>:

void lcd_clear(void) {
 8001112:	b580      	push	{r7, lr}
 8001114:	af00      	add	r7, sp, #0
    lcd_send_cmd(0x01);
 8001116:	2001      	movs	r0, #1
 8001118:	f000 f83d 	bl	8001196 <lcd_send_cmd>
    delay_ms(2);  // Required
 800111c:	2002      	movs	r0, #2
 800111e:	f7ff fe3f 	bl	8000da0 <delay_ms>
}
 8001122:	bf00      	nop
 8001124:	bd80      	pop	{r7, pc}
	...

08001128 <lcd_set_cursor>:

void lcd_set_cursor(uint8_t row, uint8_t col) {
 8001128:	b580      	push	{r7, lr}
 800112a:	b084      	sub	sp, #16
 800112c:	af00      	add	r7, sp, #0
 800112e:	4603      	mov	r3, r0
 8001130:	460a      	mov	r2, r1
 8001132:	71fb      	strb	r3, [r7, #7]
 8001134:	4613      	mov	r3, r2
 8001136:	71bb      	strb	r3, [r7, #6]
    const uint8_t row_offsets[] = {0x00, 0x40, 0x14, 0x54};
 8001138:	4b0b      	ldr	r3, [pc, #44]	@ (8001168 <lcd_set_cursor+0x40>)
 800113a:	60fb      	str	r3, [r7, #12]
    lcd_send_cmd(0x80 | (col + row_offsets[row % 2]));
 800113c:	79fb      	ldrb	r3, [r7, #7]
 800113e:	f003 0301 	and.w	r3, r3, #1
 8001142:	3310      	adds	r3, #16
 8001144:	443b      	add	r3, r7
 8001146:	f813 2c04 	ldrb.w	r2, [r3, #-4]
 800114a:	79bb      	ldrb	r3, [r7, #6]
 800114c:	4413      	add	r3, r2
 800114e:	b2db      	uxtb	r3, r3
 8001150:	b25b      	sxtb	r3, r3
 8001152:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001156:	b25b      	sxtb	r3, r3
 8001158:	b2db      	uxtb	r3, r3
 800115a:	4618      	mov	r0, r3
 800115c:	f000 f81b 	bl	8001196 <lcd_send_cmd>
}
 8001160:	bf00      	nop
 8001162:	3710      	adds	r7, #16
 8001164:	46bd      	mov	sp, r7
 8001166:	bd80      	pop	{r7, pc}
 8001168:	54144000 	.word	0x54144000

0800116c <lcd_send_string>:

void lcd_send_string(const char* str) {
 800116c:	b580      	push	{r7, lr}
 800116e:	b082      	sub	sp, #8
 8001170:	af00      	add	r7, sp, #0
 8001172:	6078      	str	r0, [r7, #4]
    while (*str) {
 8001174:	e006      	b.n	8001184 <lcd_send_string+0x18>
        lcd_send_data(*str++);
 8001176:	687b      	ldr	r3, [r7, #4]
 8001178:	1c5a      	adds	r2, r3, #1
 800117a:	607a      	str	r2, [r7, #4]
 800117c:	781b      	ldrb	r3, [r3, #0]
 800117e:	4618      	mov	r0, r3
 8001180:	f000 f81f 	bl	80011c2 <lcd_send_data>
    while (*str) {
 8001184:	687b      	ldr	r3, [r7, #4]
 8001186:	781b      	ldrb	r3, [r3, #0]
 8001188:	2b00      	cmp	r3, #0
 800118a:	d1f4      	bne.n	8001176 <lcd_send_string+0xa>
    }
}
 800118c:	bf00      	nop
 800118e:	bf00      	nop
 8001190:	3708      	adds	r7, #8
 8001192:	46bd      	mov	sp, r7
 8001194:	bd80      	pop	{r7, pc}

08001196 <lcd_send_cmd>:

static void lcd_send_cmd(uint8_t cmd) {
 8001196:	b580      	push	{r7, lr}
 8001198:	b082      	sub	sp, #8
 800119a:	af00      	add	r7, sp, #0
 800119c:	4603      	mov	r3, r0
 800119e:	71fb      	strb	r3, [r7, #7]
    lcd_write_nibble((cmd & 0xF0));
 80011a0:	79fb      	ldrb	r3, [r7, #7]
 80011a2:	f023 030f 	bic.w	r3, r3, #15
 80011a6:	b2db      	uxtb	r3, r3
 80011a8:	4618      	mov	r0, r3
 80011aa:	f000 f829 	bl	8001200 <lcd_write_nibble>
    lcd_write_nibble((cmd << 4));
 80011ae:	79fb      	ldrb	r3, [r7, #7]
 80011b0:	011b      	lsls	r3, r3, #4
 80011b2:	b2db      	uxtb	r3, r3
 80011b4:	4618      	mov	r0, r3
 80011b6:	f000 f823 	bl	8001200 <lcd_write_nibble>
}
 80011ba:	bf00      	nop
 80011bc:	3708      	adds	r7, #8
 80011be:	46bd      	mov	sp, r7
 80011c0:	bd80      	pop	{r7, pc}

080011c2 <lcd_send_data>:

static void lcd_send_data(uint8_t data) {
 80011c2:	b580      	push	{r7, lr}
 80011c4:	b082      	sub	sp, #8
 80011c6:	af00      	add	r7, sp, #0
 80011c8:	4603      	mov	r3, r0
 80011ca:	71fb      	strb	r3, [r7, #7]
    lcd_write_nibble((data & 0xF0) | LCD_RS);
 80011cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80011d0:	f023 030f 	bic.w	r3, r3, #15
 80011d4:	b25b      	sxtb	r3, r3
 80011d6:	f043 0301 	orr.w	r3, r3, #1
 80011da:	b25b      	sxtb	r3, r3
 80011dc:	b2db      	uxtb	r3, r3
 80011de:	4618      	mov	r0, r3
 80011e0:	f000 f80e 	bl	8001200 <lcd_write_nibble>
    lcd_write_nibble((data << 4)  | LCD_RS);
 80011e4:	79fb      	ldrb	r3, [r7, #7]
 80011e6:	011b      	lsls	r3, r3, #4
 80011e8:	b25b      	sxtb	r3, r3
 80011ea:	f043 0301 	orr.w	r3, r3, #1
 80011ee:	b25b      	sxtb	r3, r3
 80011f0:	b2db      	uxtb	r3, r3
 80011f2:	4618      	mov	r0, r3
 80011f4:	f000 f804 	bl	8001200 <lcd_write_nibble>
}
 80011f8:	bf00      	nop
 80011fa:	3708      	adds	r7, #8
 80011fc:	46bd      	mov	sp, r7
 80011fe:	bd80      	pop	{r7, pc}

08001200 <lcd_write_nibble>:

static void lcd_write_nibble(uint8_t nibble) {
 8001200:	b580      	push	{r7, lr}
 8001202:	b082      	sub	sp, #8
 8001204:	af00      	add	r7, sp, #0
 8001206:	4603      	mov	r3, r0
 8001208:	71fb      	strb	r3, [r7, #7]
    lcd_toggle(nibble | LCD_BL);  // Backlight always on
 800120a:	79fb      	ldrb	r3, [r7, #7]
 800120c:	f043 0308 	orr.w	r3, r3, #8
 8001210:	b2db      	uxtb	r3, r3
 8001212:	4618      	mov	r0, r3
 8001214:	f000 f804 	bl	8001220 <lcd_toggle>
}
 8001218:	bf00      	nop
 800121a:	3708      	adds	r7, #8
 800121c:	46bd      	mov	sp, r7
 800121e:	bd80      	pop	{r7, pc}

08001220 <lcd_toggle>:

static void lcd_toggle(uint8_t data) {
 8001220:	b580      	push	{r7, lr}
 8001222:	b082      	sub	sp, #8
 8001224:	af00      	add	r7, sp, #0
 8001226:	4603      	mov	r3, r0
 8001228:	71fb      	strb	r3, [r7, #7]
    i2c_start();
 800122a:	f7ff fe5d 	bl	8000ee8 <i2c_start>
    i2c_write(LCD_ADDR);
 800122e:	204e      	movs	r0, #78	@ 0x4e
 8001230:	f7ff fe7e 	bl	8000f30 <i2c_write>
    i2c_write(data | LCD_EN);  // EN=1
 8001234:	79fb      	ldrb	r3, [r7, #7]
 8001236:	f043 0304 	orr.w	r3, r3, #4
 800123a:	b2db      	uxtb	r3, r3
 800123c:	4618      	mov	r0, r3
 800123e:	f7ff fe77 	bl	8000f30 <i2c_write>
    delay_us(1);
 8001242:	2001      	movs	r0, #1
 8001244:	f7ff fd92 	bl	8000d6c <delay_us>
    i2c_write(data & ~LCD_EN); // EN=0
 8001248:	79fb      	ldrb	r3, [r7, #7]
 800124a:	f023 0304 	bic.w	r3, r3, #4
 800124e:	b2db      	uxtb	r3, r3
 8001250:	4618      	mov	r0, r3
 8001252:	f7ff fe6d 	bl	8000f30 <i2c_write>
    i2c_stop();
 8001256:	f7ff fe59 	bl	8000f0c <i2c_stop>
    delay_us(50);  // Wait for command
 800125a:	2032      	movs	r0, #50	@ 0x32
 800125c:	f7ff fd86 	bl	8000d6c <delay_us>
}
 8001260:	bf00      	nop
 8001262:	3708      	adds	r7, #8
 8001264:	46bd      	mov	sp, r7
 8001266:	bd80      	pop	{r7, pc}

08001268 <thermistor_get_temp>:

RTC_Time current_time;

// Convert ADC reading to temperature (Celsius)
float thermistor_get_temp(uint16_t adc_val)
{
 8001268:	b5b0      	push	{r4, r5, r7, lr}
 800126a:	b086      	sub	sp, #24
 800126c:	af00      	add	r7, sp, #0
 800126e:	4603      	mov	r3, r0
 8001270:	80fb      	strh	r3, [r7, #6]
    float vout = (adc_val / 4095.0f) * VREF;
 8001272:	88fb      	ldrh	r3, [r7, #6]
 8001274:	ee07 3a90 	vmov	s15, r3
 8001278:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800127c:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 8001388 <thermistor_get_temp+0x120>
 8001280:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8001284:	ee16 0a90 	vmov	r0, s13
 8001288:	f7ff f97e 	bl	8000588 <__aeabi_f2d>
 800128c:	a336      	add	r3, pc, #216	@ (adr r3, 8001368 <thermistor_get_temp+0x100>)
 800128e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001292:	f7ff f9d1 	bl	8000638 <__aeabi_dmul>
 8001296:	4602      	mov	r2, r0
 8001298:	460b      	mov	r3, r1
 800129a:	4610      	mov	r0, r2
 800129c:	4619      	mov	r1, r3
 800129e:	f7ff fca3 	bl	8000be8 <__aeabi_d2f>
 80012a2:	4603      	mov	r3, r0
 80012a4:	617b      	str	r3, [r7, #20]
    float r_thermistor = (R_FIXED * vout) / (VREF - vout);
 80012a6:	6978      	ldr	r0, [r7, #20]
 80012a8:	f7ff f96e 	bl	8000588 <__aeabi_f2d>
 80012ac:	a330      	add	r3, pc, #192	@ (adr r3, 8001370 <thermistor_get_temp+0x108>)
 80012ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80012b2:	f7ff f9c1 	bl	8000638 <__aeabi_dmul>
 80012b6:	4602      	mov	r2, r0
 80012b8:	460b      	mov	r3, r1
 80012ba:	4614      	mov	r4, r2
 80012bc:	461d      	mov	r5, r3
 80012be:	6978      	ldr	r0, [r7, #20]
 80012c0:	f7ff f962 	bl	8000588 <__aeabi_f2d>
 80012c4:	4602      	mov	r2, r0
 80012c6:	460b      	mov	r3, r1
 80012c8:	a127      	add	r1, pc, #156	@ (adr r1, 8001368 <thermistor_get_temp+0x100>)
 80012ca:	e9d1 0100 	ldrd	r0, r1, [r1]
 80012ce:	f7fe fffb 	bl	80002c8 <__aeabi_dsub>
 80012d2:	4602      	mov	r2, r0
 80012d4:	460b      	mov	r3, r1
 80012d6:	4620      	mov	r0, r4
 80012d8:	4629      	mov	r1, r5
 80012da:	f7ff fad7 	bl	800088c <__aeabi_ddiv>
 80012de:	4602      	mov	r2, r0
 80012e0:	460b      	mov	r3, r1
 80012e2:	4610      	mov	r0, r2
 80012e4:	4619      	mov	r1, r3
 80012e6:	f7ff fc7f 	bl	8000be8 <__aeabi_d2f>
 80012ea:	4603      	mov	r3, r0
 80012ec:	613b      	str	r3, [r7, #16]

    float tempK = 1.0f / (1.0f / T0 + logf(r_thermistor / R0) / BETA);
 80012ee:	edd7 7a04 	vldr	s15, [r7, #16]
 80012f2:	eddf 6a26 	vldr	s13, [pc, #152]	@ 800138c <thermistor_get_temp+0x124>
 80012f6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80012fa:	eeb0 0a47 	vmov.f32	s0, s14
 80012fe:	f003 f8bf 	bl	8004480 <logf>
 8001302:	ee10 3a10 	vmov	r3, s0
 8001306:	4618      	mov	r0, r3
 8001308:	f7ff f93e 	bl	8000588 <__aeabi_f2d>
 800130c:	a31a      	add	r3, pc, #104	@ (adr r3, 8001378 <thermistor_get_temp+0x110>)
 800130e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001312:	f7ff fabb 	bl	800088c <__aeabi_ddiv>
 8001316:	4602      	mov	r2, r0
 8001318:	460b      	mov	r3, r1
 800131a:	4610      	mov	r0, r2
 800131c:	4619      	mov	r1, r3
 800131e:	a318      	add	r3, pc, #96	@ (adr r3, 8001380 <thermistor_get_temp+0x118>)
 8001320:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001324:	f7fe ffd2 	bl	80002cc <__adddf3>
 8001328:	4602      	mov	r2, r0
 800132a:	460b      	mov	r3, r1
 800132c:	f04f 0000 	mov.w	r0, #0
 8001330:	4917      	ldr	r1, [pc, #92]	@ (8001390 <thermistor_get_temp+0x128>)
 8001332:	f7ff faab 	bl	800088c <__aeabi_ddiv>
 8001336:	4602      	mov	r2, r0
 8001338:	460b      	mov	r3, r1
 800133a:	4610      	mov	r0, r2
 800133c:	4619      	mov	r1, r3
 800133e:	f7ff fc53 	bl	8000be8 <__aeabi_d2f>
 8001342:	4603      	mov	r3, r0
 8001344:	60fb      	str	r3, [r7, #12]
    float tempC = tempK - 273.15f;
 8001346:	edd7 7a03 	vldr	s15, [r7, #12]
 800134a:	ed9f 7a12 	vldr	s14, [pc, #72]	@ 8001394 <thermistor_get_temp+0x12c>
 800134e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001352:	edc7 7a02 	vstr	s15, [r7, #8]

    return tempC;
 8001356:	68bb      	ldr	r3, [r7, #8]
 8001358:	ee07 3a90 	vmov	s15, r3
}
 800135c:	eeb0 0a67 	vmov.f32	s0, s15
 8001360:	3718      	adds	r7, #24
 8001362:	46bd      	mov	sp, r7
 8001364:	bdb0      	pop	{r4, r5, r7, pc}
 8001366:	bf00      	nop
 8001368:	66666666 	.word	0x66666666
 800136c:	400a6666 	.word	0x400a6666
 8001370:	00000000 	.word	0x00000000
 8001374:	40c38800 	.word	0x40c38800
 8001378:	00000000 	.word	0x00000000
 800137c:	40aedc00 	.word	0x40aedc00
 8001380:	dcb5db83 	.word	0xdcb5db83
 8001384:	3f6b79e1 	.word	0x3f6b79e1
 8001388:	457ff000 	.word	0x457ff000
 800138c:	461c4000 	.word	0x461c4000
 8001390:	3ff00000 	.word	0x3ff00000
 8001394:	43889333 	.word	0x43889333

08001398 <main>:

int main(void)
{
 8001398:	b580      	push	{r7, lr}
 800139a:	b084      	sub	sp, #16
 800139c:	af02      	add	r7, sp, #8
	SCB->CPACR |= (0xF << 20); //  Enable FPU
 800139e:	4b2e      	ldr	r3, [pc, #184]	@ (8001458 <main+0xc0>)
 80013a0:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80013a4:	4a2c      	ldr	r2, [pc, #176]	@ (8001458 <main+0xc0>)
 80013a6:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80013aa:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

    uint16_t adc_val;
    float temperature;
    delay_init();      // if you use SysTick-based delay
 80013ae:	f7ff fccb 	bl	8000d48 <delay_init>

    lcd_init();
 80013b2:	f7ff fe85 	bl	80010c0 <lcd_init>

    //lcd_send_string("Hello!");

	uart2_init();
 80013b6:	f000 f85d 	bl	8001474 <uart2_init>
	adc_init();       // for thermistor
 80013ba:	f7ff fc65 	bl	8000c88 <adc_init>

    while (1)
    {
    	adc_val = adc_read(1);
 80013be:	2001      	movs	r0, #1
 80013c0:	f7ff fca2 	bl	8000d08 <adc_read>
 80013c4:	4603      	mov	r3, r0
 80013c6:	80fb      	strh	r3, [r7, #6]
    	temperature = thermistor_get_temp(adc_val);
 80013c8:	88fb      	ldrh	r3, [r7, #6]
 80013ca:	4618      	mov	r0, r3
 80013cc:	f7ff ff4c 	bl	8001268 <thermistor_get_temp>
 80013d0:	ed87 0a00 	vstr	s0, [r7]

    	rtc_get_time(&current_time);
 80013d4:	4821      	ldr	r0, [pc, #132]	@ (800145c <main+0xc4>)
 80013d6:	f000 f8ba 	bl	800154e <rtc_get_time>

    	snprintf(buffer, sizeof(buffer), "Temp: %.2f C\n\r", temperature);
 80013da:	6838      	ldr	r0, [r7, #0]
 80013dc:	f7ff f8d4 	bl	8000588 <__aeabi_f2d>
 80013e0:	4602      	mov	r2, r0
 80013e2:	460b      	mov	r3, r1
 80013e4:	e9cd 2300 	strd	r2, r3, [sp]
 80013e8:	4a1d      	ldr	r2, [pc, #116]	@ (8001460 <main+0xc8>)
 80013ea:	2140      	movs	r1, #64	@ 0x40
 80013ec:	481d      	ldr	r0, [pc, #116]	@ (8001464 <main+0xcc>)
 80013ee:	f000 ff05 	bl	80021fc <sniprintf>
    	uart2_print(buffer);
 80013f2:	481c      	ldr	r0, [pc, #112]	@ (8001464 <main+0xcc>)
 80013f4:	f000 f896 	bl	8001524 <uart2_print>

    	// First line: Temperature
    	lcd_set_cursor(0, 0);
 80013f8:	2100      	movs	r1, #0
 80013fa:	2000      	movs	r0, #0
 80013fc:	f7ff fe94 	bl	8001128 <lcd_set_cursor>
    	snprintf(buffer, sizeof(buffer), "Temp: %.2f C", temperature);
 8001400:	6838      	ldr	r0, [r7, #0]
 8001402:	f7ff f8c1 	bl	8000588 <__aeabi_f2d>
 8001406:	4602      	mov	r2, r0
 8001408:	460b      	mov	r3, r1
 800140a:	e9cd 2300 	strd	r2, r3, [sp]
 800140e:	4a16      	ldr	r2, [pc, #88]	@ (8001468 <main+0xd0>)
 8001410:	2140      	movs	r1, #64	@ 0x40
 8001412:	4814      	ldr	r0, [pc, #80]	@ (8001464 <main+0xcc>)
 8001414:	f000 fef2 	bl	80021fc <sniprintf>
    	lcd_send_string(buffer);
 8001418:	4812      	ldr	r0, [pc, #72]	@ (8001464 <main+0xcc>)
 800141a:	f7ff fea7 	bl	800116c <lcd_send_string>

    	// Second line: Time
    	lcd_set_cursor(1, 0);
 800141e:	2100      	movs	r1, #0
 8001420:	2001      	movs	r0, #1
 8001422:	f7ff fe81 	bl	8001128 <lcd_set_cursor>
    	snprintf(time_buf, sizeof(time_buf), "%02d:%02d:%02d",
    	         current_time.hours,
 8001426:	4b0d      	ldr	r3, [pc, #52]	@ (800145c <main+0xc4>)
 8001428:	781b      	ldrb	r3, [r3, #0]
    	snprintf(time_buf, sizeof(time_buf), "%02d:%02d:%02d",
 800142a:	4619      	mov	r1, r3
    	         current_time.minutes,
 800142c:	4b0b      	ldr	r3, [pc, #44]	@ (800145c <main+0xc4>)
 800142e:	785b      	ldrb	r3, [r3, #1]
    	snprintf(time_buf, sizeof(time_buf), "%02d:%02d:%02d",
 8001430:	461a      	mov	r2, r3
    	         current_time.seconds);
 8001432:	4b0a      	ldr	r3, [pc, #40]	@ (800145c <main+0xc4>)
 8001434:	789b      	ldrb	r3, [r3, #2]
    	snprintf(time_buf, sizeof(time_buf), "%02d:%02d:%02d",
 8001436:	9301      	str	r3, [sp, #4]
 8001438:	9200      	str	r2, [sp, #0]
 800143a:	460b      	mov	r3, r1
 800143c:	4a0b      	ldr	r2, [pc, #44]	@ (800146c <main+0xd4>)
 800143e:	2110      	movs	r1, #16
 8001440:	480b      	ldr	r0, [pc, #44]	@ (8001470 <main+0xd8>)
 8001442:	f000 fedb 	bl	80021fc <sniprintf>
    	lcd_send_string(time_buf);
 8001446:	480a      	ldr	r0, [pc, #40]	@ (8001470 <main+0xd8>)
 8001448:	f7ff fe90 	bl	800116c <lcd_send_string>

    	delay_ms(1000);
 800144c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8001450:	f7ff fca6 	bl	8000da0 <delay_ms>
    	adc_val = adc_read(1);
 8001454:	bf00      	nop
 8001456:	e7b2      	b.n	80013be <main+0x26>
 8001458:	e000ed00 	.word	0xe000ed00
 800145c:	20000234 	.word	0x20000234
 8001460:	080046e8 	.word	0x080046e8
 8001464:	200001e4 	.word	0x200001e4
 8001468:	080046f8 	.word	0x080046f8
 800146c:	08004708 	.word	0x08004708
 8001470:	20000224 	.word	0x20000224

08001474 <uart2_init>:
    }
}

// === UART2 CONFIG ===
void uart2_init(void)
{
 8001474:	b480      	push	{r7}
 8001476:	af00      	add	r7, sp, #0
    RCC->AHB1ENR |= (1U << 0);     // GPIOA
 8001478:	4b1b      	ldr	r3, [pc, #108]	@ (80014e8 <uart2_init+0x74>)
 800147a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800147c:	4a1a      	ldr	r2, [pc, #104]	@ (80014e8 <uart2_init+0x74>)
 800147e:	f043 0301 	orr.w	r3, r3, #1
 8001482:	6313      	str	r3, [r2, #48]	@ 0x30
    RCC->APB1ENR |= (1U << 17);    // USART2
 8001484:	4b18      	ldr	r3, [pc, #96]	@ (80014e8 <uart2_init+0x74>)
 8001486:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001488:	4a17      	ldr	r2, [pc, #92]	@ (80014e8 <uart2_init+0x74>)
 800148a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800148e:	6413      	str	r3, [r2, #64]	@ 0x40

    // PA2 = TX (AF7)
    GPIOA->MODER &= ~(3U << (2 * 2));
 8001490:	4b16      	ldr	r3, [pc, #88]	@ (80014ec <uart2_init+0x78>)
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	4a15      	ldr	r2, [pc, #84]	@ (80014ec <uart2_init+0x78>)
 8001496:	f023 0330 	bic.w	r3, r3, #48	@ 0x30
 800149a:	6013      	str	r3, [r2, #0]
    GPIOA->MODER |=  (2U << (2 * 2));
 800149c:	4b13      	ldr	r3, [pc, #76]	@ (80014ec <uart2_init+0x78>)
 800149e:	681b      	ldr	r3, [r3, #0]
 80014a0:	4a12      	ldr	r2, [pc, #72]	@ (80014ec <uart2_init+0x78>)
 80014a2:	f043 0320 	orr.w	r3, r3, #32
 80014a6:	6013      	str	r3, [r2, #0]
    GPIOA->AFR[0]  &= ~(0xF << (4 * 2));
 80014a8:	4b10      	ldr	r3, [pc, #64]	@ (80014ec <uart2_init+0x78>)
 80014aa:	6a1b      	ldr	r3, [r3, #32]
 80014ac:	4a0f      	ldr	r2, [pc, #60]	@ (80014ec <uart2_init+0x78>)
 80014ae:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 80014b2:	6213      	str	r3, [r2, #32]
    GPIOA->AFR[0]  |=  (7U << (4 * 2));
 80014b4:	4b0d      	ldr	r3, [pc, #52]	@ (80014ec <uart2_init+0x78>)
 80014b6:	6a1b      	ldr	r3, [r3, #32]
 80014b8:	4a0c      	ldr	r2, [pc, #48]	@ (80014ec <uart2_init+0x78>)
 80014ba:	f443 63e0 	orr.w	r3, r3, #1792	@ 0x700
 80014be:	6213      	str	r3, [r2, #32]

    USART2->BRR = 0x008A;  // 115200 @ 16 MHz
 80014c0:	4b0b      	ldr	r3, [pc, #44]	@ (80014f0 <uart2_init+0x7c>)
 80014c2:	228a      	movs	r2, #138	@ 0x8a
 80014c4:	609a      	str	r2, [r3, #8]
    USART2->CR1 |= (1U << 3);  // TE
 80014c6:	4b0a      	ldr	r3, [pc, #40]	@ (80014f0 <uart2_init+0x7c>)
 80014c8:	68db      	ldr	r3, [r3, #12]
 80014ca:	4a09      	ldr	r2, [pc, #36]	@ (80014f0 <uart2_init+0x7c>)
 80014cc:	f043 0308 	orr.w	r3, r3, #8
 80014d0:	60d3      	str	r3, [r2, #12]
    USART2->CR1 |= (1U << 13); // UE
 80014d2:	4b07      	ldr	r3, [pc, #28]	@ (80014f0 <uart2_init+0x7c>)
 80014d4:	68db      	ldr	r3, [r3, #12]
 80014d6:	4a06      	ldr	r2, [pc, #24]	@ (80014f0 <uart2_init+0x7c>)
 80014d8:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80014dc:	60d3      	str	r3, [r2, #12]
}
 80014de:	bf00      	nop
 80014e0:	46bd      	mov	sp, r7
 80014e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014e6:	4770      	bx	lr
 80014e8:	40023800 	.word	0x40023800
 80014ec:	40020000 	.word	0x40020000
 80014f0:	40004400 	.word	0x40004400

080014f4 <uart2_write>:

void uart2_write(char c)
{
 80014f4:	b480      	push	{r7}
 80014f6:	b083      	sub	sp, #12
 80014f8:	af00      	add	r7, sp, #0
 80014fa:	4603      	mov	r3, r0
 80014fc:	71fb      	strb	r3, [r7, #7]
    while (!(USART2->SR & (1 << 7))); // Wait for TXE
 80014fe:	bf00      	nop
 8001500:	4b07      	ldr	r3, [pc, #28]	@ (8001520 <uart2_write+0x2c>)
 8001502:	681b      	ldr	r3, [r3, #0]
 8001504:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001508:	2b00      	cmp	r3, #0
 800150a:	d0f9      	beq.n	8001500 <uart2_write+0xc>
    USART2->DR = c;
 800150c:	4a04      	ldr	r2, [pc, #16]	@ (8001520 <uart2_write+0x2c>)
 800150e:	79fb      	ldrb	r3, [r7, #7]
 8001510:	6053      	str	r3, [r2, #4]
}
 8001512:	bf00      	nop
 8001514:	370c      	adds	r7, #12
 8001516:	46bd      	mov	sp, r7
 8001518:	f85d 7b04 	ldr.w	r7, [sp], #4
 800151c:	4770      	bx	lr
 800151e:	bf00      	nop
 8001520:	40004400 	.word	0x40004400

08001524 <uart2_print>:

void uart2_print(const char* s)
{
 8001524:	b580      	push	{r7, lr}
 8001526:	b082      	sub	sp, #8
 8001528:	af00      	add	r7, sp, #0
 800152a:	6078      	str	r0, [r7, #4]
    while (*s)
 800152c:	e006      	b.n	800153c <uart2_print+0x18>
        uart2_write(*s++);
 800152e:	687b      	ldr	r3, [r7, #4]
 8001530:	1c5a      	adds	r2, r3, #1
 8001532:	607a      	str	r2, [r7, #4]
 8001534:	781b      	ldrb	r3, [r3, #0]
 8001536:	4618      	mov	r0, r3
 8001538:	f7ff ffdc 	bl	80014f4 <uart2_write>
    while (*s)
 800153c:	687b      	ldr	r3, [r7, #4]
 800153e:	781b      	ldrb	r3, [r3, #0]
 8001540:	2b00      	cmp	r3, #0
 8001542:	d1f4      	bne.n	800152e <uart2_print+0xa>
}
 8001544:	bf00      	nop
 8001546:	bf00      	nop
 8001548:	3708      	adds	r7, #8
 800154a:	46bd      	mov	sp, r7
 800154c:	bd80      	pop	{r7, pc}

0800154e <rtc_get_time>:
	// Optional: init control/status registers
}


void rtc_get_time(RTC_Time* time)
{
 800154e:	b580      	push	{r7, lr}
 8001550:	b082      	sub	sp, #8
 8001552:	af00      	add	r7, sp, #0
 8001554:	6078      	str	r0, [r7, #4]
	i2c_start();
 8001556:	f7ff fcc7 	bl	8000ee8 <i2c_start>
	i2c_write(RTC_ADDR);
 800155a:	20d0      	movs	r0, #208	@ 0xd0
 800155c:	f7ff fce8 	bl	8000f30 <i2c_write>
	i2c_write(0x00); // seconds register
 8001560:	2000      	movs	r0, #0
 8001562:	f7ff fce5 	bl	8000f30 <i2c_write>
	i2c_restart();
 8001566:	f7ff fd23 	bl	8000fb0 <i2c_restart>
	i2c_write(RTC_ADDR | 0x01);
 800156a:	20d1      	movs	r0, #209	@ 0xd1
 800156c:	f7ff fce0 	bl	8000f30 <i2c_write>

	time->seconds = bcd_to_decimal(i2c_read_ack());
 8001570:	f7ff fd30 	bl	8000fd4 <i2c_read_ack>
 8001574:	4603      	mov	r3, r0
 8001576:	4618      	mov	r0, r3
 8001578:	f000 f8e4 	bl	8001744 <bcd_to_decimal>
 800157c:	4603      	mov	r3, r0
 800157e:	b2da      	uxtb	r2, r3
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	709a      	strb	r2, [r3, #2]
	time->minutes = bcd_to_decimal(i2c_read_ack());
 8001584:	f7ff fd26 	bl	8000fd4 <i2c_read_ack>
 8001588:	4603      	mov	r3, r0
 800158a:	4618      	mov	r0, r3
 800158c:	f000 f8da 	bl	8001744 <bcd_to_decimal>
 8001590:	4603      	mov	r3, r0
 8001592:	b2da      	uxtb	r2, r3
 8001594:	687b      	ldr	r3, [r7, #4]
 8001596:	705a      	strb	r2, [r3, #1]
	time->hours = bcd_to_decimal(i2c_read_nack());
 8001598:	f7ff fd58 	bl	800104c <i2c_read_nack>
 800159c:	4603      	mov	r3, r0
 800159e:	4618      	mov	r0, r3
 80015a0:	f000 f8d0 	bl	8001744 <bcd_to_decimal>
 80015a4:	4603      	mov	r3, r0
 80015a6:	b2da      	uxtb	r2, r3
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	701a      	strb	r2, [r3, #0]

	i2c_stop();
 80015ac:	f7ff fcae 	bl	8000f0c <i2c_stop>
}
 80015b0:	bf00      	nop
 80015b2:	3708      	adds	r7, #8
 80015b4:	46bd      	mov	sp, r7
 80015b6:	bd80      	pop	{r7, pc}

080015b8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80015b8:	b480      	push	{r7}
 80015ba:	af00      	add	r7, sp, #0
  return 1;
 80015bc:	2301      	movs	r3, #1
}
 80015be:	4618      	mov	r0, r3
 80015c0:	46bd      	mov	sp, r7
 80015c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015c6:	4770      	bx	lr

080015c8 <_kill>:

int _kill(int pid, int sig)
{
 80015c8:	b580      	push	{r7, lr}
 80015ca:	b082      	sub	sp, #8
 80015cc:	af00      	add	r7, sp, #0
 80015ce:	6078      	str	r0, [r7, #4]
 80015d0:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80015d2:	f000 fedd 	bl	8002390 <__errno>
 80015d6:	4603      	mov	r3, r0
 80015d8:	2216      	movs	r2, #22
 80015da:	601a      	str	r2, [r3, #0]
  return -1;
 80015dc:	f04f 33ff 	mov.w	r3, #4294967295
}
 80015e0:	4618      	mov	r0, r3
 80015e2:	3708      	adds	r7, #8
 80015e4:	46bd      	mov	sp, r7
 80015e6:	bd80      	pop	{r7, pc}

080015e8 <_exit>:

void _exit (int status)
{
 80015e8:	b580      	push	{r7, lr}
 80015ea:	b082      	sub	sp, #8
 80015ec:	af00      	add	r7, sp, #0
 80015ee:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80015f0:	f04f 31ff 	mov.w	r1, #4294967295
 80015f4:	6878      	ldr	r0, [r7, #4]
 80015f6:	f7ff ffe7 	bl	80015c8 <_kill>
  while (1) {}    /* Make sure we hang here */
 80015fa:	bf00      	nop
 80015fc:	e7fd      	b.n	80015fa <_exit+0x12>

080015fe <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80015fe:	b580      	push	{r7, lr}
 8001600:	b086      	sub	sp, #24
 8001602:	af00      	add	r7, sp, #0
 8001604:	60f8      	str	r0, [r7, #12]
 8001606:	60b9      	str	r1, [r7, #8]
 8001608:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800160a:	2300      	movs	r3, #0
 800160c:	617b      	str	r3, [r7, #20]
 800160e:	e00a      	b.n	8001626 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001610:	f3af 8000 	nop.w
 8001614:	4601      	mov	r1, r0
 8001616:	68bb      	ldr	r3, [r7, #8]
 8001618:	1c5a      	adds	r2, r3, #1
 800161a:	60ba      	str	r2, [r7, #8]
 800161c:	b2ca      	uxtb	r2, r1
 800161e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001620:	697b      	ldr	r3, [r7, #20]
 8001622:	3301      	adds	r3, #1
 8001624:	617b      	str	r3, [r7, #20]
 8001626:	697a      	ldr	r2, [r7, #20]
 8001628:	687b      	ldr	r3, [r7, #4]
 800162a:	429a      	cmp	r2, r3
 800162c:	dbf0      	blt.n	8001610 <_read+0x12>
  }

  return len;
 800162e:	687b      	ldr	r3, [r7, #4]
}
 8001630:	4618      	mov	r0, r3
 8001632:	3718      	adds	r7, #24
 8001634:	46bd      	mov	sp, r7
 8001636:	bd80      	pop	{r7, pc}

08001638 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001638:	b580      	push	{r7, lr}
 800163a:	b086      	sub	sp, #24
 800163c:	af00      	add	r7, sp, #0
 800163e:	60f8      	str	r0, [r7, #12]
 8001640:	60b9      	str	r1, [r7, #8]
 8001642:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001644:	2300      	movs	r3, #0
 8001646:	617b      	str	r3, [r7, #20]
 8001648:	e009      	b.n	800165e <_write+0x26>
  {
    __io_putchar(*ptr++);
 800164a:	68bb      	ldr	r3, [r7, #8]
 800164c:	1c5a      	adds	r2, r3, #1
 800164e:	60ba      	str	r2, [r7, #8]
 8001650:	781b      	ldrb	r3, [r3, #0]
 8001652:	4618      	mov	r0, r3
 8001654:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001658:	697b      	ldr	r3, [r7, #20]
 800165a:	3301      	adds	r3, #1
 800165c:	617b      	str	r3, [r7, #20]
 800165e:	697a      	ldr	r2, [r7, #20]
 8001660:	687b      	ldr	r3, [r7, #4]
 8001662:	429a      	cmp	r2, r3
 8001664:	dbf1      	blt.n	800164a <_write+0x12>
  }
  return len;
 8001666:	687b      	ldr	r3, [r7, #4]
}
 8001668:	4618      	mov	r0, r3
 800166a:	3718      	adds	r7, #24
 800166c:	46bd      	mov	sp, r7
 800166e:	bd80      	pop	{r7, pc}

08001670 <_close>:

int _close(int file)
{
 8001670:	b480      	push	{r7}
 8001672:	b083      	sub	sp, #12
 8001674:	af00      	add	r7, sp, #0
 8001676:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001678:	f04f 33ff 	mov.w	r3, #4294967295
}
 800167c:	4618      	mov	r0, r3
 800167e:	370c      	adds	r7, #12
 8001680:	46bd      	mov	sp, r7
 8001682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001686:	4770      	bx	lr

08001688 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001688:	b480      	push	{r7}
 800168a:	b083      	sub	sp, #12
 800168c:	af00      	add	r7, sp, #0
 800168e:	6078      	str	r0, [r7, #4]
 8001690:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001692:	683b      	ldr	r3, [r7, #0]
 8001694:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001698:	605a      	str	r2, [r3, #4]
  return 0;
 800169a:	2300      	movs	r3, #0
}
 800169c:	4618      	mov	r0, r3
 800169e:	370c      	adds	r7, #12
 80016a0:	46bd      	mov	sp, r7
 80016a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016a6:	4770      	bx	lr

080016a8 <_isatty>:

int _isatty(int file)
{
 80016a8:	b480      	push	{r7}
 80016aa:	b083      	sub	sp, #12
 80016ac:	af00      	add	r7, sp, #0
 80016ae:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80016b0:	2301      	movs	r3, #1
}
 80016b2:	4618      	mov	r0, r3
 80016b4:	370c      	adds	r7, #12
 80016b6:	46bd      	mov	sp, r7
 80016b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016bc:	4770      	bx	lr

080016be <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80016be:	b480      	push	{r7}
 80016c0:	b085      	sub	sp, #20
 80016c2:	af00      	add	r7, sp, #0
 80016c4:	60f8      	str	r0, [r7, #12]
 80016c6:	60b9      	str	r1, [r7, #8]
 80016c8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80016ca:	2300      	movs	r3, #0
}
 80016cc:	4618      	mov	r0, r3
 80016ce:	3714      	adds	r7, #20
 80016d0:	46bd      	mov	sp, r7
 80016d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016d6:	4770      	bx	lr

080016d8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80016d8:	b580      	push	{r7, lr}
 80016da:	b086      	sub	sp, #24
 80016dc:	af00      	add	r7, sp, #0
 80016de:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80016e0:	4a14      	ldr	r2, [pc, #80]	@ (8001734 <_sbrk+0x5c>)
 80016e2:	4b15      	ldr	r3, [pc, #84]	@ (8001738 <_sbrk+0x60>)
 80016e4:	1ad3      	subs	r3, r2, r3
 80016e6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80016e8:	697b      	ldr	r3, [r7, #20]
 80016ea:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80016ec:	4b13      	ldr	r3, [pc, #76]	@ (800173c <_sbrk+0x64>)
 80016ee:	681b      	ldr	r3, [r3, #0]
 80016f0:	2b00      	cmp	r3, #0
 80016f2:	d102      	bne.n	80016fa <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80016f4:	4b11      	ldr	r3, [pc, #68]	@ (800173c <_sbrk+0x64>)
 80016f6:	4a12      	ldr	r2, [pc, #72]	@ (8001740 <_sbrk+0x68>)
 80016f8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80016fa:	4b10      	ldr	r3, [pc, #64]	@ (800173c <_sbrk+0x64>)
 80016fc:	681a      	ldr	r2, [r3, #0]
 80016fe:	687b      	ldr	r3, [r7, #4]
 8001700:	4413      	add	r3, r2
 8001702:	693a      	ldr	r2, [r7, #16]
 8001704:	429a      	cmp	r2, r3
 8001706:	d207      	bcs.n	8001718 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001708:	f000 fe42 	bl	8002390 <__errno>
 800170c:	4603      	mov	r3, r0
 800170e:	220c      	movs	r2, #12
 8001710:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001712:	f04f 33ff 	mov.w	r3, #4294967295
 8001716:	e009      	b.n	800172c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001718:	4b08      	ldr	r3, [pc, #32]	@ (800173c <_sbrk+0x64>)
 800171a:	681b      	ldr	r3, [r3, #0]
 800171c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800171e:	4b07      	ldr	r3, [pc, #28]	@ (800173c <_sbrk+0x64>)
 8001720:	681a      	ldr	r2, [r3, #0]
 8001722:	687b      	ldr	r3, [r7, #4]
 8001724:	4413      	add	r3, r2
 8001726:	4a05      	ldr	r2, [pc, #20]	@ (800173c <_sbrk+0x64>)
 8001728:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800172a:	68fb      	ldr	r3, [r7, #12]
}
 800172c:	4618      	mov	r0, r3
 800172e:	3718      	adds	r7, #24
 8001730:	46bd      	mov	sp, r7
 8001732:	bd80      	pop	{r7, pc}
 8001734:	20020000 	.word	0x20020000
 8001738:	00000400 	.word	0x00000400
 800173c:	20000238 	.word	0x20000238
 8001740:	20000388 	.word	0x20000388

08001744 <bcd_to_decimal>:
#include "utils.h"

uint8_t bcd_to_decimal(uint8_t bcd)
{
 8001744:	b480      	push	{r7}
 8001746:	b083      	sub	sp, #12
 8001748:	af00      	add	r7, sp, #0
 800174a:	4603      	mov	r3, r0
 800174c:	71fb      	strb	r3, [r7, #7]
	return (((bcd >> 4) * 10) + (bcd & 0x0F));
 800174e:	79fb      	ldrb	r3, [r7, #7]
 8001750:	091b      	lsrs	r3, r3, #4
 8001752:	b2db      	uxtb	r3, r3
 8001754:	461a      	mov	r2, r3
 8001756:	0092      	lsls	r2, r2, #2
 8001758:	4413      	add	r3, r2
 800175a:	005b      	lsls	r3, r3, #1
 800175c:	b2da      	uxtb	r2, r3
 800175e:	79fb      	ldrb	r3, [r7, #7]
 8001760:	f003 030f 	and.w	r3, r3, #15
 8001764:	b2db      	uxtb	r3, r3
 8001766:	4413      	add	r3, r2
 8001768:	b2db      	uxtb	r3, r3
}
 800176a:	4618      	mov	r0, r3
 800176c:	370c      	adds	r7, #12
 800176e:	46bd      	mov	sp, r7
 8001770:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001774:	4770      	bx	lr
	...

08001778 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001778:	480d      	ldr	r0, [pc, #52]	@ (80017b0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800177a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800177c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8001780:	480c      	ldr	r0, [pc, #48]	@ (80017b4 <LoopForever+0x6>)
  ldr r1, =_edata
 8001782:	490d      	ldr	r1, [pc, #52]	@ (80017b8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001784:	4a0d      	ldr	r2, [pc, #52]	@ (80017bc <LoopForever+0xe>)
  movs r3, #0
 8001786:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001788:	e002      	b.n	8001790 <LoopCopyDataInit>

0800178a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800178a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800178c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800178e:	3304      	adds	r3, #4

08001790 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001790:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001792:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001794:	d3f9      	bcc.n	800178a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001796:	4a0a      	ldr	r2, [pc, #40]	@ (80017c0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001798:	4c0a      	ldr	r4, [pc, #40]	@ (80017c4 <LoopForever+0x16>)
  movs r3, #0
 800179a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800179c:	e001      	b.n	80017a2 <LoopFillZerobss>

0800179e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800179e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80017a0:	3204      	adds	r2, #4

080017a2 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80017a2:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80017a4:	d3fb      	bcc.n	800179e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80017a6:	f000 fdf9 	bl	800239c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80017aa:	f7ff fdf5 	bl	8001398 <main>

080017ae <LoopForever>:

LoopForever:
  b LoopForever
 80017ae:	e7fe      	b.n	80017ae <LoopForever>
  ldr   r0, =_estack
 80017b0:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80017b4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80017b8:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 80017bc:	08004a98 	.word	0x08004a98
  ldr r2, =_sbss
 80017c0:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 80017c4:	20000388 	.word	0x20000388

080017c8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80017c8:	e7fe      	b.n	80017c8 <ADC_IRQHandler>

080017ca <__cvt>:
 80017ca:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80017ce:	ec57 6b10 	vmov	r6, r7, d0
 80017d2:	2f00      	cmp	r7, #0
 80017d4:	460c      	mov	r4, r1
 80017d6:	4619      	mov	r1, r3
 80017d8:	463b      	mov	r3, r7
 80017da:	bfbb      	ittet	lt
 80017dc:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 80017e0:	461f      	movlt	r7, r3
 80017e2:	2300      	movge	r3, #0
 80017e4:	232d      	movlt	r3, #45	@ 0x2d
 80017e6:	700b      	strb	r3, [r1, #0]
 80017e8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80017ea:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 80017ee:	4691      	mov	r9, r2
 80017f0:	f023 0820 	bic.w	r8, r3, #32
 80017f4:	bfbc      	itt	lt
 80017f6:	4632      	movlt	r2, r6
 80017f8:	4616      	movlt	r6, r2
 80017fa:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80017fe:	d005      	beq.n	800180c <__cvt+0x42>
 8001800:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001804:	d100      	bne.n	8001808 <__cvt+0x3e>
 8001806:	3401      	adds	r4, #1
 8001808:	2102      	movs	r1, #2
 800180a:	e000      	b.n	800180e <__cvt+0x44>
 800180c:	2103      	movs	r1, #3
 800180e:	ab03      	add	r3, sp, #12
 8001810:	9301      	str	r3, [sp, #4]
 8001812:	ab02      	add	r3, sp, #8
 8001814:	9300      	str	r3, [sp, #0]
 8001816:	ec47 6b10 	vmov	d0, r6, r7
 800181a:	4653      	mov	r3, sl
 800181c:	4622      	mov	r2, r4
 800181e:	f000 fe6f 	bl	8002500 <_dtoa_r>
 8001822:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001826:	4605      	mov	r5, r0
 8001828:	d119      	bne.n	800185e <__cvt+0x94>
 800182a:	f019 0f01 	tst.w	r9, #1
 800182e:	d00e      	beq.n	800184e <__cvt+0x84>
 8001830:	eb00 0904 	add.w	r9, r0, r4
 8001834:	2200      	movs	r2, #0
 8001836:	2300      	movs	r3, #0
 8001838:	4630      	mov	r0, r6
 800183a:	4639      	mov	r1, r7
 800183c:	f7ff f964 	bl	8000b08 <__aeabi_dcmpeq>
 8001840:	b108      	cbz	r0, 8001846 <__cvt+0x7c>
 8001842:	f8cd 900c 	str.w	r9, [sp, #12]
 8001846:	2230      	movs	r2, #48	@ 0x30
 8001848:	9b03      	ldr	r3, [sp, #12]
 800184a:	454b      	cmp	r3, r9
 800184c:	d31e      	bcc.n	800188c <__cvt+0xc2>
 800184e:	9b03      	ldr	r3, [sp, #12]
 8001850:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8001852:	1b5b      	subs	r3, r3, r5
 8001854:	4628      	mov	r0, r5
 8001856:	6013      	str	r3, [r2, #0]
 8001858:	b004      	add	sp, #16
 800185a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800185e:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001862:	eb00 0904 	add.w	r9, r0, r4
 8001866:	d1e5      	bne.n	8001834 <__cvt+0x6a>
 8001868:	7803      	ldrb	r3, [r0, #0]
 800186a:	2b30      	cmp	r3, #48	@ 0x30
 800186c:	d10a      	bne.n	8001884 <__cvt+0xba>
 800186e:	2200      	movs	r2, #0
 8001870:	2300      	movs	r3, #0
 8001872:	4630      	mov	r0, r6
 8001874:	4639      	mov	r1, r7
 8001876:	f7ff f947 	bl	8000b08 <__aeabi_dcmpeq>
 800187a:	b918      	cbnz	r0, 8001884 <__cvt+0xba>
 800187c:	f1c4 0401 	rsb	r4, r4, #1
 8001880:	f8ca 4000 	str.w	r4, [sl]
 8001884:	f8da 3000 	ldr.w	r3, [sl]
 8001888:	4499      	add	r9, r3
 800188a:	e7d3      	b.n	8001834 <__cvt+0x6a>
 800188c:	1c59      	adds	r1, r3, #1
 800188e:	9103      	str	r1, [sp, #12]
 8001890:	701a      	strb	r2, [r3, #0]
 8001892:	e7d9      	b.n	8001848 <__cvt+0x7e>

08001894 <__exponent>:
 8001894:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001896:	2900      	cmp	r1, #0
 8001898:	bfba      	itte	lt
 800189a:	4249      	neglt	r1, r1
 800189c:	232d      	movlt	r3, #45	@ 0x2d
 800189e:	232b      	movge	r3, #43	@ 0x2b
 80018a0:	2909      	cmp	r1, #9
 80018a2:	7002      	strb	r2, [r0, #0]
 80018a4:	7043      	strb	r3, [r0, #1]
 80018a6:	dd29      	ble.n	80018fc <__exponent+0x68>
 80018a8:	f10d 0307 	add.w	r3, sp, #7
 80018ac:	461d      	mov	r5, r3
 80018ae:	270a      	movs	r7, #10
 80018b0:	461a      	mov	r2, r3
 80018b2:	fbb1 f6f7 	udiv	r6, r1, r7
 80018b6:	fb07 1416 	mls	r4, r7, r6, r1
 80018ba:	3430      	adds	r4, #48	@ 0x30
 80018bc:	f802 4c01 	strb.w	r4, [r2, #-1]
 80018c0:	460c      	mov	r4, r1
 80018c2:	2c63      	cmp	r4, #99	@ 0x63
 80018c4:	f103 33ff 	add.w	r3, r3, #4294967295
 80018c8:	4631      	mov	r1, r6
 80018ca:	dcf1      	bgt.n	80018b0 <__exponent+0x1c>
 80018cc:	3130      	adds	r1, #48	@ 0x30
 80018ce:	1e94      	subs	r4, r2, #2
 80018d0:	f803 1c01 	strb.w	r1, [r3, #-1]
 80018d4:	1c41      	adds	r1, r0, #1
 80018d6:	4623      	mov	r3, r4
 80018d8:	42ab      	cmp	r3, r5
 80018da:	d30a      	bcc.n	80018f2 <__exponent+0x5e>
 80018dc:	f10d 0309 	add.w	r3, sp, #9
 80018e0:	1a9b      	subs	r3, r3, r2
 80018e2:	42ac      	cmp	r4, r5
 80018e4:	bf88      	it	hi
 80018e6:	2300      	movhi	r3, #0
 80018e8:	3302      	adds	r3, #2
 80018ea:	4403      	add	r3, r0
 80018ec:	1a18      	subs	r0, r3, r0
 80018ee:	b003      	add	sp, #12
 80018f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80018f2:	f813 6b01 	ldrb.w	r6, [r3], #1
 80018f6:	f801 6f01 	strb.w	r6, [r1, #1]!
 80018fa:	e7ed      	b.n	80018d8 <__exponent+0x44>
 80018fc:	2330      	movs	r3, #48	@ 0x30
 80018fe:	3130      	adds	r1, #48	@ 0x30
 8001900:	7083      	strb	r3, [r0, #2]
 8001902:	70c1      	strb	r1, [r0, #3]
 8001904:	1d03      	adds	r3, r0, #4
 8001906:	e7f1      	b.n	80018ec <__exponent+0x58>

08001908 <_printf_float>:
 8001908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800190c:	b08d      	sub	sp, #52	@ 0x34
 800190e:	460c      	mov	r4, r1
 8001910:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001914:	4616      	mov	r6, r2
 8001916:	461f      	mov	r7, r3
 8001918:	4605      	mov	r5, r0
 800191a:	f000 fcef 	bl	80022fc <_localeconv_r>
 800191e:	6803      	ldr	r3, [r0, #0]
 8001920:	9304      	str	r3, [sp, #16]
 8001922:	4618      	mov	r0, r3
 8001924:	f7fe fcc4 	bl	80002b0 <strlen>
 8001928:	2300      	movs	r3, #0
 800192a:	930a      	str	r3, [sp, #40]	@ 0x28
 800192c:	f8d8 3000 	ldr.w	r3, [r8]
 8001930:	9005      	str	r0, [sp, #20]
 8001932:	3307      	adds	r3, #7
 8001934:	f023 0307 	bic.w	r3, r3, #7
 8001938:	f103 0208 	add.w	r2, r3, #8
 800193c:	f894 a018 	ldrb.w	sl, [r4, #24]
 8001940:	f8d4 b000 	ldr.w	fp, [r4]
 8001944:	f8c8 2000 	str.w	r2, [r8]
 8001948:	e9d3 8900 	ldrd	r8, r9, [r3]
 800194c:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8001950:	9307      	str	r3, [sp, #28]
 8001952:	f8cd 8018 	str.w	r8, [sp, #24]
 8001956:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 800195a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800195e:	4b9c      	ldr	r3, [pc, #624]	@ (8001bd0 <_printf_float+0x2c8>)
 8001960:	f04f 32ff 	mov.w	r2, #4294967295
 8001964:	f7ff f902 	bl	8000b6c <__aeabi_dcmpun>
 8001968:	bb70      	cbnz	r0, 80019c8 <_printf_float+0xc0>
 800196a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800196e:	4b98      	ldr	r3, [pc, #608]	@ (8001bd0 <_printf_float+0x2c8>)
 8001970:	f04f 32ff 	mov.w	r2, #4294967295
 8001974:	f7ff f8dc 	bl	8000b30 <__aeabi_dcmple>
 8001978:	bb30      	cbnz	r0, 80019c8 <_printf_float+0xc0>
 800197a:	2200      	movs	r2, #0
 800197c:	2300      	movs	r3, #0
 800197e:	4640      	mov	r0, r8
 8001980:	4649      	mov	r1, r9
 8001982:	f7ff f8cb 	bl	8000b1c <__aeabi_dcmplt>
 8001986:	b110      	cbz	r0, 800198e <_printf_float+0x86>
 8001988:	232d      	movs	r3, #45	@ 0x2d
 800198a:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800198e:	4a91      	ldr	r2, [pc, #580]	@ (8001bd4 <_printf_float+0x2cc>)
 8001990:	4b91      	ldr	r3, [pc, #580]	@ (8001bd8 <_printf_float+0x2d0>)
 8001992:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001996:	bf94      	ite	ls
 8001998:	4690      	movls	r8, r2
 800199a:	4698      	movhi	r8, r3
 800199c:	2303      	movs	r3, #3
 800199e:	6123      	str	r3, [r4, #16]
 80019a0:	f02b 0304 	bic.w	r3, fp, #4
 80019a4:	6023      	str	r3, [r4, #0]
 80019a6:	f04f 0900 	mov.w	r9, #0
 80019aa:	9700      	str	r7, [sp, #0]
 80019ac:	4633      	mov	r3, r6
 80019ae:	aa0b      	add	r2, sp, #44	@ 0x2c
 80019b0:	4621      	mov	r1, r4
 80019b2:	4628      	mov	r0, r5
 80019b4:	f000 f9d2 	bl	8001d5c <_printf_common>
 80019b8:	3001      	adds	r0, #1
 80019ba:	f040 808d 	bne.w	8001ad8 <_printf_float+0x1d0>
 80019be:	f04f 30ff 	mov.w	r0, #4294967295
 80019c2:	b00d      	add	sp, #52	@ 0x34
 80019c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80019c8:	4642      	mov	r2, r8
 80019ca:	464b      	mov	r3, r9
 80019cc:	4640      	mov	r0, r8
 80019ce:	4649      	mov	r1, r9
 80019d0:	f7ff f8cc 	bl	8000b6c <__aeabi_dcmpun>
 80019d4:	b140      	cbz	r0, 80019e8 <_printf_float+0xe0>
 80019d6:	464b      	mov	r3, r9
 80019d8:	2b00      	cmp	r3, #0
 80019da:	bfbc      	itt	lt
 80019dc:	232d      	movlt	r3, #45	@ 0x2d
 80019de:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80019e2:	4a7e      	ldr	r2, [pc, #504]	@ (8001bdc <_printf_float+0x2d4>)
 80019e4:	4b7e      	ldr	r3, [pc, #504]	@ (8001be0 <_printf_float+0x2d8>)
 80019e6:	e7d4      	b.n	8001992 <_printf_float+0x8a>
 80019e8:	6863      	ldr	r3, [r4, #4]
 80019ea:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 80019ee:	9206      	str	r2, [sp, #24]
 80019f0:	1c5a      	adds	r2, r3, #1
 80019f2:	d13b      	bne.n	8001a6c <_printf_float+0x164>
 80019f4:	2306      	movs	r3, #6
 80019f6:	6063      	str	r3, [r4, #4]
 80019f8:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 80019fc:	2300      	movs	r3, #0
 80019fe:	6022      	str	r2, [r4, #0]
 8001a00:	9303      	str	r3, [sp, #12]
 8001a02:	ab0a      	add	r3, sp, #40	@ 0x28
 8001a04:	e9cd a301 	strd	sl, r3, [sp, #4]
 8001a08:	ab09      	add	r3, sp, #36	@ 0x24
 8001a0a:	9300      	str	r3, [sp, #0]
 8001a0c:	6861      	ldr	r1, [r4, #4]
 8001a0e:	ec49 8b10 	vmov	d0, r8, r9
 8001a12:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8001a16:	4628      	mov	r0, r5
 8001a18:	f7ff fed7 	bl	80017ca <__cvt>
 8001a1c:	9b06      	ldr	r3, [sp, #24]
 8001a1e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8001a20:	2b47      	cmp	r3, #71	@ 0x47
 8001a22:	4680      	mov	r8, r0
 8001a24:	d129      	bne.n	8001a7a <_printf_float+0x172>
 8001a26:	1cc8      	adds	r0, r1, #3
 8001a28:	db02      	blt.n	8001a30 <_printf_float+0x128>
 8001a2a:	6863      	ldr	r3, [r4, #4]
 8001a2c:	4299      	cmp	r1, r3
 8001a2e:	dd41      	ble.n	8001ab4 <_printf_float+0x1ac>
 8001a30:	f1aa 0a02 	sub.w	sl, sl, #2
 8001a34:	fa5f fa8a 	uxtb.w	sl, sl
 8001a38:	3901      	subs	r1, #1
 8001a3a:	4652      	mov	r2, sl
 8001a3c:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8001a40:	9109      	str	r1, [sp, #36]	@ 0x24
 8001a42:	f7ff ff27 	bl	8001894 <__exponent>
 8001a46:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001a48:	1813      	adds	r3, r2, r0
 8001a4a:	2a01      	cmp	r2, #1
 8001a4c:	4681      	mov	r9, r0
 8001a4e:	6123      	str	r3, [r4, #16]
 8001a50:	dc02      	bgt.n	8001a58 <_printf_float+0x150>
 8001a52:	6822      	ldr	r2, [r4, #0]
 8001a54:	07d2      	lsls	r2, r2, #31
 8001a56:	d501      	bpl.n	8001a5c <_printf_float+0x154>
 8001a58:	3301      	adds	r3, #1
 8001a5a:	6123      	str	r3, [r4, #16]
 8001a5c:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8001a60:	2b00      	cmp	r3, #0
 8001a62:	d0a2      	beq.n	80019aa <_printf_float+0xa2>
 8001a64:	232d      	movs	r3, #45	@ 0x2d
 8001a66:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001a6a:	e79e      	b.n	80019aa <_printf_float+0xa2>
 8001a6c:	9a06      	ldr	r2, [sp, #24]
 8001a6e:	2a47      	cmp	r2, #71	@ 0x47
 8001a70:	d1c2      	bne.n	80019f8 <_printf_float+0xf0>
 8001a72:	2b00      	cmp	r3, #0
 8001a74:	d1c0      	bne.n	80019f8 <_printf_float+0xf0>
 8001a76:	2301      	movs	r3, #1
 8001a78:	e7bd      	b.n	80019f6 <_printf_float+0xee>
 8001a7a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001a7e:	d9db      	bls.n	8001a38 <_printf_float+0x130>
 8001a80:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001a84:	d118      	bne.n	8001ab8 <_printf_float+0x1b0>
 8001a86:	2900      	cmp	r1, #0
 8001a88:	6863      	ldr	r3, [r4, #4]
 8001a8a:	dd0b      	ble.n	8001aa4 <_printf_float+0x19c>
 8001a8c:	6121      	str	r1, [r4, #16]
 8001a8e:	b913      	cbnz	r3, 8001a96 <_printf_float+0x18e>
 8001a90:	6822      	ldr	r2, [r4, #0]
 8001a92:	07d0      	lsls	r0, r2, #31
 8001a94:	d502      	bpl.n	8001a9c <_printf_float+0x194>
 8001a96:	3301      	adds	r3, #1
 8001a98:	440b      	add	r3, r1
 8001a9a:	6123      	str	r3, [r4, #16]
 8001a9c:	65a1      	str	r1, [r4, #88]	@ 0x58
 8001a9e:	f04f 0900 	mov.w	r9, #0
 8001aa2:	e7db      	b.n	8001a5c <_printf_float+0x154>
 8001aa4:	b913      	cbnz	r3, 8001aac <_printf_float+0x1a4>
 8001aa6:	6822      	ldr	r2, [r4, #0]
 8001aa8:	07d2      	lsls	r2, r2, #31
 8001aaa:	d501      	bpl.n	8001ab0 <_printf_float+0x1a8>
 8001aac:	3302      	adds	r3, #2
 8001aae:	e7f4      	b.n	8001a9a <_printf_float+0x192>
 8001ab0:	2301      	movs	r3, #1
 8001ab2:	e7f2      	b.n	8001a9a <_printf_float+0x192>
 8001ab4:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8001ab8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8001aba:	4299      	cmp	r1, r3
 8001abc:	db05      	blt.n	8001aca <_printf_float+0x1c2>
 8001abe:	6823      	ldr	r3, [r4, #0]
 8001ac0:	6121      	str	r1, [r4, #16]
 8001ac2:	07d8      	lsls	r0, r3, #31
 8001ac4:	d5ea      	bpl.n	8001a9c <_printf_float+0x194>
 8001ac6:	1c4b      	adds	r3, r1, #1
 8001ac8:	e7e7      	b.n	8001a9a <_printf_float+0x192>
 8001aca:	2900      	cmp	r1, #0
 8001acc:	bfd4      	ite	le
 8001ace:	f1c1 0202 	rsble	r2, r1, #2
 8001ad2:	2201      	movgt	r2, #1
 8001ad4:	4413      	add	r3, r2
 8001ad6:	e7e0      	b.n	8001a9a <_printf_float+0x192>
 8001ad8:	6823      	ldr	r3, [r4, #0]
 8001ada:	055a      	lsls	r2, r3, #21
 8001adc:	d407      	bmi.n	8001aee <_printf_float+0x1e6>
 8001ade:	6923      	ldr	r3, [r4, #16]
 8001ae0:	4642      	mov	r2, r8
 8001ae2:	4631      	mov	r1, r6
 8001ae4:	4628      	mov	r0, r5
 8001ae6:	47b8      	blx	r7
 8001ae8:	3001      	adds	r0, #1
 8001aea:	d12b      	bne.n	8001b44 <_printf_float+0x23c>
 8001aec:	e767      	b.n	80019be <_printf_float+0xb6>
 8001aee:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8001af2:	f240 80dd 	bls.w	8001cb0 <_printf_float+0x3a8>
 8001af6:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001afa:	2200      	movs	r2, #0
 8001afc:	2300      	movs	r3, #0
 8001afe:	f7ff f803 	bl	8000b08 <__aeabi_dcmpeq>
 8001b02:	2800      	cmp	r0, #0
 8001b04:	d033      	beq.n	8001b6e <_printf_float+0x266>
 8001b06:	4a37      	ldr	r2, [pc, #220]	@ (8001be4 <_printf_float+0x2dc>)
 8001b08:	2301      	movs	r3, #1
 8001b0a:	4631      	mov	r1, r6
 8001b0c:	4628      	mov	r0, r5
 8001b0e:	47b8      	blx	r7
 8001b10:	3001      	adds	r0, #1
 8001b12:	f43f af54 	beq.w	80019be <_printf_float+0xb6>
 8001b16:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8001b1a:	4543      	cmp	r3, r8
 8001b1c:	db02      	blt.n	8001b24 <_printf_float+0x21c>
 8001b1e:	6823      	ldr	r3, [r4, #0]
 8001b20:	07d8      	lsls	r0, r3, #31
 8001b22:	d50f      	bpl.n	8001b44 <_printf_float+0x23c>
 8001b24:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001b28:	4631      	mov	r1, r6
 8001b2a:	4628      	mov	r0, r5
 8001b2c:	47b8      	blx	r7
 8001b2e:	3001      	adds	r0, #1
 8001b30:	f43f af45 	beq.w	80019be <_printf_float+0xb6>
 8001b34:	f04f 0900 	mov.w	r9, #0
 8001b38:	f108 38ff 	add.w	r8, r8, #4294967295
 8001b3c:	f104 0a1a 	add.w	sl, r4, #26
 8001b40:	45c8      	cmp	r8, r9
 8001b42:	dc09      	bgt.n	8001b58 <_printf_float+0x250>
 8001b44:	6823      	ldr	r3, [r4, #0]
 8001b46:	079b      	lsls	r3, r3, #30
 8001b48:	f100 8103 	bmi.w	8001d52 <_printf_float+0x44a>
 8001b4c:	68e0      	ldr	r0, [r4, #12]
 8001b4e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8001b50:	4298      	cmp	r0, r3
 8001b52:	bfb8      	it	lt
 8001b54:	4618      	movlt	r0, r3
 8001b56:	e734      	b.n	80019c2 <_printf_float+0xba>
 8001b58:	2301      	movs	r3, #1
 8001b5a:	4652      	mov	r2, sl
 8001b5c:	4631      	mov	r1, r6
 8001b5e:	4628      	mov	r0, r5
 8001b60:	47b8      	blx	r7
 8001b62:	3001      	adds	r0, #1
 8001b64:	f43f af2b 	beq.w	80019be <_printf_float+0xb6>
 8001b68:	f109 0901 	add.w	r9, r9, #1
 8001b6c:	e7e8      	b.n	8001b40 <_printf_float+0x238>
 8001b6e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001b70:	2b00      	cmp	r3, #0
 8001b72:	dc39      	bgt.n	8001be8 <_printf_float+0x2e0>
 8001b74:	4a1b      	ldr	r2, [pc, #108]	@ (8001be4 <_printf_float+0x2dc>)
 8001b76:	2301      	movs	r3, #1
 8001b78:	4631      	mov	r1, r6
 8001b7a:	4628      	mov	r0, r5
 8001b7c:	47b8      	blx	r7
 8001b7e:	3001      	adds	r0, #1
 8001b80:	f43f af1d 	beq.w	80019be <_printf_float+0xb6>
 8001b84:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8001b88:	ea59 0303 	orrs.w	r3, r9, r3
 8001b8c:	d102      	bne.n	8001b94 <_printf_float+0x28c>
 8001b8e:	6823      	ldr	r3, [r4, #0]
 8001b90:	07d9      	lsls	r1, r3, #31
 8001b92:	d5d7      	bpl.n	8001b44 <_printf_float+0x23c>
 8001b94:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001b98:	4631      	mov	r1, r6
 8001b9a:	4628      	mov	r0, r5
 8001b9c:	47b8      	blx	r7
 8001b9e:	3001      	adds	r0, #1
 8001ba0:	f43f af0d 	beq.w	80019be <_printf_float+0xb6>
 8001ba4:	f04f 0a00 	mov.w	sl, #0
 8001ba8:	f104 0b1a 	add.w	fp, r4, #26
 8001bac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001bae:	425b      	negs	r3, r3
 8001bb0:	4553      	cmp	r3, sl
 8001bb2:	dc01      	bgt.n	8001bb8 <_printf_float+0x2b0>
 8001bb4:	464b      	mov	r3, r9
 8001bb6:	e793      	b.n	8001ae0 <_printf_float+0x1d8>
 8001bb8:	2301      	movs	r3, #1
 8001bba:	465a      	mov	r2, fp
 8001bbc:	4631      	mov	r1, r6
 8001bbe:	4628      	mov	r0, r5
 8001bc0:	47b8      	blx	r7
 8001bc2:	3001      	adds	r0, #1
 8001bc4:	f43f aefb 	beq.w	80019be <_printf_float+0xb6>
 8001bc8:	f10a 0a01 	add.w	sl, sl, #1
 8001bcc:	e7ee      	b.n	8001bac <_printf_float+0x2a4>
 8001bce:	bf00      	nop
 8001bd0:	7fefffff 	.word	0x7fefffff
 8001bd4:	08004717 	.word	0x08004717
 8001bd8:	0800471b 	.word	0x0800471b
 8001bdc:	0800471f 	.word	0x0800471f
 8001be0:	08004723 	.word	0x08004723
 8001be4:	08004727 	.word	0x08004727
 8001be8:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001bea:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001bee:	4553      	cmp	r3, sl
 8001bf0:	bfa8      	it	ge
 8001bf2:	4653      	movge	r3, sl
 8001bf4:	2b00      	cmp	r3, #0
 8001bf6:	4699      	mov	r9, r3
 8001bf8:	dc36      	bgt.n	8001c68 <_printf_float+0x360>
 8001bfa:	f04f 0b00 	mov.w	fp, #0
 8001bfe:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001c02:	f104 021a 	add.w	r2, r4, #26
 8001c06:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001c08:	9306      	str	r3, [sp, #24]
 8001c0a:	eba3 0309 	sub.w	r3, r3, r9
 8001c0e:	455b      	cmp	r3, fp
 8001c10:	dc31      	bgt.n	8001c76 <_printf_float+0x36e>
 8001c12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001c14:	459a      	cmp	sl, r3
 8001c16:	dc3a      	bgt.n	8001c8e <_printf_float+0x386>
 8001c18:	6823      	ldr	r3, [r4, #0]
 8001c1a:	07da      	lsls	r2, r3, #31
 8001c1c:	d437      	bmi.n	8001c8e <_printf_float+0x386>
 8001c1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001c20:	ebaa 0903 	sub.w	r9, sl, r3
 8001c24:	9b06      	ldr	r3, [sp, #24]
 8001c26:	ebaa 0303 	sub.w	r3, sl, r3
 8001c2a:	4599      	cmp	r9, r3
 8001c2c:	bfa8      	it	ge
 8001c2e:	4699      	movge	r9, r3
 8001c30:	f1b9 0f00 	cmp.w	r9, #0
 8001c34:	dc33      	bgt.n	8001c9e <_printf_float+0x396>
 8001c36:	f04f 0800 	mov.w	r8, #0
 8001c3a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001c3e:	f104 0b1a 	add.w	fp, r4, #26
 8001c42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001c44:	ebaa 0303 	sub.w	r3, sl, r3
 8001c48:	eba3 0309 	sub.w	r3, r3, r9
 8001c4c:	4543      	cmp	r3, r8
 8001c4e:	f77f af79 	ble.w	8001b44 <_printf_float+0x23c>
 8001c52:	2301      	movs	r3, #1
 8001c54:	465a      	mov	r2, fp
 8001c56:	4631      	mov	r1, r6
 8001c58:	4628      	mov	r0, r5
 8001c5a:	47b8      	blx	r7
 8001c5c:	3001      	adds	r0, #1
 8001c5e:	f43f aeae 	beq.w	80019be <_printf_float+0xb6>
 8001c62:	f108 0801 	add.w	r8, r8, #1
 8001c66:	e7ec      	b.n	8001c42 <_printf_float+0x33a>
 8001c68:	4642      	mov	r2, r8
 8001c6a:	4631      	mov	r1, r6
 8001c6c:	4628      	mov	r0, r5
 8001c6e:	47b8      	blx	r7
 8001c70:	3001      	adds	r0, #1
 8001c72:	d1c2      	bne.n	8001bfa <_printf_float+0x2f2>
 8001c74:	e6a3      	b.n	80019be <_printf_float+0xb6>
 8001c76:	2301      	movs	r3, #1
 8001c78:	4631      	mov	r1, r6
 8001c7a:	4628      	mov	r0, r5
 8001c7c:	9206      	str	r2, [sp, #24]
 8001c7e:	47b8      	blx	r7
 8001c80:	3001      	adds	r0, #1
 8001c82:	f43f ae9c 	beq.w	80019be <_printf_float+0xb6>
 8001c86:	9a06      	ldr	r2, [sp, #24]
 8001c88:	f10b 0b01 	add.w	fp, fp, #1
 8001c8c:	e7bb      	b.n	8001c06 <_printf_float+0x2fe>
 8001c8e:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001c92:	4631      	mov	r1, r6
 8001c94:	4628      	mov	r0, r5
 8001c96:	47b8      	blx	r7
 8001c98:	3001      	adds	r0, #1
 8001c9a:	d1c0      	bne.n	8001c1e <_printf_float+0x316>
 8001c9c:	e68f      	b.n	80019be <_printf_float+0xb6>
 8001c9e:	9a06      	ldr	r2, [sp, #24]
 8001ca0:	464b      	mov	r3, r9
 8001ca2:	4442      	add	r2, r8
 8001ca4:	4631      	mov	r1, r6
 8001ca6:	4628      	mov	r0, r5
 8001ca8:	47b8      	blx	r7
 8001caa:	3001      	adds	r0, #1
 8001cac:	d1c3      	bne.n	8001c36 <_printf_float+0x32e>
 8001cae:	e686      	b.n	80019be <_printf_float+0xb6>
 8001cb0:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001cb4:	f1ba 0f01 	cmp.w	sl, #1
 8001cb8:	dc01      	bgt.n	8001cbe <_printf_float+0x3b6>
 8001cba:	07db      	lsls	r3, r3, #31
 8001cbc:	d536      	bpl.n	8001d2c <_printf_float+0x424>
 8001cbe:	2301      	movs	r3, #1
 8001cc0:	4642      	mov	r2, r8
 8001cc2:	4631      	mov	r1, r6
 8001cc4:	4628      	mov	r0, r5
 8001cc6:	47b8      	blx	r7
 8001cc8:	3001      	adds	r0, #1
 8001cca:	f43f ae78 	beq.w	80019be <_printf_float+0xb6>
 8001cce:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001cd2:	4631      	mov	r1, r6
 8001cd4:	4628      	mov	r0, r5
 8001cd6:	47b8      	blx	r7
 8001cd8:	3001      	adds	r0, #1
 8001cda:	f43f ae70 	beq.w	80019be <_printf_float+0xb6>
 8001cde:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001ce2:	2200      	movs	r2, #0
 8001ce4:	2300      	movs	r3, #0
 8001ce6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8001cea:	f7fe ff0d 	bl	8000b08 <__aeabi_dcmpeq>
 8001cee:	b9c0      	cbnz	r0, 8001d22 <_printf_float+0x41a>
 8001cf0:	4653      	mov	r3, sl
 8001cf2:	f108 0201 	add.w	r2, r8, #1
 8001cf6:	4631      	mov	r1, r6
 8001cf8:	4628      	mov	r0, r5
 8001cfa:	47b8      	blx	r7
 8001cfc:	3001      	adds	r0, #1
 8001cfe:	d10c      	bne.n	8001d1a <_printf_float+0x412>
 8001d00:	e65d      	b.n	80019be <_printf_float+0xb6>
 8001d02:	2301      	movs	r3, #1
 8001d04:	465a      	mov	r2, fp
 8001d06:	4631      	mov	r1, r6
 8001d08:	4628      	mov	r0, r5
 8001d0a:	47b8      	blx	r7
 8001d0c:	3001      	adds	r0, #1
 8001d0e:	f43f ae56 	beq.w	80019be <_printf_float+0xb6>
 8001d12:	f108 0801 	add.w	r8, r8, #1
 8001d16:	45d0      	cmp	r8, sl
 8001d18:	dbf3      	blt.n	8001d02 <_printf_float+0x3fa>
 8001d1a:	464b      	mov	r3, r9
 8001d1c:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001d20:	e6df      	b.n	8001ae2 <_printf_float+0x1da>
 8001d22:	f04f 0800 	mov.w	r8, #0
 8001d26:	f104 0b1a 	add.w	fp, r4, #26
 8001d2a:	e7f4      	b.n	8001d16 <_printf_float+0x40e>
 8001d2c:	2301      	movs	r3, #1
 8001d2e:	4642      	mov	r2, r8
 8001d30:	e7e1      	b.n	8001cf6 <_printf_float+0x3ee>
 8001d32:	2301      	movs	r3, #1
 8001d34:	464a      	mov	r2, r9
 8001d36:	4631      	mov	r1, r6
 8001d38:	4628      	mov	r0, r5
 8001d3a:	47b8      	blx	r7
 8001d3c:	3001      	adds	r0, #1
 8001d3e:	f43f ae3e 	beq.w	80019be <_printf_float+0xb6>
 8001d42:	f108 0801 	add.w	r8, r8, #1
 8001d46:	68e3      	ldr	r3, [r4, #12]
 8001d48:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8001d4a:	1a5b      	subs	r3, r3, r1
 8001d4c:	4543      	cmp	r3, r8
 8001d4e:	dcf0      	bgt.n	8001d32 <_printf_float+0x42a>
 8001d50:	e6fc      	b.n	8001b4c <_printf_float+0x244>
 8001d52:	f04f 0800 	mov.w	r8, #0
 8001d56:	f104 0919 	add.w	r9, r4, #25
 8001d5a:	e7f4      	b.n	8001d46 <_printf_float+0x43e>

08001d5c <_printf_common>:
 8001d5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001d60:	4616      	mov	r6, r2
 8001d62:	4698      	mov	r8, r3
 8001d64:	688a      	ldr	r2, [r1, #8]
 8001d66:	690b      	ldr	r3, [r1, #16]
 8001d68:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001d6c:	4293      	cmp	r3, r2
 8001d6e:	bfb8      	it	lt
 8001d70:	4613      	movlt	r3, r2
 8001d72:	6033      	str	r3, [r6, #0]
 8001d74:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001d78:	4607      	mov	r7, r0
 8001d7a:	460c      	mov	r4, r1
 8001d7c:	b10a      	cbz	r2, 8001d82 <_printf_common+0x26>
 8001d7e:	3301      	adds	r3, #1
 8001d80:	6033      	str	r3, [r6, #0]
 8001d82:	6823      	ldr	r3, [r4, #0]
 8001d84:	0699      	lsls	r1, r3, #26
 8001d86:	bf42      	ittt	mi
 8001d88:	6833      	ldrmi	r3, [r6, #0]
 8001d8a:	3302      	addmi	r3, #2
 8001d8c:	6033      	strmi	r3, [r6, #0]
 8001d8e:	6825      	ldr	r5, [r4, #0]
 8001d90:	f015 0506 	ands.w	r5, r5, #6
 8001d94:	d106      	bne.n	8001da4 <_printf_common+0x48>
 8001d96:	f104 0a19 	add.w	sl, r4, #25
 8001d9a:	68e3      	ldr	r3, [r4, #12]
 8001d9c:	6832      	ldr	r2, [r6, #0]
 8001d9e:	1a9b      	subs	r3, r3, r2
 8001da0:	42ab      	cmp	r3, r5
 8001da2:	dc26      	bgt.n	8001df2 <_printf_common+0x96>
 8001da4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001da8:	6822      	ldr	r2, [r4, #0]
 8001daa:	3b00      	subs	r3, #0
 8001dac:	bf18      	it	ne
 8001dae:	2301      	movne	r3, #1
 8001db0:	0692      	lsls	r2, r2, #26
 8001db2:	d42b      	bmi.n	8001e0c <_printf_common+0xb0>
 8001db4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001db8:	4641      	mov	r1, r8
 8001dba:	4638      	mov	r0, r7
 8001dbc:	47c8      	blx	r9
 8001dbe:	3001      	adds	r0, #1
 8001dc0:	d01e      	beq.n	8001e00 <_printf_common+0xa4>
 8001dc2:	6823      	ldr	r3, [r4, #0]
 8001dc4:	6922      	ldr	r2, [r4, #16]
 8001dc6:	f003 0306 	and.w	r3, r3, #6
 8001dca:	2b04      	cmp	r3, #4
 8001dcc:	bf02      	ittt	eq
 8001dce:	68e5      	ldreq	r5, [r4, #12]
 8001dd0:	6833      	ldreq	r3, [r6, #0]
 8001dd2:	1aed      	subeq	r5, r5, r3
 8001dd4:	68a3      	ldr	r3, [r4, #8]
 8001dd6:	bf0c      	ite	eq
 8001dd8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001ddc:	2500      	movne	r5, #0
 8001dde:	4293      	cmp	r3, r2
 8001de0:	bfc4      	itt	gt
 8001de2:	1a9b      	subgt	r3, r3, r2
 8001de4:	18ed      	addgt	r5, r5, r3
 8001de6:	2600      	movs	r6, #0
 8001de8:	341a      	adds	r4, #26
 8001dea:	42b5      	cmp	r5, r6
 8001dec:	d11a      	bne.n	8001e24 <_printf_common+0xc8>
 8001dee:	2000      	movs	r0, #0
 8001df0:	e008      	b.n	8001e04 <_printf_common+0xa8>
 8001df2:	2301      	movs	r3, #1
 8001df4:	4652      	mov	r2, sl
 8001df6:	4641      	mov	r1, r8
 8001df8:	4638      	mov	r0, r7
 8001dfa:	47c8      	blx	r9
 8001dfc:	3001      	adds	r0, #1
 8001dfe:	d103      	bne.n	8001e08 <_printf_common+0xac>
 8001e00:	f04f 30ff 	mov.w	r0, #4294967295
 8001e04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e08:	3501      	adds	r5, #1
 8001e0a:	e7c6      	b.n	8001d9a <_printf_common+0x3e>
 8001e0c:	18e1      	adds	r1, r4, r3
 8001e0e:	1c5a      	adds	r2, r3, #1
 8001e10:	2030      	movs	r0, #48	@ 0x30
 8001e12:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001e16:	4422      	add	r2, r4
 8001e18:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001e1c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001e20:	3302      	adds	r3, #2
 8001e22:	e7c7      	b.n	8001db4 <_printf_common+0x58>
 8001e24:	2301      	movs	r3, #1
 8001e26:	4622      	mov	r2, r4
 8001e28:	4641      	mov	r1, r8
 8001e2a:	4638      	mov	r0, r7
 8001e2c:	47c8      	blx	r9
 8001e2e:	3001      	adds	r0, #1
 8001e30:	d0e6      	beq.n	8001e00 <_printf_common+0xa4>
 8001e32:	3601      	adds	r6, #1
 8001e34:	e7d9      	b.n	8001dea <_printf_common+0x8e>
	...

08001e38 <_printf_i>:
 8001e38:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001e3c:	7e0f      	ldrb	r7, [r1, #24]
 8001e3e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001e40:	2f78      	cmp	r7, #120	@ 0x78
 8001e42:	4691      	mov	r9, r2
 8001e44:	4680      	mov	r8, r0
 8001e46:	460c      	mov	r4, r1
 8001e48:	469a      	mov	sl, r3
 8001e4a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001e4e:	d807      	bhi.n	8001e60 <_printf_i+0x28>
 8001e50:	2f62      	cmp	r7, #98	@ 0x62
 8001e52:	d80a      	bhi.n	8001e6a <_printf_i+0x32>
 8001e54:	2f00      	cmp	r7, #0
 8001e56:	f000 80d2 	beq.w	8001ffe <_printf_i+0x1c6>
 8001e5a:	2f58      	cmp	r7, #88	@ 0x58
 8001e5c:	f000 80b9 	beq.w	8001fd2 <_printf_i+0x19a>
 8001e60:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001e64:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001e68:	e03a      	b.n	8001ee0 <_printf_i+0xa8>
 8001e6a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001e6e:	2b15      	cmp	r3, #21
 8001e70:	d8f6      	bhi.n	8001e60 <_printf_i+0x28>
 8001e72:	a101      	add	r1, pc, #4	@ (adr r1, 8001e78 <_printf_i+0x40>)
 8001e74:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001e78:	08001ed1 	.word	0x08001ed1
 8001e7c:	08001ee5 	.word	0x08001ee5
 8001e80:	08001e61 	.word	0x08001e61
 8001e84:	08001e61 	.word	0x08001e61
 8001e88:	08001e61 	.word	0x08001e61
 8001e8c:	08001e61 	.word	0x08001e61
 8001e90:	08001ee5 	.word	0x08001ee5
 8001e94:	08001e61 	.word	0x08001e61
 8001e98:	08001e61 	.word	0x08001e61
 8001e9c:	08001e61 	.word	0x08001e61
 8001ea0:	08001e61 	.word	0x08001e61
 8001ea4:	08001fe5 	.word	0x08001fe5
 8001ea8:	08001f0f 	.word	0x08001f0f
 8001eac:	08001f9f 	.word	0x08001f9f
 8001eb0:	08001e61 	.word	0x08001e61
 8001eb4:	08001e61 	.word	0x08001e61
 8001eb8:	08002007 	.word	0x08002007
 8001ebc:	08001e61 	.word	0x08001e61
 8001ec0:	08001f0f 	.word	0x08001f0f
 8001ec4:	08001e61 	.word	0x08001e61
 8001ec8:	08001e61 	.word	0x08001e61
 8001ecc:	08001fa7 	.word	0x08001fa7
 8001ed0:	6833      	ldr	r3, [r6, #0]
 8001ed2:	1d1a      	adds	r2, r3, #4
 8001ed4:	681b      	ldr	r3, [r3, #0]
 8001ed6:	6032      	str	r2, [r6, #0]
 8001ed8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001edc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001ee0:	2301      	movs	r3, #1
 8001ee2:	e09d      	b.n	8002020 <_printf_i+0x1e8>
 8001ee4:	6833      	ldr	r3, [r6, #0]
 8001ee6:	6820      	ldr	r0, [r4, #0]
 8001ee8:	1d19      	adds	r1, r3, #4
 8001eea:	6031      	str	r1, [r6, #0]
 8001eec:	0606      	lsls	r6, r0, #24
 8001eee:	d501      	bpl.n	8001ef4 <_printf_i+0xbc>
 8001ef0:	681d      	ldr	r5, [r3, #0]
 8001ef2:	e003      	b.n	8001efc <_printf_i+0xc4>
 8001ef4:	0645      	lsls	r5, r0, #25
 8001ef6:	d5fb      	bpl.n	8001ef0 <_printf_i+0xb8>
 8001ef8:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001efc:	2d00      	cmp	r5, #0
 8001efe:	da03      	bge.n	8001f08 <_printf_i+0xd0>
 8001f00:	232d      	movs	r3, #45	@ 0x2d
 8001f02:	426d      	negs	r5, r5
 8001f04:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001f08:	4859      	ldr	r0, [pc, #356]	@ (8002070 <_printf_i+0x238>)
 8001f0a:	230a      	movs	r3, #10
 8001f0c:	e011      	b.n	8001f32 <_printf_i+0xfa>
 8001f0e:	6821      	ldr	r1, [r4, #0]
 8001f10:	6833      	ldr	r3, [r6, #0]
 8001f12:	0608      	lsls	r0, r1, #24
 8001f14:	f853 5b04 	ldr.w	r5, [r3], #4
 8001f18:	d402      	bmi.n	8001f20 <_printf_i+0xe8>
 8001f1a:	0649      	lsls	r1, r1, #25
 8001f1c:	bf48      	it	mi
 8001f1e:	b2ad      	uxthmi	r5, r5
 8001f20:	2f6f      	cmp	r7, #111	@ 0x6f
 8001f22:	4853      	ldr	r0, [pc, #332]	@ (8002070 <_printf_i+0x238>)
 8001f24:	6033      	str	r3, [r6, #0]
 8001f26:	bf14      	ite	ne
 8001f28:	230a      	movne	r3, #10
 8001f2a:	2308      	moveq	r3, #8
 8001f2c:	2100      	movs	r1, #0
 8001f2e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001f32:	6866      	ldr	r6, [r4, #4]
 8001f34:	60a6      	str	r6, [r4, #8]
 8001f36:	2e00      	cmp	r6, #0
 8001f38:	bfa2      	ittt	ge
 8001f3a:	6821      	ldrge	r1, [r4, #0]
 8001f3c:	f021 0104 	bicge.w	r1, r1, #4
 8001f40:	6021      	strge	r1, [r4, #0]
 8001f42:	b90d      	cbnz	r5, 8001f48 <_printf_i+0x110>
 8001f44:	2e00      	cmp	r6, #0
 8001f46:	d04b      	beq.n	8001fe0 <_printf_i+0x1a8>
 8001f48:	4616      	mov	r6, r2
 8001f4a:	fbb5 f1f3 	udiv	r1, r5, r3
 8001f4e:	fb03 5711 	mls	r7, r3, r1, r5
 8001f52:	5dc7      	ldrb	r7, [r0, r7]
 8001f54:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001f58:	462f      	mov	r7, r5
 8001f5a:	42bb      	cmp	r3, r7
 8001f5c:	460d      	mov	r5, r1
 8001f5e:	d9f4      	bls.n	8001f4a <_printf_i+0x112>
 8001f60:	2b08      	cmp	r3, #8
 8001f62:	d10b      	bne.n	8001f7c <_printf_i+0x144>
 8001f64:	6823      	ldr	r3, [r4, #0]
 8001f66:	07df      	lsls	r7, r3, #31
 8001f68:	d508      	bpl.n	8001f7c <_printf_i+0x144>
 8001f6a:	6923      	ldr	r3, [r4, #16]
 8001f6c:	6861      	ldr	r1, [r4, #4]
 8001f6e:	4299      	cmp	r1, r3
 8001f70:	bfde      	ittt	le
 8001f72:	2330      	movle	r3, #48	@ 0x30
 8001f74:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001f78:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001f7c:	1b92      	subs	r2, r2, r6
 8001f7e:	6122      	str	r2, [r4, #16]
 8001f80:	f8cd a000 	str.w	sl, [sp]
 8001f84:	464b      	mov	r3, r9
 8001f86:	aa03      	add	r2, sp, #12
 8001f88:	4621      	mov	r1, r4
 8001f8a:	4640      	mov	r0, r8
 8001f8c:	f7ff fee6 	bl	8001d5c <_printf_common>
 8001f90:	3001      	adds	r0, #1
 8001f92:	d14a      	bne.n	800202a <_printf_i+0x1f2>
 8001f94:	f04f 30ff 	mov.w	r0, #4294967295
 8001f98:	b004      	add	sp, #16
 8001f9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001f9e:	6823      	ldr	r3, [r4, #0]
 8001fa0:	f043 0320 	orr.w	r3, r3, #32
 8001fa4:	6023      	str	r3, [r4, #0]
 8001fa6:	4833      	ldr	r0, [pc, #204]	@ (8002074 <_printf_i+0x23c>)
 8001fa8:	2778      	movs	r7, #120	@ 0x78
 8001faa:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001fae:	6823      	ldr	r3, [r4, #0]
 8001fb0:	6831      	ldr	r1, [r6, #0]
 8001fb2:	061f      	lsls	r7, r3, #24
 8001fb4:	f851 5b04 	ldr.w	r5, [r1], #4
 8001fb8:	d402      	bmi.n	8001fc0 <_printf_i+0x188>
 8001fba:	065f      	lsls	r7, r3, #25
 8001fbc:	bf48      	it	mi
 8001fbe:	b2ad      	uxthmi	r5, r5
 8001fc0:	6031      	str	r1, [r6, #0]
 8001fc2:	07d9      	lsls	r1, r3, #31
 8001fc4:	bf44      	itt	mi
 8001fc6:	f043 0320 	orrmi.w	r3, r3, #32
 8001fca:	6023      	strmi	r3, [r4, #0]
 8001fcc:	b11d      	cbz	r5, 8001fd6 <_printf_i+0x19e>
 8001fce:	2310      	movs	r3, #16
 8001fd0:	e7ac      	b.n	8001f2c <_printf_i+0xf4>
 8001fd2:	4827      	ldr	r0, [pc, #156]	@ (8002070 <_printf_i+0x238>)
 8001fd4:	e7e9      	b.n	8001faa <_printf_i+0x172>
 8001fd6:	6823      	ldr	r3, [r4, #0]
 8001fd8:	f023 0320 	bic.w	r3, r3, #32
 8001fdc:	6023      	str	r3, [r4, #0]
 8001fde:	e7f6      	b.n	8001fce <_printf_i+0x196>
 8001fe0:	4616      	mov	r6, r2
 8001fe2:	e7bd      	b.n	8001f60 <_printf_i+0x128>
 8001fe4:	6833      	ldr	r3, [r6, #0]
 8001fe6:	6825      	ldr	r5, [r4, #0]
 8001fe8:	6961      	ldr	r1, [r4, #20]
 8001fea:	1d18      	adds	r0, r3, #4
 8001fec:	6030      	str	r0, [r6, #0]
 8001fee:	062e      	lsls	r6, r5, #24
 8001ff0:	681b      	ldr	r3, [r3, #0]
 8001ff2:	d501      	bpl.n	8001ff8 <_printf_i+0x1c0>
 8001ff4:	6019      	str	r1, [r3, #0]
 8001ff6:	e002      	b.n	8001ffe <_printf_i+0x1c6>
 8001ff8:	0668      	lsls	r0, r5, #25
 8001ffa:	d5fb      	bpl.n	8001ff4 <_printf_i+0x1bc>
 8001ffc:	8019      	strh	r1, [r3, #0]
 8001ffe:	2300      	movs	r3, #0
 8002000:	6123      	str	r3, [r4, #16]
 8002002:	4616      	mov	r6, r2
 8002004:	e7bc      	b.n	8001f80 <_printf_i+0x148>
 8002006:	6833      	ldr	r3, [r6, #0]
 8002008:	1d1a      	adds	r2, r3, #4
 800200a:	6032      	str	r2, [r6, #0]
 800200c:	681e      	ldr	r6, [r3, #0]
 800200e:	6862      	ldr	r2, [r4, #4]
 8002010:	2100      	movs	r1, #0
 8002012:	4630      	mov	r0, r6
 8002014:	f7fe f8fc 	bl	8000210 <memchr>
 8002018:	b108      	cbz	r0, 800201e <_printf_i+0x1e6>
 800201a:	1b80      	subs	r0, r0, r6
 800201c:	6060      	str	r0, [r4, #4]
 800201e:	6863      	ldr	r3, [r4, #4]
 8002020:	6123      	str	r3, [r4, #16]
 8002022:	2300      	movs	r3, #0
 8002024:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002028:	e7aa      	b.n	8001f80 <_printf_i+0x148>
 800202a:	6923      	ldr	r3, [r4, #16]
 800202c:	4632      	mov	r2, r6
 800202e:	4649      	mov	r1, r9
 8002030:	4640      	mov	r0, r8
 8002032:	47d0      	blx	sl
 8002034:	3001      	adds	r0, #1
 8002036:	d0ad      	beq.n	8001f94 <_printf_i+0x15c>
 8002038:	6823      	ldr	r3, [r4, #0]
 800203a:	079b      	lsls	r3, r3, #30
 800203c:	d413      	bmi.n	8002066 <_printf_i+0x22e>
 800203e:	68e0      	ldr	r0, [r4, #12]
 8002040:	9b03      	ldr	r3, [sp, #12]
 8002042:	4298      	cmp	r0, r3
 8002044:	bfb8      	it	lt
 8002046:	4618      	movlt	r0, r3
 8002048:	e7a6      	b.n	8001f98 <_printf_i+0x160>
 800204a:	2301      	movs	r3, #1
 800204c:	4632      	mov	r2, r6
 800204e:	4649      	mov	r1, r9
 8002050:	4640      	mov	r0, r8
 8002052:	47d0      	blx	sl
 8002054:	3001      	adds	r0, #1
 8002056:	d09d      	beq.n	8001f94 <_printf_i+0x15c>
 8002058:	3501      	adds	r5, #1
 800205a:	68e3      	ldr	r3, [r4, #12]
 800205c:	9903      	ldr	r1, [sp, #12]
 800205e:	1a5b      	subs	r3, r3, r1
 8002060:	42ab      	cmp	r3, r5
 8002062:	dcf2      	bgt.n	800204a <_printf_i+0x212>
 8002064:	e7eb      	b.n	800203e <_printf_i+0x206>
 8002066:	2500      	movs	r5, #0
 8002068:	f104 0619 	add.w	r6, r4, #25
 800206c:	e7f5      	b.n	800205a <_printf_i+0x222>
 800206e:	bf00      	nop
 8002070:	08004729 	.word	0x08004729
 8002074:	0800473a 	.word	0x0800473a

08002078 <std>:
 8002078:	2300      	movs	r3, #0
 800207a:	b510      	push	{r4, lr}
 800207c:	4604      	mov	r4, r0
 800207e:	e9c0 3300 	strd	r3, r3, [r0]
 8002082:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002086:	6083      	str	r3, [r0, #8]
 8002088:	8181      	strh	r1, [r0, #12]
 800208a:	6643      	str	r3, [r0, #100]	@ 0x64
 800208c:	81c2      	strh	r2, [r0, #14]
 800208e:	6183      	str	r3, [r0, #24]
 8002090:	4619      	mov	r1, r3
 8002092:	2208      	movs	r2, #8
 8002094:	305c      	adds	r0, #92	@ 0x5c
 8002096:	f000 f928 	bl	80022ea <memset>
 800209a:	4b0d      	ldr	r3, [pc, #52]	@ (80020d0 <std+0x58>)
 800209c:	6263      	str	r3, [r4, #36]	@ 0x24
 800209e:	4b0d      	ldr	r3, [pc, #52]	@ (80020d4 <std+0x5c>)
 80020a0:	62a3      	str	r3, [r4, #40]	@ 0x28
 80020a2:	4b0d      	ldr	r3, [pc, #52]	@ (80020d8 <std+0x60>)
 80020a4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80020a6:	4b0d      	ldr	r3, [pc, #52]	@ (80020dc <std+0x64>)
 80020a8:	6323      	str	r3, [r4, #48]	@ 0x30
 80020aa:	4b0d      	ldr	r3, [pc, #52]	@ (80020e0 <std+0x68>)
 80020ac:	6224      	str	r4, [r4, #32]
 80020ae:	429c      	cmp	r4, r3
 80020b0:	d006      	beq.n	80020c0 <std+0x48>
 80020b2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80020b6:	4294      	cmp	r4, r2
 80020b8:	d002      	beq.n	80020c0 <std+0x48>
 80020ba:	33d0      	adds	r3, #208	@ 0xd0
 80020bc:	429c      	cmp	r4, r3
 80020be:	d105      	bne.n	80020cc <std+0x54>
 80020c0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80020c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80020c8:	f000 b98c 	b.w	80023e4 <__retarget_lock_init_recursive>
 80020cc:	bd10      	pop	{r4, pc}
 80020ce:	bf00      	nop
 80020d0:	08002265 	.word	0x08002265
 80020d4:	08002287 	.word	0x08002287
 80020d8:	080022bf 	.word	0x080022bf
 80020dc:	080022e3 	.word	0x080022e3
 80020e0:	2000023c 	.word	0x2000023c

080020e4 <stdio_exit_handler>:
 80020e4:	4a02      	ldr	r2, [pc, #8]	@ (80020f0 <stdio_exit_handler+0xc>)
 80020e6:	4903      	ldr	r1, [pc, #12]	@ (80020f4 <stdio_exit_handler+0x10>)
 80020e8:	4803      	ldr	r0, [pc, #12]	@ (80020f8 <stdio_exit_handler+0x14>)
 80020ea:	f000 b869 	b.w	80021c0 <_fwalk_sglue>
 80020ee:	bf00      	nop
 80020f0:	20000000 	.word	0x20000000
 80020f4:	08003d45 	.word	0x08003d45
 80020f8:	20000010 	.word	0x20000010

080020fc <cleanup_stdio>:
 80020fc:	6841      	ldr	r1, [r0, #4]
 80020fe:	4b0c      	ldr	r3, [pc, #48]	@ (8002130 <cleanup_stdio+0x34>)
 8002100:	4299      	cmp	r1, r3
 8002102:	b510      	push	{r4, lr}
 8002104:	4604      	mov	r4, r0
 8002106:	d001      	beq.n	800210c <cleanup_stdio+0x10>
 8002108:	f001 fe1c 	bl	8003d44 <_fflush_r>
 800210c:	68a1      	ldr	r1, [r4, #8]
 800210e:	4b09      	ldr	r3, [pc, #36]	@ (8002134 <cleanup_stdio+0x38>)
 8002110:	4299      	cmp	r1, r3
 8002112:	d002      	beq.n	800211a <cleanup_stdio+0x1e>
 8002114:	4620      	mov	r0, r4
 8002116:	f001 fe15 	bl	8003d44 <_fflush_r>
 800211a:	68e1      	ldr	r1, [r4, #12]
 800211c:	4b06      	ldr	r3, [pc, #24]	@ (8002138 <cleanup_stdio+0x3c>)
 800211e:	4299      	cmp	r1, r3
 8002120:	d004      	beq.n	800212c <cleanup_stdio+0x30>
 8002122:	4620      	mov	r0, r4
 8002124:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002128:	f001 be0c 	b.w	8003d44 <_fflush_r>
 800212c:	bd10      	pop	{r4, pc}
 800212e:	bf00      	nop
 8002130:	2000023c 	.word	0x2000023c
 8002134:	200002a4 	.word	0x200002a4
 8002138:	2000030c 	.word	0x2000030c

0800213c <global_stdio_init.part.0>:
 800213c:	b510      	push	{r4, lr}
 800213e:	4b0b      	ldr	r3, [pc, #44]	@ (800216c <global_stdio_init.part.0+0x30>)
 8002140:	4c0b      	ldr	r4, [pc, #44]	@ (8002170 <global_stdio_init.part.0+0x34>)
 8002142:	4a0c      	ldr	r2, [pc, #48]	@ (8002174 <global_stdio_init.part.0+0x38>)
 8002144:	601a      	str	r2, [r3, #0]
 8002146:	4620      	mov	r0, r4
 8002148:	2200      	movs	r2, #0
 800214a:	2104      	movs	r1, #4
 800214c:	f7ff ff94 	bl	8002078 <std>
 8002150:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002154:	2201      	movs	r2, #1
 8002156:	2109      	movs	r1, #9
 8002158:	f7ff ff8e 	bl	8002078 <std>
 800215c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8002160:	2202      	movs	r2, #2
 8002162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002166:	2112      	movs	r1, #18
 8002168:	f7ff bf86 	b.w	8002078 <std>
 800216c:	20000374 	.word	0x20000374
 8002170:	2000023c 	.word	0x2000023c
 8002174:	080020e5 	.word	0x080020e5

08002178 <__sfp_lock_acquire>:
 8002178:	4801      	ldr	r0, [pc, #4]	@ (8002180 <__sfp_lock_acquire+0x8>)
 800217a:	f000 b934 	b.w	80023e6 <__retarget_lock_acquire_recursive>
 800217e:	bf00      	nop
 8002180:	2000037d 	.word	0x2000037d

08002184 <__sfp_lock_release>:
 8002184:	4801      	ldr	r0, [pc, #4]	@ (800218c <__sfp_lock_release+0x8>)
 8002186:	f000 b92f 	b.w	80023e8 <__retarget_lock_release_recursive>
 800218a:	bf00      	nop
 800218c:	2000037d 	.word	0x2000037d

08002190 <__sinit>:
 8002190:	b510      	push	{r4, lr}
 8002192:	4604      	mov	r4, r0
 8002194:	f7ff fff0 	bl	8002178 <__sfp_lock_acquire>
 8002198:	6a23      	ldr	r3, [r4, #32]
 800219a:	b11b      	cbz	r3, 80021a4 <__sinit+0x14>
 800219c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80021a0:	f7ff bff0 	b.w	8002184 <__sfp_lock_release>
 80021a4:	4b04      	ldr	r3, [pc, #16]	@ (80021b8 <__sinit+0x28>)
 80021a6:	6223      	str	r3, [r4, #32]
 80021a8:	4b04      	ldr	r3, [pc, #16]	@ (80021bc <__sinit+0x2c>)
 80021aa:	681b      	ldr	r3, [r3, #0]
 80021ac:	2b00      	cmp	r3, #0
 80021ae:	d1f5      	bne.n	800219c <__sinit+0xc>
 80021b0:	f7ff ffc4 	bl	800213c <global_stdio_init.part.0>
 80021b4:	e7f2      	b.n	800219c <__sinit+0xc>
 80021b6:	bf00      	nop
 80021b8:	080020fd 	.word	0x080020fd
 80021bc:	20000374 	.word	0x20000374

080021c0 <_fwalk_sglue>:
 80021c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80021c4:	4607      	mov	r7, r0
 80021c6:	4688      	mov	r8, r1
 80021c8:	4614      	mov	r4, r2
 80021ca:	2600      	movs	r6, #0
 80021cc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80021d0:	f1b9 0901 	subs.w	r9, r9, #1
 80021d4:	d505      	bpl.n	80021e2 <_fwalk_sglue+0x22>
 80021d6:	6824      	ldr	r4, [r4, #0]
 80021d8:	2c00      	cmp	r4, #0
 80021da:	d1f7      	bne.n	80021cc <_fwalk_sglue+0xc>
 80021dc:	4630      	mov	r0, r6
 80021de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80021e2:	89ab      	ldrh	r3, [r5, #12]
 80021e4:	2b01      	cmp	r3, #1
 80021e6:	d907      	bls.n	80021f8 <_fwalk_sglue+0x38>
 80021e8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80021ec:	3301      	adds	r3, #1
 80021ee:	d003      	beq.n	80021f8 <_fwalk_sglue+0x38>
 80021f0:	4629      	mov	r1, r5
 80021f2:	4638      	mov	r0, r7
 80021f4:	47c0      	blx	r8
 80021f6:	4306      	orrs	r6, r0
 80021f8:	3568      	adds	r5, #104	@ 0x68
 80021fa:	e7e9      	b.n	80021d0 <_fwalk_sglue+0x10>

080021fc <sniprintf>:
 80021fc:	b40c      	push	{r2, r3}
 80021fe:	b530      	push	{r4, r5, lr}
 8002200:	4b17      	ldr	r3, [pc, #92]	@ (8002260 <sniprintf+0x64>)
 8002202:	1e0c      	subs	r4, r1, #0
 8002204:	681d      	ldr	r5, [r3, #0]
 8002206:	b09d      	sub	sp, #116	@ 0x74
 8002208:	da08      	bge.n	800221c <sniprintf+0x20>
 800220a:	238b      	movs	r3, #139	@ 0x8b
 800220c:	602b      	str	r3, [r5, #0]
 800220e:	f04f 30ff 	mov.w	r0, #4294967295
 8002212:	b01d      	add	sp, #116	@ 0x74
 8002214:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8002218:	b002      	add	sp, #8
 800221a:	4770      	bx	lr
 800221c:	f44f 7302 	mov.w	r3, #520	@ 0x208
 8002220:	f8ad 3014 	strh.w	r3, [sp, #20]
 8002224:	bf14      	ite	ne
 8002226:	f104 33ff 	addne.w	r3, r4, #4294967295
 800222a:	4623      	moveq	r3, r4
 800222c:	9304      	str	r3, [sp, #16]
 800222e:	9307      	str	r3, [sp, #28]
 8002230:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8002234:	9002      	str	r0, [sp, #8]
 8002236:	9006      	str	r0, [sp, #24]
 8002238:	f8ad 3016 	strh.w	r3, [sp, #22]
 800223c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800223e:	ab21      	add	r3, sp, #132	@ 0x84
 8002240:	a902      	add	r1, sp, #8
 8002242:	4628      	mov	r0, r5
 8002244:	9301      	str	r3, [sp, #4]
 8002246:	f001 fbfd 	bl	8003a44 <_svfiprintf_r>
 800224a:	1c43      	adds	r3, r0, #1
 800224c:	bfbc      	itt	lt
 800224e:	238b      	movlt	r3, #139	@ 0x8b
 8002250:	602b      	strlt	r3, [r5, #0]
 8002252:	2c00      	cmp	r4, #0
 8002254:	d0dd      	beq.n	8002212 <sniprintf+0x16>
 8002256:	9b02      	ldr	r3, [sp, #8]
 8002258:	2200      	movs	r2, #0
 800225a:	701a      	strb	r2, [r3, #0]
 800225c:	e7d9      	b.n	8002212 <sniprintf+0x16>
 800225e:	bf00      	nop
 8002260:	2000000c 	.word	0x2000000c

08002264 <__sread>:
 8002264:	b510      	push	{r4, lr}
 8002266:	460c      	mov	r4, r1
 8002268:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800226c:	f000 f86c 	bl	8002348 <_read_r>
 8002270:	2800      	cmp	r0, #0
 8002272:	bfab      	itete	ge
 8002274:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8002276:	89a3      	ldrhlt	r3, [r4, #12]
 8002278:	181b      	addge	r3, r3, r0
 800227a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800227e:	bfac      	ite	ge
 8002280:	6563      	strge	r3, [r4, #84]	@ 0x54
 8002282:	81a3      	strhlt	r3, [r4, #12]
 8002284:	bd10      	pop	{r4, pc}

08002286 <__swrite>:
 8002286:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800228a:	461f      	mov	r7, r3
 800228c:	898b      	ldrh	r3, [r1, #12]
 800228e:	05db      	lsls	r3, r3, #23
 8002290:	4605      	mov	r5, r0
 8002292:	460c      	mov	r4, r1
 8002294:	4616      	mov	r6, r2
 8002296:	d505      	bpl.n	80022a4 <__swrite+0x1e>
 8002298:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800229c:	2302      	movs	r3, #2
 800229e:	2200      	movs	r2, #0
 80022a0:	f000 f840 	bl	8002324 <_lseek_r>
 80022a4:	89a3      	ldrh	r3, [r4, #12]
 80022a6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80022aa:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80022ae:	81a3      	strh	r3, [r4, #12]
 80022b0:	4632      	mov	r2, r6
 80022b2:	463b      	mov	r3, r7
 80022b4:	4628      	mov	r0, r5
 80022b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80022ba:	f000 b857 	b.w	800236c <_write_r>

080022be <__sseek>:
 80022be:	b510      	push	{r4, lr}
 80022c0:	460c      	mov	r4, r1
 80022c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80022c6:	f000 f82d 	bl	8002324 <_lseek_r>
 80022ca:	1c43      	adds	r3, r0, #1
 80022cc:	89a3      	ldrh	r3, [r4, #12]
 80022ce:	bf15      	itete	ne
 80022d0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80022d2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80022d6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80022da:	81a3      	strheq	r3, [r4, #12]
 80022dc:	bf18      	it	ne
 80022de:	81a3      	strhne	r3, [r4, #12]
 80022e0:	bd10      	pop	{r4, pc}

080022e2 <__sclose>:
 80022e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80022e6:	f000 b80d 	b.w	8002304 <_close_r>

080022ea <memset>:
 80022ea:	4402      	add	r2, r0
 80022ec:	4603      	mov	r3, r0
 80022ee:	4293      	cmp	r3, r2
 80022f0:	d100      	bne.n	80022f4 <memset+0xa>
 80022f2:	4770      	bx	lr
 80022f4:	f803 1b01 	strb.w	r1, [r3], #1
 80022f8:	e7f9      	b.n	80022ee <memset+0x4>
	...

080022fc <_localeconv_r>:
 80022fc:	4800      	ldr	r0, [pc, #0]	@ (8002300 <_localeconv_r+0x4>)
 80022fe:	4770      	bx	lr
 8002300:	2000014c 	.word	0x2000014c

08002304 <_close_r>:
 8002304:	b538      	push	{r3, r4, r5, lr}
 8002306:	4d06      	ldr	r5, [pc, #24]	@ (8002320 <_close_r+0x1c>)
 8002308:	2300      	movs	r3, #0
 800230a:	4604      	mov	r4, r0
 800230c:	4608      	mov	r0, r1
 800230e:	602b      	str	r3, [r5, #0]
 8002310:	f7ff f9ae 	bl	8001670 <_close>
 8002314:	1c43      	adds	r3, r0, #1
 8002316:	d102      	bne.n	800231e <_close_r+0x1a>
 8002318:	682b      	ldr	r3, [r5, #0]
 800231a:	b103      	cbz	r3, 800231e <_close_r+0x1a>
 800231c:	6023      	str	r3, [r4, #0]
 800231e:	bd38      	pop	{r3, r4, r5, pc}
 8002320:	20000378 	.word	0x20000378

08002324 <_lseek_r>:
 8002324:	b538      	push	{r3, r4, r5, lr}
 8002326:	4d07      	ldr	r5, [pc, #28]	@ (8002344 <_lseek_r+0x20>)
 8002328:	4604      	mov	r4, r0
 800232a:	4608      	mov	r0, r1
 800232c:	4611      	mov	r1, r2
 800232e:	2200      	movs	r2, #0
 8002330:	602a      	str	r2, [r5, #0]
 8002332:	461a      	mov	r2, r3
 8002334:	f7ff f9c3 	bl	80016be <_lseek>
 8002338:	1c43      	adds	r3, r0, #1
 800233a:	d102      	bne.n	8002342 <_lseek_r+0x1e>
 800233c:	682b      	ldr	r3, [r5, #0]
 800233e:	b103      	cbz	r3, 8002342 <_lseek_r+0x1e>
 8002340:	6023      	str	r3, [r4, #0]
 8002342:	bd38      	pop	{r3, r4, r5, pc}
 8002344:	20000378 	.word	0x20000378

08002348 <_read_r>:
 8002348:	b538      	push	{r3, r4, r5, lr}
 800234a:	4d07      	ldr	r5, [pc, #28]	@ (8002368 <_read_r+0x20>)
 800234c:	4604      	mov	r4, r0
 800234e:	4608      	mov	r0, r1
 8002350:	4611      	mov	r1, r2
 8002352:	2200      	movs	r2, #0
 8002354:	602a      	str	r2, [r5, #0]
 8002356:	461a      	mov	r2, r3
 8002358:	f7ff f951 	bl	80015fe <_read>
 800235c:	1c43      	adds	r3, r0, #1
 800235e:	d102      	bne.n	8002366 <_read_r+0x1e>
 8002360:	682b      	ldr	r3, [r5, #0]
 8002362:	b103      	cbz	r3, 8002366 <_read_r+0x1e>
 8002364:	6023      	str	r3, [r4, #0]
 8002366:	bd38      	pop	{r3, r4, r5, pc}
 8002368:	20000378 	.word	0x20000378

0800236c <_write_r>:
 800236c:	b538      	push	{r3, r4, r5, lr}
 800236e:	4d07      	ldr	r5, [pc, #28]	@ (800238c <_write_r+0x20>)
 8002370:	4604      	mov	r4, r0
 8002372:	4608      	mov	r0, r1
 8002374:	4611      	mov	r1, r2
 8002376:	2200      	movs	r2, #0
 8002378:	602a      	str	r2, [r5, #0]
 800237a:	461a      	mov	r2, r3
 800237c:	f7ff f95c 	bl	8001638 <_write>
 8002380:	1c43      	adds	r3, r0, #1
 8002382:	d102      	bne.n	800238a <_write_r+0x1e>
 8002384:	682b      	ldr	r3, [r5, #0]
 8002386:	b103      	cbz	r3, 800238a <_write_r+0x1e>
 8002388:	6023      	str	r3, [r4, #0]
 800238a:	bd38      	pop	{r3, r4, r5, pc}
 800238c:	20000378 	.word	0x20000378

08002390 <__errno>:
 8002390:	4b01      	ldr	r3, [pc, #4]	@ (8002398 <__errno+0x8>)
 8002392:	6818      	ldr	r0, [r3, #0]
 8002394:	4770      	bx	lr
 8002396:	bf00      	nop
 8002398:	2000000c 	.word	0x2000000c

0800239c <__libc_init_array>:
 800239c:	b570      	push	{r4, r5, r6, lr}
 800239e:	4d0d      	ldr	r5, [pc, #52]	@ (80023d4 <__libc_init_array+0x38>)
 80023a0:	4c0d      	ldr	r4, [pc, #52]	@ (80023d8 <__libc_init_array+0x3c>)
 80023a2:	1b64      	subs	r4, r4, r5
 80023a4:	10a4      	asrs	r4, r4, #2
 80023a6:	2600      	movs	r6, #0
 80023a8:	42a6      	cmp	r6, r4
 80023aa:	d109      	bne.n	80023c0 <__libc_init_array+0x24>
 80023ac:	4d0b      	ldr	r5, [pc, #44]	@ (80023dc <__libc_init_array+0x40>)
 80023ae:	4c0c      	ldr	r4, [pc, #48]	@ (80023e0 <__libc_init_array+0x44>)
 80023b0:	f002 f98c 	bl	80046cc <_init>
 80023b4:	1b64      	subs	r4, r4, r5
 80023b6:	10a4      	asrs	r4, r4, #2
 80023b8:	2600      	movs	r6, #0
 80023ba:	42a6      	cmp	r6, r4
 80023bc:	d105      	bne.n	80023ca <__libc_init_array+0x2e>
 80023be:	bd70      	pop	{r4, r5, r6, pc}
 80023c0:	f855 3b04 	ldr.w	r3, [r5], #4
 80023c4:	4798      	blx	r3
 80023c6:	3601      	adds	r6, #1
 80023c8:	e7ee      	b.n	80023a8 <__libc_init_array+0xc>
 80023ca:	f855 3b04 	ldr.w	r3, [r5], #4
 80023ce:	4798      	blx	r3
 80023d0:	3601      	adds	r6, #1
 80023d2:	e7f2      	b.n	80023ba <__libc_init_array+0x1e>
 80023d4:	08004a90 	.word	0x08004a90
 80023d8:	08004a90 	.word	0x08004a90
 80023dc:	08004a90 	.word	0x08004a90
 80023e0:	08004a94 	.word	0x08004a94

080023e4 <__retarget_lock_init_recursive>:
 80023e4:	4770      	bx	lr

080023e6 <__retarget_lock_acquire_recursive>:
 80023e6:	4770      	bx	lr

080023e8 <__retarget_lock_release_recursive>:
 80023e8:	4770      	bx	lr

080023ea <quorem>:
 80023ea:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023ee:	6903      	ldr	r3, [r0, #16]
 80023f0:	690c      	ldr	r4, [r1, #16]
 80023f2:	42a3      	cmp	r3, r4
 80023f4:	4607      	mov	r7, r0
 80023f6:	db7e      	blt.n	80024f6 <quorem+0x10c>
 80023f8:	3c01      	subs	r4, #1
 80023fa:	f101 0814 	add.w	r8, r1, #20
 80023fe:	00a3      	lsls	r3, r4, #2
 8002400:	f100 0514 	add.w	r5, r0, #20
 8002404:	9300      	str	r3, [sp, #0]
 8002406:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800240a:	9301      	str	r3, [sp, #4]
 800240c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002410:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002414:	3301      	adds	r3, #1
 8002416:	429a      	cmp	r2, r3
 8002418:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800241c:	fbb2 f6f3 	udiv	r6, r2, r3
 8002420:	d32e      	bcc.n	8002480 <quorem+0x96>
 8002422:	f04f 0a00 	mov.w	sl, #0
 8002426:	46c4      	mov	ip, r8
 8002428:	46ae      	mov	lr, r5
 800242a:	46d3      	mov	fp, sl
 800242c:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002430:	b298      	uxth	r0, r3
 8002432:	fb06 a000 	mla	r0, r6, r0, sl
 8002436:	0c02      	lsrs	r2, r0, #16
 8002438:	0c1b      	lsrs	r3, r3, #16
 800243a:	fb06 2303 	mla	r3, r6, r3, r2
 800243e:	f8de 2000 	ldr.w	r2, [lr]
 8002442:	b280      	uxth	r0, r0
 8002444:	b292      	uxth	r2, r2
 8002446:	1a12      	subs	r2, r2, r0
 8002448:	445a      	add	r2, fp
 800244a:	f8de 0000 	ldr.w	r0, [lr]
 800244e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002452:	b29b      	uxth	r3, r3
 8002454:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002458:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800245c:	b292      	uxth	r2, r2
 800245e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002462:	45e1      	cmp	r9, ip
 8002464:	f84e 2b04 	str.w	r2, [lr], #4
 8002468:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800246c:	d2de      	bcs.n	800242c <quorem+0x42>
 800246e:	9b00      	ldr	r3, [sp, #0]
 8002470:	58eb      	ldr	r3, [r5, r3]
 8002472:	b92b      	cbnz	r3, 8002480 <quorem+0x96>
 8002474:	9b01      	ldr	r3, [sp, #4]
 8002476:	3b04      	subs	r3, #4
 8002478:	429d      	cmp	r5, r3
 800247a:	461a      	mov	r2, r3
 800247c:	d32f      	bcc.n	80024de <quorem+0xf4>
 800247e:	613c      	str	r4, [r7, #16]
 8002480:	4638      	mov	r0, r7
 8002482:	f001 f97b 	bl	800377c <__mcmp>
 8002486:	2800      	cmp	r0, #0
 8002488:	db25      	blt.n	80024d6 <quorem+0xec>
 800248a:	4629      	mov	r1, r5
 800248c:	2000      	movs	r0, #0
 800248e:	f858 2b04 	ldr.w	r2, [r8], #4
 8002492:	f8d1 c000 	ldr.w	ip, [r1]
 8002496:	fa1f fe82 	uxth.w	lr, r2
 800249a:	fa1f f38c 	uxth.w	r3, ip
 800249e:	eba3 030e 	sub.w	r3, r3, lr
 80024a2:	4403      	add	r3, r0
 80024a4:	0c12      	lsrs	r2, r2, #16
 80024a6:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 80024aa:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 80024ae:	b29b      	uxth	r3, r3
 80024b0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80024b4:	45c1      	cmp	r9, r8
 80024b6:	f841 3b04 	str.w	r3, [r1], #4
 80024ba:	ea4f 4022 	mov.w	r0, r2, asr #16
 80024be:	d2e6      	bcs.n	800248e <quorem+0xa4>
 80024c0:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80024c4:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80024c8:	b922      	cbnz	r2, 80024d4 <quorem+0xea>
 80024ca:	3b04      	subs	r3, #4
 80024cc:	429d      	cmp	r5, r3
 80024ce:	461a      	mov	r2, r3
 80024d0:	d30b      	bcc.n	80024ea <quorem+0x100>
 80024d2:	613c      	str	r4, [r7, #16]
 80024d4:	3601      	adds	r6, #1
 80024d6:	4630      	mov	r0, r6
 80024d8:	b003      	add	sp, #12
 80024da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80024de:	6812      	ldr	r2, [r2, #0]
 80024e0:	3b04      	subs	r3, #4
 80024e2:	2a00      	cmp	r2, #0
 80024e4:	d1cb      	bne.n	800247e <quorem+0x94>
 80024e6:	3c01      	subs	r4, #1
 80024e8:	e7c6      	b.n	8002478 <quorem+0x8e>
 80024ea:	6812      	ldr	r2, [r2, #0]
 80024ec:	3b04      	subs	r3, #4
 80024ee:	2a00      	cmp	r2, #0
 80024f0:	d1ef      	bne.n	80024d2 <quorem+0xe8>
 80024f2:	3c01      	subs	r4, #1
 80024f4:	e7ea      	b.n	80024cc <quorem+0xe2>
 80024f6:	2000      	movs	r0, #0
 80024f8:	e7ee      	b.n	80024d8 <quorem+0xee>
 80024fa:	0000      	movs	r0, r0
 80024fc:	0000      	movs	r0, r0
	...

08002500 <_dtoa_r>:
 8002500:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002504:	69c7      	ldr	r7, [r0, #28]
 8002506:	b099      	sub	sp, #100	@ 0x64
 8002508:	ed8d 0b02 	vstr	d0, [sp, #8]
 800250c:	ec55 4b10 	vmov	r4, r5, d0
 8002510:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 8002512:	9109      	str	r1, [sp, #36]	@ 0x24
 8002514:	4683      	mov	fp, r0
 8002516:	920e      	str	r2, [sp, #56]	@ 0x38
 8002518:	9313      	str	r3, [sp, #76]	@ 0x4c
 800251a:	b97f      	cbnz	r7, 800253c <_dtoa_r+0x3c>
 800251c:	2010      	movs	r0, #16
 800251e:	f000 fdfd 	bl	800311c <malloc>
 8002522:	4602      	mov	r2, r0
 8002524:	f8cb 001c 	str.w	r0, [fp, #28]
 8002528:	b920      	cbnz	r0, 8002534 <_dtoa_r+0x34>
 800252a:	4ba7      	ldr	r3, [pc, #668]	@ (80027c8 <_dtoa_r+0x2c8>)
 800252c:	21ef      	movs	r1, #239	@ 0xef
 800252e:	48a7      	ldr	r0, [pc, #668]	@ (80027cc <_dtoa_r+0x2cc>)
 8002530:	f001 fc68 	bl	8003e04 <__assert_func>
 8002534:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002538:	6007      	str	r7, [r0, #0]
 800253a:	60c7      	str	r7, [r0, #12]
 800253c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002540:	6819      	ldr	r1, [r3, #0]
 8002542:	b159      	cbz	r1, 800255c <_dtoa_r+0x5c>
 8002544:	685a      	ldr	r2, [r3, #4]
 8002546:	604a      	str	r2, [r1, #4]
 8002548:	2301      	movs	r3, #1
 800254a:	4093      	lsls	r3, r2
 800254c:	608b      	str	r3, [r1, #8]
 800254e:	4658      	mov	r0, fp
 8002550:	f000 feda 	bl	8003308 <_Bfree>
 8002554:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002558:	2200      	movs	r2, #0
 800255a:	601a      	str	r2, [r3, #0]
 800255c:	1e2b      	subs	r3, r5, #0
 800255e:	bfb9      	ittee	lt
 8002560:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8002564:	9303      	strlt	r3, [sp, #12]
 8002566:	2300      	movge	r3, #0
 8002568:	6033      	strge	r3, [r6, #0]
 800256a:	9f03      	ldr	r7, [sp, #12]
 800256c:	4b98      	ldr	r3, [pc, #608]	@ (80027d0 <_dtoa_r+0x2d0>)
 800256e:	bfbc      	itt	lt
 8002570:	2201      	movlt	r2, #1
 8002572:	6032      	strlt	r2, [r6, #0]
 8002574:	43bb      	bics	r3, r7
 8002576:	d112      	bne.n	800259e <_dtoa_r+0x9e>
 8002578:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800257a:	f242 730f 	movw	r3, #9999	@ 0x270f
 800257e:	6013      	str	r3, [r2, #0]
 8002580:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8002584:	4323      	orrs	r3, r4
 8002586:	f000 854d 	beq.w	8003024 <_dtoa_r+0xb24>
 800258a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800258c:	f8df a254 	ldr.w	sl, [pc, #596]	@ 80027e4 <_dtoa_r+0x2e4>
 8002590:	2b00      	cmp	r3, #0
 8002592:	f000 854f 	beq.w	8003034 <_dtoa_r+0xb34>
 8002596:	f10a 0303 	add.w	r3, sl, #3
 800259a:	f000 bd49 	b.w	8003030 <_dtoa_r+0xb30>
 800259e:	ed9d 7b02 	vldr	d7, [sp, #8]
 80025a2:	2200      	movs	r2, #0
 80025a4:	ec51 0b17 	vmov	r0, r1, d7
 80025a8:	2300      	movs	r3, #0
 80025aa:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 80025ae:	f7fe faab 	bl	8000b08 <__aeabi_dcmpeq>
 80025b2:	4680      	mov	r8, r0
 80025b4:	b158      	cbz	r0, 80025ce <_dtoa_r+0xce>
 80025b6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80025b8:	2301      	movs	r3, #1
 80025ba:	6013      	str	r3, [r2, #0]
 80025bc:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80025be:	b113      	cbz	r3, 80025c6 <_dtoa_r+0xc6>
 80025c0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80025c2:	4b84      	ldr	r3, [pc, #528]	@ (80027d4 <_dtoa_r+0x2d4>)
 80025c4:	6013      	str	r3, [r2, #0]
 80025c6:	f8df a220 	ldr.w	sl, [pc, #544]	@ 80027e8 <_dtoa_r+0x2e8>
 80025ca:	f000 bd33 	b.w	8003034 <_dtoa_r+0xb34>
 80025ce:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 80025d2:	aa16      	add	r2, sp, #88	@ 0x58
 80025d4:	a917      	add	r1, sp, #92	@ 0x5c
 80025d6:	4658      	mov	r0, fp
 80025d8:	f001 f980 	bl	80038dc <__d2b>
 80025dc:	f3c7 560a 	ubfx	r6, r7, #20, #11
 80025e0:	4681      	mov	r9, r0
 80025e2:	2e00      	cmp	r6, #0
 80025e4:	d077      	beq.n	80026d6 <_dtoa_r+0x1d6>
 80025e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80025e8:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 80025ec:	f3c3 0313 	ubfx	r3, r3, #0, #20
 80025f0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80025f4:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 80025f8:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 80025fc:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002600:	4619      	mov	r1, r3
 8002602:	2200      	movs	r2, #0
 8002604:	4b74      	ldr	r3, [pc, #464]	@ (80027d8 <_dtoa_r+0x2d8>)
 8002606:	f7fd fe5f 	bl	80002c8 <__aeabi_dsub>
 800260a:	a369      	add	r3, pc, #420	@ (adr r3, 80027b0 <_dtoa_r+0x2b0>)
 800260c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002610:	f7fe f812 	bl	8000638 <__aeabi_dmul>
 8002614:	a368      	add	r3, pc, #416	@ (adr r3, 80027b8 <_dtoa_r+0x2b8>)
 8002616:	e9d3 2300 	ldrd	r2, r3, [r3]
 800261a:	f7fd fe57 	bl	80002cc <__adddf3>
 800261e:	4604      	mov	r4, r0
 8002620:	4630      	mov	r0, r6
 8002622:	460d      	mov	r5, r1
 8002624:	f7fd ff9e 	bl	8000564 <__aeabi_i2d>
 8002628:	a365      	add	r3, pc, #404	@ (adr r3, 80027c0 <_dtoa_r+0x2c0>)
 800262a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800262e:	f7fe f803 	bl	8000638 <__aeabi_dmul>
 8002632:	4602      	mov	r2, r0
 8002634:	460b      	mov	r3, r1
 8002636:	4620      	mov	r0, r4
 8002638:	4629      	mov	r1, r5
 800263a:	f7fd fe47 	bl	80002cc <__adddf3>
 800263e:	4604      	mov	r4, r0
 8002640:	460d      	mov	r5, r1
 8002642:	f7fe faa9 	bl	8000b98 <__aeabi_d2iz>
 8002646:	2200      	movs	r2, #0
 8002648:	4607      	mov	r7, r0
 800264a:	2300      	movs	r3, #0
 800264c:	4620      	mov	r0, r4
 800264e:	4629      	mov	r1, r5
 8002650:	f7fe fa64 	bl	8000b1c <__aeabi_dcmplt>
 8002654:	b140      	cbz	r0, 8002668 <_dtoa_r+0x168>
 8002656:	4638      	mov	r0, r7
 8002658:	f7fd ff84 	bl	8000564 <__aeabi_i2d>
 800265c:	4622      	mov	r2, r4
 800265e:	462b      	mov	r3, r5
 8002660:	f7fe fa52 	bl	8000b08 <__aeabi_dcmpeq>
 8002664:	b900      	cbnz	r0, 8002668 <_dtoa_r+0x168>
 8002666:	3f01      	subs	r7, #1
 8002668:	2f16      	cmp	r7, #22
 800266a:	d851      	bhi.n	8002710 <_dtoa_r+0x210>
 800266c:	4b5b      	ldr	r3, [pc, #364]	@ (80027dc <_dtoa_r+0x2dc>)
 800266e:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002672:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002676:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800267a:	f7fe fa4f 	bl	8000b1c <__aeabi_dcmplt>
 800267e:	2800      	cmp	r0, #0
 8002680:	d048      	beq.n	8002714 <_dtoa_r+0x214>
 8002682:	3f01      	subs	r7, #1
 8002684:	2300      	movs	r3, #0
 8002686:	9312      	str	r3, [sp, #72]	@ 0x48
 8002688:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800268a:	1b9b      	subs	r3, r3, r6
 800268c:	1e5a      	subs	r2, r3, #1
 800268e:	bf44      	itt	mi
 8002690:	f1c3 0801 	rsbmi	r8, r3, #1
 8002694:	2300      	movmi	r3, #0
 8002696:	9208      	str	r2, [sp, #32]
 8002698:	bf54      	ite	pl
 800269a:	f04f 0800 	movpl.w	r8, #0
 800269e:	9308      	strmi	r3, [sp, #32]
 80026a0:	2f00      	cmp	r7, #0
 80026a2:	db39      	blt.n	8002718 <_dtoa_r+0x218>
 80026a4:	9b08      	ldr	r3, [sp, #32]
 80026a6:	970f      	str	r7, [sp, #60]	@ 0x3c
 80026a8:	443b      	add	r3, r7
 80026aa:	9308      	str	r3, [sp, #32]
 80026ac:	2300      	movs	r3, #0
 80026ae:	930a      	str	r3, [sp, #40]	@ 0x28
 80026b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80026b2:	2b09      	cmp	r3, #9
 80026b4:	d864      	bhi.n	8002780 <_dtoa_r+0x280>
 80026b6:	2b05      	cmp	r3, #5
 80026b8:	bfc4      	itt	gt
 80026ba:	3b04      	subgt	r3, #4
 80026bc:	9309      	strgt	r3, [sp, #36]	@ 0x24
 80026be:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80026c0:	f1a3 0302 	sub.w	r3, r3, #2
 80026c4:	bfcc      	ite	gt
 80026c6:	2400      	movgt	r4, #0
 80026c8:	2401      	movle	r4, #1
 80026ca:	2b03      	cmp	r3, #3
 80026cc:	d863      	bhi.n	8002796 <_dtoa_r+0x296>
 80026ce:	e8df f003 	tbb	[pc, r3]
 80026d2:	372a      	.short	0x372a
 80026d4:	5535      	.short	0x5535
 80026d6:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 80026da:	441e      	add	r6, r3
 80026dc:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 80026e0:	2b20      	cmp	r3, #32
 80026e2:	bfc1      	itttt	gt
 80026e4:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 80026e8:	409f      	lslgt	r7, r3
 80026ea:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 80026ee:	fa24 f303 	lsrgt.w	r3, r4, r3
 80026f2:	bfd6      	itet	le
 80026f4:	f1c3 0320 	rsble	r3, r3, #32
 80026f8:	ea47 0003 	orrgt.w	r0, r7, r3
 80026fc:	fa04 f003 	lslle.w	r0, r4, r3
 8002700:	f7fd ff20 	bl	8000544 <__aeabi_ui2d>
 8002704:	2201      	movs	r2, #1
 8002706:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800270a:	3e01      	subs	r6, #1
 800270c:	9214      	str	r2, [sp, #80]	@ 0x50
 800270e:	e777      	b.n	8002600 <_dtoa_r+0x100>
 8002710:	2301      	movs	r3, #1
 8002712:	e7b8      	b.n	8002686 <_dtoa_r+0x186>
 8002714:	9012      	str	r0, [sp, #72]	@ 0x48
 8002716:	e7b7      	b.n	8002688 <_dtoa_r+0x188>
 8002718:	427b      	negs	r3, r7
 800271a:	930a      	str	r3, [sp, #40]	@ 0x28
 800271c:	2300      	movs	r3, #0
 800271e:	eba8 0807 	sub.w	r8, r8, r7
 8002722:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002724:	e7c4      	b.n	80026b0 <_dtoa_r+0x1b0>
 8002726:	2300      	movs	r3, #0
 8002728:	930b      	str	r3, [sp, #44]	@ 0x2c
 800272a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800272c:	2b00      	cmp	r3, #0
 800272e:	dc35      	bgt.n	800279c <_dtoa_r+0x29c>
 8002730:	2301      	movs	r3, #1
 8002732:	9300      	str	r3, [sp, #0]
 8002734:	9307      	str	r3, [sp, #28]
 8002736:	461a      	mov	r2, r3
 8002738:	920e      	str	r2, [sp, #56]	@ 0x38
 800273a:	e00b      	b.n	8002754 <_dtoa_r+0x254>
 800273c:	2301      	movs	r3, #1
 800273e:	e7f3      	b.n	8002728 <_dtoa_r+0x228>
 8002740:	2300      	movs	r3, #0
 8002742:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002744:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002746:	18fb      	adds	r3, r7, r3
 8002748:	9300      	str	r3, [sp, #0]
 800274a:	3301      	adds	r3, #1
 800274c:	2b01      	cmp	r3, #1
 800274e:	9307      	str	r3, [sp, #28]
 8002750:	bfb8      	it	lt
 8002752:	2301      	movlt	r3, #1
 8002754:	f8db 001c 	ldr.w	r0, [fp, #28]
 8002758:	2100      	movs	r1, #0
 800275a:	2204      	movs	r2, #4
 800275c:	f102 0514 	add.w	r5, r2, #20
 8002760:	429d      	cmp	r5, r3
 8002762:	d91f      	bls.n	80027a4 <_dtoa_r+0x2a4>
 8002764:	6041      	str	r1, [r0, #4]
 8002766:	4658      	mov	r0, fp
 8002768:	f000 fd8e 	bl	8003288 <_Balloc>
 800276c:	4682      	mov	sl, r0
 800276e:	2800      	cmp	r0, #0
 8002770:	d13c      	bne.n	80027ec <_dtoa_r+0x2ec>
 8002772:	4b1b      	ldr	r3, [pc, #108]	@ (80027e0 <_dtoa_r+0x2e0>)
 8002774:	4602      	mov	r2, r0
 8002776:	f240 11af 	movw	r1, #431	@ 0x1af
 800277a:	e6d8      	b.n	800252e <_dtoa_r+0x2e>
 800277c:	2301      	movs	r3, #1
 800277e:	e7e0      	b.n	8002742 <_dtoa_r+0x242>
 8002780:	2401      	movs	r4, #1
 8002782:	2300      	movs	r3, #0
 8002784:	9309      	str	r3, [sp, #36]	@ 0x24
 8002786:	940b      	str	r4, [sp, #44]	@ 0x2c
 8002788:	f04f 33ff 	mov.w	r3, #4294967295
 800278c:	9300      	str	r3, [sp, #0]
 800278e:	9307      	str	r3, [sp, #28]
 8002790:	2200      	movs	r2, #0
 8002792:	2312      	movs	r3, #18
 8002794:	e7d0      	b.n	8002738 <_dtoa_r+0x238>
 8002796:	2301      	movs	r3, #1
 8002798:	930b      	str	r3, [sp, #44]	@ 0x2c
 800279a:	e7f5      	b.n	8002788 <_dtoa_r+0x288>
 800279c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800279e:	9300      	str	r3, [sp, #0]
 80027a0:	9307      	str	r3, [sp, #28]
 80027a2:	e7d7      	b.n	8002754 <_dtoa_r+0x254>
 80027a4:	3101      	adds	r1, #1
 80027a6:	0052      	lsls	r2, r2, #1
 80027a8:	e7d8      	b.n	800275c <_dtoa_r+0x25c>
 80027aa:	bf00      	nop
 80027ac:	f3af 8000 	nop.w
 80027b0:	636f4361 	.word	0x636f4361
 80027b4:	3fd287a7 	.word	0x3fd287a7
 80027b8:	8b60c8b3 	.word	0x8b60c8b3
 80027bc:	3fc68a28 	.word	0x3fc68a28
 80027c0:	509f79fb 	.word	0x509f79fb
 80027c4:	3fd34413 	.word	0x3fd34413
 80027c8:	08004758 	.word	0x08004758
 80027cc:	0800476f 	.word	0x0800476f
 80027d0:	7ff00000 	.word	0x7ff00000
 80027d4:	08004728 	.word	0x08004728
 80027d8:	3ff80000 	.word	0x3ff80000
 80027dc:	08004868 	.word	0x08004868
 80027e0:	080047c7 	.word	0x080047c7
 80027e4:	08004754 	.word	0x08004754
 80027e8:	08004727 	.word	0x08004727
 80027ec:	f8db 301c 	ldr.w	r3, [fp, #28]
 80027f0:	6018      	str	r0, [r3, #0]
 80027f2:	9b07      	ldr	r3, [sp, #28]
 80027f4:	2b0e      	cmp	r3, #14
 80027f6:	f200 80a4 	bhi.w	8002942 <_dtoa_r+0x442>
 80027fa:	2c00      	cmp	r4, #0
 80027fc:	f000 80a1 	beq.w	8002942 <_dtoa_r+0x442>
 8002800:	2f00      	cmp	r7, #0
 8002802:	dd33      	ble.n	800286c <_dtoa_r+0x36c>
 8002804:	4bad      	ldr	r3, [pc, #692]	@ (8002abc <_dtoa_r+0x5bc>)
 8002806:	f007 020f 	and.w	r2, r7, #15
 800280a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800280e:	ed93 7b00 	vldr	d7, [r3]
 8002812:	05f8      	lsls	r0, r7, #23
 8002814:	ed8d 7b04 	vstr	d7, [sp, #16]
 8002818:	ea4f 1427 	mov.w	r4, r7, asr #4
 800281c:	d516      	bpl.n	800284c <_dtoa_r+0x34c>
 800281e:	4ba8      	ldr	r3, [pc, #672]	@ (8002ac0 <_dtoa_r+0x5c0>)
 8002820:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002824:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002828:	f7fe f830 	bl	800088c <__aeabi_ddiv>
 800282c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002830:	f004 040f 	and.w	r4, r4, #15
 8002834:	2603      	movs	r6, #3
 8002836:	4da2      	ldr	r5, [pc, #648]	@ (8002ac0 <_dtoa_r+0x5c0>)
 8002838:	b954      	cbnz	r4, 8002850 <_dtoa_r+0x350>
 800283a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800283e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002842:	f7fe f823 	bl	800088c <__aeabi_ddiv>
 8002846:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800284a:	e028      	b.n	800289e <_dtoa_r+0x39e>
 800284c:	2602      	movs	r6, #2
 800284e:	e7f2      	b.n	8002836 <_dtoa_r+0x336>
 8002850:	07e1      	lsls	r1, r4, #31
 8002852:	d508      	bpl.n	8002866 <_dtoa_r+0x366>
 8002854:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8002858:	e9d5 2300 	ldrd	r2, r3, [r5]
 800285c:	f7fd feec 	bl	8000638 <__aeabi_dmul>
 8002860:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8002864:	3601      	adds	r6, #1
 8002866:	1064      	asrs	r4, r4, #1
 8002868:	3508      	adds	r5, #8
 800286a:	e7e5      	b.n	8002838 <_dtoa_r+0x338>
 800286c:	f000 80d2 	beq.w	8002a14 <_dtoa_r+0x514>
 8002870:	427c      	negs	r4, r7
 8002872:	4b92      	ldr	r3, [pc, #584]	@ (8002abc <_dtoa_r+0x5bc>)
 8002874:	4d92      	ldr	r5, [pc, #584]	@ (8002ac0 <_dtoa_r+0x5c0>)
 8002876:	f004 020f 	and.w	r2, r4, #15
 800287a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800287e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002882:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002886:	f7fd fed7 	bl	8000638 <__aeabi_dmul>
 800288a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800288e:	1124      	asrs	r4, r4, #4
 8002890:	2300      	movs	r3, #0
 8002892:	2602      	movs	r6, #2
 8002894:	2c00      	cmp	r4, #0
 8002896:	f040 80b2 	bne.w	80029fe <_dtoa_r+0x4fe>
 800289a:	2b00      	cmp	r3, #0
 800289c:	d1d3      	bne.n	8002846 <_dtoa_r+0x346>
 800289e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80028a0:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80028a4:	2b00      	cmp	r3, #0
 80028a6:	f000 80b7 	beq.w	8002a18 <_dtoa_r+0x518>
 80028aa:	4b86      	ldr	r3, [pc, #536]	@ (8002ac4 <_dtoa_r+0x5c4>)
 80028ac:	2200      	movs	r2, #0
 80028ae:	4620      	mov	r0, r4
 80028b0:	4629      	mov	r1, r5
 80028b2:	f7fe f933 	bl	8000b1c <__aeabi_dcmplt>
 80028b6:	2800      	cmp	r0, #0
 80028b8:	f000 80ae 	beq.w	8002a18 <_dtoa_r+0x518>
 80028bc:	9b07      	ldr	r3, [sp, #28]
 80028be:	2b00      	cmp	r3, #0
 80028c0:	f000 80aa 	beq.w	8002a18 <_dtoa_r+0x518>
 80028c4:	9b00      	ldr	r3, [sp, #0]
 80028c6:	2b00      	cmp	r3, #0
 80028c8:	dd37      	ble.n	800293a <_dtoa_r+0x43a>
 80028ca:	1e7b      	subs	r3, r7, #1
 80028cc:	9304      	str	r3, [sp, #16]
 80028ce:	4620      	mov	r0, r4
 80028d0:	4b7d      	ldr	r3, [pc, #500]	@ (8002ac8 <_dtoa_r+0x5c8>)
 80028d2:	2200      	movs	r2, #0
 80028d4:	4629      	mov	r1, r5
 80028d6:	f7fd feaf 	bl	8000638 <__aeabi_dmul>
 80028da:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80028de:	9c00      	ldr	r4, [sp, #0]
 80028e0:	3601      	adds	r6, #1
 80028e2:	4630      	mov	r0, r6
 80028e4:	f7fd fe3e 	bl	8000564 <__aeabi_i2d>
 80028e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80028ec:	f7fd fea4 	bl	8000638 <__aeabi_dmul>
 80028f0:	4b76      	ldr	r3, [pc, #472]	@ (8002acc <_dtoa_r+0x5cc>)
 80028f2:	2200      	movs	r2, #0
 80028f4:	f7fd fcea 	bl	80002cc <__adddf3>
 80028f8:	4605      	mov	r5, r0
 80028fa:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 80028fe:	2c00      	cmp	r4, #0
 8002900:	f040 808d 	bne.w	8002a1e <_dtoa_r+0x51e>
 8002904:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002908:	4b71      	ldr	r3, [pc, #452]	@ (8002ad0 <_dtoa_r+0x5d0>)
 800290a:	2200      	movs	r2, #0
 800290c:	f7fd fcdc 	bl	80002c8 <__aeabi_dsub>
 8002910:	4602      	mov	r2, r0
 8002912:	460b      	mov	r3, r1
 8002914:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002918:	462a      	mov	r2, r5
 800291a:	4633      	mov	r3, r6
 800291c:	f7fe f91c 	bl	8000b58 <__aeabi_dcmpgt>
 8002920:	2800      	cmp	r0, #0
 8002922:	f040 828b 	bne.w	8002e3c <_dtoa_r+0x93c>
 8002926:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800292a:	462a      	mov	r2, r5
 800292c:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8002930:	f7fe f8f4 	bl	8000b1c <__aeabi_dcmplt>
 8002934:	2800      	cmp	r0, #0
 8002936:	f040 8128 	bne.w	8002b8a <_dtoa_r+0x68a>
 800293a:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 800293e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8002942:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8002944:	2b00      	cmp	r3, #0
 8002946:	f2c0 815a 	blt.w	8002bfe <_dtoa_r+0x6fe>
 800294a:	2f0e      	cmp	r7, #14
 800294c:	f300 8157 	bgt.w	8002bfe <_dtoa_r+0x6fe>
 8002950:	4b5a      	ldr	r3, [pc, #360]	@ (8002abc <_dtoa_r+0x5bc>)
 8002952:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002956:	ed93 7b00 	vldr	d7, [r3]
 800295a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800295c:	2b00      	cmp	r3, #0
 800295e:	ed8d 7b00 	vstr	d7, [sp]
 8002962:	da03      	bge.n	800296c <_dtoa_r+0x46c>
 8002964:	9b07      	ldr	r3, [sp, #28]
 8002966:	2b00      	cmp	r3, #0
 8002968:	f340 8101 	ble.w	8002b6e <_dtoa_r+0x66e>
 800296c:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8002970:	4656      	mov	r6, sl
 8002972:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002976:	4620      	mov	r0, r4
 8002978:	4629      	mov	r1, r5
 800297a:	f7fd ff87 	bl	800088c <__aeabi_ddiv>
 800297e:	f7fe f90b 	bl	8000b98 <__aeabi_d2iz>
 8002982:	4680      	mov	r8, r0
 8002984:	f7fd fdee 	bl	8000564 <__aeabi_i2d>
 8002988:	e9dd 2300 	ldrd	r2, r3, [sp]
 800298c:	f7fd fe54 	bl	8000638 <__aeabi_dmul>
 8002990:	4602      	mov	r2, r0
 8002992:	460b      	mov	r3, r1
 8002994:	4620      	mov	r0, r4
 8002996:	4629      	mov	r1, r5
 8002998:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 800299c:	f7fd fc94 	bl	80002c8 <__aeabi_dsub>
 80029a0:	f806 4b01 	strb.w	r4, [r6], #1
 80029a4:	9d07      	ldr	r5, [sp, #28]
 80029a6:	eba6 040a 	sub.w	r4, r6, sl
 80029aa:	42a5      	cmp	r5, r4
 80029ac:	4602      	mov	r2, r0
 80029ae:	460b      	mov	r3, r1
 80029b0:	f040 8117 	bne.w	8002be2 <_dtoa_r+0x6e2>
 80029b4:	f7fd fc8a 	bl	80002cc <__adddf3>
 80029b8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80029bc:	4604      	mov	r4, r0
 80029be:	460d      	mov	r5, r1
 80029c0:	f7fe f8ca 	bl	8000b58 <__aeabi_dcmpgt>
 80029c4:	2800      	cmp	r0, #0
 80029c6:	f040 80f9 	bne.w	8002bbc <_dtoa_r+0x6bc>
 80029ca:	e9dd 2300 	ldrd	r2, r3, [sp]
 80029ce:	4620      	mov	r0, r4
 80029d0:	4629      	mov	r1, r5
 80029d2:	f7fe f899 	bl	8000b08 <__aeabi_dcmpeq>
 80029d6:	b118      	cbz	r0, 80029e0 <_dtoa_r+0x4e0>
 80029d8:	f018 0f01 	tst.w	r8, #1
 80029dc:	f040 80ee 	bne.w	8002bbc <_dtoa_r+0x6bc>
 80029e0:	4649      	mov	r1, r9
 80029e2:	4658      	mov	r0, fp
 80029e4:	f000 fc90 	bl	8003308 <_Bfree>
 80029e8:	2300      	movs	r3, #0
 80029ea:	7033      	strb	r3, [r6, #0]
 80029ec:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80029ee:	3701      	adds	r7, #1
 80029f0:	601f      	str	r7, [r3, #0]
 80029f2:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80029f4:	2b00      	cmp	r3, #0
 80029f6:	f000 831d 	beq.w	8003034 <_dtoa_r+0xb34>
 80029fa:	601e      	str	r6, [r3, #0]
 80029fc:	e31a      	b.n	8003034 <_dtoa_r+0xb34>
 80029fe:	07e2      	lsls	r2, r4, #31
 8002a00:	d505      	bpl.n	8002a0e <_dtoa_r+0x50e>
 8002a02:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002a06:	f7fd fe17 	bl	8000638 <__aeabi_dmul>
 8002a0a:	3601      	adds	r6, #1
 8002a0c:	2301      	movs	r3, #1
 8002a0e:	1064      	asrs	r4, r4, #1
 8002a10:	3508      	adds	r5, #8
 8002a12:	e73f      	b.n	8002894 <_dtoa_r+0x394>
 8002a14:	2602      	movs	r6, #2
 8002a16:	e742      	b.n	800289e <_dtoa_r+0x39e>
 8002a18:	9c07      	ldr	r4, [sp, #28]
 8002a1a:	9704      	str	r7, [sp, #16]
 8002a1c:	e761      	b.n	80028e2 <_dtoa_r+0x3e2>
 8002a1e:	4b27      	ldr	r3, [pc, #156]	@ (8002abc <_dtoa_r+0x5bc>)
 8002a20:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002a22:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002a26:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002a2a:	4454      	add	r4, sl
 8002a2c:	2900      	cmp	r1, #0
 8002a2e:	d053      	beq.n	8002ad8 <_dtoa_r+0x5d8>
 8002a30:	4928      	ldr	r1, [pc, #160]	@ (8002ad4 <_dtoa_r+0x5d4>)
 8002a32:	2000      	movs	r0, #0
 8002a34:	f7fd ff2a 	bl	800088c <__aeabi_ddiv>
 8002a38:	4633      	mov	r3, r6
 8002a3a:	462a      	mov	r2, r5
 8002a3c:	f7fd fc44 	bl	80002c8 <__aeabi_dsub>
 8002a40:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002a44:	4656      	mov	r6, sl
 8002a46:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a4a:	f7fe f8a5 	bl	8000b98 <__aeabi_d2iz>
 8002a4e:	4605      	mov	r5, r0
 8002a50:	f7fd fd88 	bl	8000564 <__aeabi_i2d>
 8002a54:	4602      	mov	r2, r0
 8002a56:	460b      	mov	r3, r1
 8002a58:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002a5c:	f7fd fc34 	bl	80002c8 <__aeabi_dsub>
 8002a60:	3530      	adds	r5, #48	@ 0x30
 8002a62:	4602      	mov	r2, r0
 8002a64:	460b      	mov	r3, r1
 8002a66:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002a6a:	f806 5b01 	strb.w	r5, [r6], #1
 8002a6e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002a72:	f7fe f853 	bl	8000b1c <__aeabi_dcmplt>
 8002a76:	2800      	cmp	r0, #0
 8002a78:	d171      	bne.n	8002b5e <_dtoa_r+0x65e>
 8002a7a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002a7e:	4911      	ldr	r1, [pc, #68]	@ (8002ac4 <_dtoa_r+0x5c4>)
 8002a80:	2000      	movs	r0, #0
 8002a82:	f7fd fc21 	bl	80002c8 <__aeabi_dsub>
 8002a86:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002a8a:	f7fe f847 	bl	8000b1c <__aeabi_dcmplt>
 8002a8e:	2800      	cmp	r0, #0
 8002a90:	f040 8095 	bne.w	8002bbe <_dtoa_r+0x6be>
 8002a94:	42a6      	cmp	r6, r4
 8002a96:	f43f af50 	beq.w	800293a <_dtoa_r+0x43a>
 8002a9a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002a9e:	4b0a      	ldr	r3, [pc, #40]	@ (8002ac8 <_dtoa_r+0x5c8>)
 8002aa0:	2200      	movs	r2, #0
 8002aa2:	f7fd fdc9 	bl	8000638 <__aeabi_dmul>
 8002aa6:	4b08      	ldr	r3, [pc, #32]	@ (8002ac8 <_dtoa_r+0x5c8>)
 8002aa8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002aac:	2200      	movs	r2, #0
 8002aae:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002ab2:	f7fd fdc1 	bl	8000638 <__aeabi_dmul>
 8002ab6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002aba:	e7c4      	b.n	8002a46 <_dtoa_r+0x546>
 8002abc:	08004868 	.word	0x08004868
 8002ac0:	08004840 	.word	0x08004840
 8002ac4:	3ff00000 	.word	0x3ff00000
 8002ac8:	40240000 	.word	0x40240000
 8002acc:	401c0000 	.word	0x401c0000
 8002ad0:	40140000 	.word	0x40140000
 8002ad4:	3fe00000 	.word	0x3fe00000
 8002ad8:	4631      	mov	r1, r6
 8002ada:	4628      	mov	r0, r5
 8002adc:	f7fd fdac 	bl	8000638 <__aeabi_dmul>
 8002ae0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002ae4:	9415      	str	r4, [sp, #84]	@ 0x54
 8002ae6:	4656      	mov	r6, sl
 8002ae8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002aec:	f7fe f854 	bl	8000b98 <__aeabi_d2iz>
 8002af0:	4605      	mov	r5, r0
 8002af2:	f7fd fd37 	bl	8000564 <__aeabi_i2d>
 8002af6:	4602      	mov	r2, r0
 8002af8:	460b      	mov	r3, r1
 8002afa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002afe:	f7fd fbe3 	bl	80002c8 <__aeabi_dsub>
 8002b02:	3530      	adds	r5, #48	@ 0x30
 8002b04:	f806 5b01 	strb.w	r5, [r6], #1
 8002b08:	4602      	mov	r2, r0
 8002b0a:	460b      	mov	r3, r1
 8002b0c:	42a6      	cmp	r6, r4
 8002b0e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002b12:	f04f 0200 	mov.w	r2, #0
 8002b16:	d124      	bne.n	8002b62 <_dtoa_r+0x662>
 8002b18:	4bac      	ldr	r3, [pc, #688]	@ (8002dcc <_dtoa_r+0x8cc>)
 8002b1a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002b1e:	f7fd fbd5 	bl	80002cc <__adddf3>
 8002b22:	4602      	mov	r2, r0
 8002b24:	460b      	mov	r3, r1
 8002b26:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b2a:	f7fe f815 	bl	8000b58 <__aeabi_dcmpgt>
 8002b2e:	2800      	cmp	r0, #0
 8002b30:	d145      	bne.n	8002bbe <_dtoa_r+0x6be>
 8002b32:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002b36:	49a5      	ldr	r1, [pc, #660]	@ (8002dcc <_dtoa_r+0x8cc>)
 8002b38:	2000      	movs	r0, #0
 8002b3a:	f7fd fbc5 	bl	80002c8 <__aeabi_dsub>
 8002b3e:	4602      	mov	r2, r0
 8002b40:	460b      	mov	r3, r1
 8002b42:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b46:	f7fd ffe9 	bl	8000b1c <__aeabi_dcmplt>
 8002b4a:	2800      	cmp	r0, #0
 8002b4c:	f43f aef5 	beq.w	800293a <_dtoa_r+0x43a>
 8002b50:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8002b52:	1e73      	subs	r3, r6, #1
 8002b54:	9315      	str	r3, [sp, #84]	@ 0x54
 8002b56:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8002b5a:	2b30      	cmp	r3, #48	@ 0x30
 8002b5c:	d0f8      	beq.n	8002b50 <_dtoa_r+0x650>
 8002b5e:	9f04      	ldr	r7, [sp, #16]
 8002b60:	e73e      	b.n	80029e0 <_dtoa_r+0x4e0>
 8002b62:	4b9b      	ldr	r3, [pc, #620]	@ (8002dd0 <_dtoa_r+0x8d0>)
 8002b64:	f7fd fd68 	bl	8000638 <__aeabi_dmul>
 8002b68:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b6c:	e7bc      	b.n	8002ae8 <_dtoa_r+0x5e8>
 8002b6e:	d10c      	bne.n	8002b8a <_dtoa_r+0x68a>
 8002b70:	4b98      	ldr	r3, [pc, #608]	@ (8002dd4 <_dtoa_r+0x8d4>)
 8002b72:	2200      	movs	r2, #0
 8002b74:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002b78:	f7fd fd5e 	bl	8000638 <__aeabi_dmul>
 8002b7c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b80:	f7fd ffe0 	bl	8000b44 <__aeabi_dcmpge>
 8002b84:	2800      	cmp	r0, #0
 8002b86:	f000 8157 	beq.w	8002e38 <_dtoa_r+0x938>
 8002b8a:	2400      	movs	r4, #0
 8002b8c:	4625      	mov	r5, r4
 8002b8e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002b90:	43db      	mvns	r3, r3
 8002b92:	9304      	str	r3, [sp, #16]
 8002b94:	4656      	mov	r6, sl
 8002b96:	2700      	movs	r7, #0
 8002b98:	4621      	mov	r1, r4
 8002b9a:	4658      	mov	r0, fp
 8002b9c:	f000 fbb4 	bl	8003308 <_Bfree>
 8002ba0:	2d00      	cmp	r5, #0
 8002ba2:	d0dc      	beq.n	8002b5e <_dtoa_r+0x65e>
 8002ba4:	b12f      	cbz	r7, 8002bb2 <_dtoa_r+0x6b2>
 8002ba6:	42af      	cmp	r7, r5
 8002ba8:	d003      	beq.n	8002bb2 <_dtoa_r+0x6b2>
 8002baa:	4639      	mov	r1, r7
 8002bac:	4658      	mov	r0, fp
 8002bae:	f000 fbab 	bl	8003308 <_Bfree>
 8002bb2:	4629      	mov	r1, r5
 8002bb4:	4658      	mov	r0, fp
 8002bb6:	f000 fba7 	bl	8003308 <_Bfree>
 8002bba:	e7d0      	b.n	8002b5e <_dtoa_r+0x65e>
 8002bbc:	9704      	str	r7, [sp, #16]
 8002bbe:	4633      	mov	r3, r6
 8002bc0:	461e      	mov	r6, r3
 8002bc2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002bc6:	2a39      	cmp	r2, #57	@ 0x39
 8002bc8:	d107      	bne.n	8002bda <_dtoa_r+0x6da>
 8002bca:	459a      	cmp	sl, r3
 8002bcc:	d1f8      	bne.n	8002bc0 <_dtoa_r+0x6c0>
 8002bce:	9a04      	ldr	r2, [sp, #16]
 8002bd0:	3201      	adds	r2, #1
 8002bd2:	9204      	str	r2, [sp, #16]
 8002bd4:	2230      	movs	r2, #48	@ 0x30
 8002bd6:	f88a 2000 	strb.w	r2, [sl]
 8002bda:	781a      	ldrb	r2, [r3, #0]
 8002bdc:	3201      	adds	r2, #1
 8002bde:	701a      	strb	r2, [r3, #0]
 8002be0:	e7bd      	b.n	8002b5e <_dtoa_r+0x65e>
 8002be2:	4b7b      	ldr	r3, [pc, #492]	@ (8002dd0 <_dtoa_r+0x8d0>)
 8002be4:	2200      	movs	r2, #0
 8002be6:	f7fd fd27 	bl	8000638 <__aeabi_dmul>
 8002bea:	2200      	movs	r2, #0
 8002bec:	2300      	movs	r3, #0
 8002bee:	4604      	mov	r4, r0
 8002bf0:	460d      	mov	r5, r1
 8002bf2:	f7fd ff89 	bl	8000b08 <__aeabi_dcmpeq>
 8002bf6:	2800      	cmp	r0, #0
 8002bf8:	f43f aebb 	beq.w	8002972 <_dtoa_r+0x472>
 8002bfc:	e6f0      	b.n	80029e0 <_dtoa_r+0x4e0>
 8002bfe:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8002c00:	2a00      	cmp	r2, #0
 8002c02:	f000 80db 	beq.w	8002dbc <_dtoa_r+0x8bc>
 8002c06:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002c08:	2a01      	cmp	r2, #1
 8002c0a:	f300 80bf 	bgt.w	8002d8c <_dtoa_r+0x88c>
 8002c0e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8002c10:	2a00      	cmp	r2, #0
 8002c12:	f000 80b7 	beq.w	8002d84 <_dtoa_r+0x884>
 8002c16:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002c1a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002c1c:	4646      	mov	r6, r8
 8002c1e:	9a08      	ldr	r2, [sp, #32]
 8002c20:	2101      	movs	r1, #1
 8002c22:	441a      	add	r2, r3
 8002c24:	4658      	mov	r0, fp
 8002c26:	4498      	add	r8, r3
 8002c28:	9208      	str	r2, [sp, #32]
 8002c2a:	f000 fc21 	bl	8003470 <__i2b>
 8002c2e:	4605      	mov	r5, r0
 8002c30:	b15e      	cbz	r6, 8002c4a <_dtoa_r+0x74a>
 8002c32:	9b08      	ldr	r3, [sp, #32]
 8002c34:	2b00      	cmp	r3, #0
 8002c36:	dd08      	ble.n	8002c4a <_dtoa_r+0x74a>
 8002c38:	42b3      	cmp	r3, r6
 8002c3a:	9a08      	ldr	r2, [sp, #32]
 8002c3c:	bfa8      	it	ge
 8002c3e:	4633      	movge	r3, r6
 8002c40:	eba8 0803 	sub.w	r8, r8, r3
 8002c44:	1af6      	subs	r6, r6, r3
 8002c46:	1ad3      	subs	r3, r2, r3
 8002c48:	9308      	str	r3, [sp, #32]
 8002c4a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002c4c:	b1f3      	cbz	r3, 8002c8c <_dtoa_r+0x78c>
 8002c4e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002c50:	2b00      	cmp	r3, #0
 8002c52:	f000 80b7 	beq.w	8002dc4 <_dtoa_r+0x8c4>
 8002c56:	b18c      	cbz	r4, 8002c7c <_dtoa_r+0x77c>
 8002c58:	4629      	mov	r1, r5
 8002c5a:	4622      	mov	r2, r4
 8002c5c:	4658      	mov	r0, fp
 8002c5e:	f000 fcc7 	bl	80035f0 <__pow5mult>
 8002c62:	464a      	mov	r2, r9
 8002c64:	4601      	mov	r1, r0
 8002c66:	4605      	mov	r5, r0
 8002c68:	4658      	mov	r0, fp
 8002c6a:	f000 fc17 	bl	800349c <__multiply>
 8002c6e:	4649      	mov	r1, r9
 8002c70:	9004      	str	r0, [sp, #16]
 8002c72:	4658      	mov	r0, fp
 8002c74:	f000 fb48 	bl	8003308 <_Bfree>
 8002c78:	9b04      	ldr	r3, [sp, #16]
 8002c7a:	4699      	mov	r9, r3
 8002c7c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002c7e:	1b1a      	subs	r2, r3, r4
 8002c80:	d004      	beq.n	8002c8c <_dtoa_r+0x78c>
 8002c82:	4649      	mov	r1, r9
 8002c84:	4658      	mov	r0, fp
 8002c86:	f000 fcb3 	bl	80035f0 <__pow5mult>
 8002c8a:	4681      	mov	r9, r0
 8002c8c:	2101      	movs	r1, #1
 8002c8e:	4658      	mov	r0, fp
 8002c90:	f000 fbee 	bl	8003470 <__i2b>
 8002c94:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002c96:	4604      	mov	r4, r0
 8002c98:	2b00      	cmp	r3, #0
 8002c9a:	f000 81cf 	beq.w	800303c <_dtoa_r+0xb3c>
 8002c9e:	461a      	mov	r2, r3
 8002ca0:	4601      	mov	r1, r0
 8002ca2:	4658      	mov	r0, fp
 8002ca4:	f000 fca4 	bl	80035f0 <__pow5mult>
 8002ca8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002caa:	2b01      	cmp	r3, #1
 8002cac:	4604      	mov	r4, r0
 8002cae:	f300 8095 	bgt.w	8002ddc <_dtoa_r+0x8dc>
 8002cb2:	9b02      	ldr	r3, [sp, #8]
 8002cb4:	2b00      	cmp	r3, #0
 8002cb6:	f040 8087 	bne.w	8002dc8 <_dtoa_r+0x8c8>
 8002cba:	9b03      	ldr	r3, [sp, #12]
 8002cbc:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002cc0:	2b00      	cmp	r3, #0
 8002cc2:	f040 8089 	bne.w	8002dd8 <_dtoa_r+0x8d8>
 8002cc6:	9b03      	ldr	r3, [sp, #12]
 8002cc8:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002ccc:	0d1b      	lsrs	r3, r3, #20
 8002cce:	051b      	lsls	r3, r3, #20
 8002cd0:	b12b      	cbz	r3, 8002cde <_dtoa_r+0x7de>
 8002cd2:	9b08      	ldr	r3, [sp, #32]
 8002cd4:	3301      	adds	r3, #1
 8002cd6:	9308      	str	r3, [sp, #32]
 8002cd8:	f108 0801 	add.w	r8, r8, #1
 8002cdc:	2301      	movs	r3, #1
 8002cde:	930a      	str	r3, [sp, #40]	@ 0x28
 8002ce0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002ce2:	2b00      	cmp	r3, #0
 8002ce4:	f000 81b0 	beq.w	8003048 <_dtoa_r+0xb48>
 8002ce8:	6923      	ldr	r3, [r4, #16]
 8002cea:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002cee:	6918      	ldr	r0, [r3, #16]
 8002cf0:	f000 fb72 	bl	80033d8 <__hi0bits>
 8002cf4:	f1c0 0020 	rsb	r0, r0, #32
 8002cf8:	9b08      	ldr	r3, [sp, #32]
 8002cfa:	4418      	add	r0, r3
 8002cfc:	f010 001f 	ands.w	r0, r0, #31
 8002d00:	d077      	beq.n	8002df2 <_dtoa_r+0x8f2>
 8002d02:	f1c0 0320 	rsb	r3, r0, #32
 8002d06:	2b04      	cmp	r3, #4
 8002d08:	dd6b      	ble.n	8002de2 <_dtoa_r+0x8e2>
 8002d0a:	9b08      	ldr	r3, [sp, #32]
 8002d0c:	f1c0 001c 	rsb	r0, r0, #28
 8002d10:	4403      	add	r3, r0
 8002d12:	4480      	add	r8, r0
 8002d14:	4406      	add	r6, r0
 8002d16:	9308      	str	r3, [sp, #32]
 8002d18:	f1b8 0f00 	cmp.w	r8, #0
 8002d1c:	dd05      	ble.n	8002d2a <_dtoa_r+0x82a>
 8002d1e:	4649      	mov	r1, r9
 8002d20:	4642      	mov	r2, r8
 8002d22:	4658      	mov	r0, fp
 8002d24:	f000 fcbe 	bl	80036a4 <__lshift>
 8002d28:	4681      	mov	r9, r0
 8002d2a:	9b08      	ldr	r3, [sp, #32]
 8002d2c:	2b00      	cmp	r3, #0
 8002d2e:	dd05      	ble.n	8002d3c <_dtoa_r+0x83c>
 8002d30:	4621      	mov	r1, r4
 8002d32:	461a      	mov	r2, r3
 8002d34:	4658      	mov	r0, fp
 8002d36:	f000 fcb5 	bl	80036a4 <__lshift>
 8002d3a:	4604      	mov	r4, r0
 8002d3c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8002d3e:	2b00      	cmp	r3, #0
 8002d40:	d059      	beq.n	8002df6 <_dtoa_r+0x8f6>
 8002d42:	4621      	mov	r1, r4
 8002d44:	4648      	mov	r0, r9
 8002d46:	f000 fd19 	bl	800377c <__mcmp>
 8002d4a:	2800      	cmp	r0, #0
 8002d4c:	da53      	bge.n	8002df6 <_dtoa_r+0x8f6>
 8002d4e:	1e7b      	subs	r3, r7, #1
 8002d50:	9304      	str	r3, [sp, #16]
 8002d52:	4649      	mov	r1, r9
 8002d54:	2300      	movs	r3, #0
 8002d56:	220a      	movs	r2, #10
 8002d58:	4658      	mov	r0, fp
 8002d5a:	f000 faf7 	bl	800334c <__multadd>
 8002d5e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002d60:	4681      	mov	r9, r0
 8002d62:	2b00      	cmp	r3, #0
 8002d64:	f000 8172 	beq.w	800304c <_dtoa_r+0xb4c>
 8002d68:	2300      	movs	r3, #0
 8002d6a:	4629      	mov	r1, r5
 8002d6c:	220a      	movs	r2, #10
 8002d6e:	4658      	mov	r0, fp
 8002d70:	f000 faec 	bl	800334c <__multadd>
 8002d74:	9b00      	ldr	r3, [sp, #0]
 8002d76:	2b00      	cmp	r3, #0
 8002d78:	4605      	mov	r5, r0
 8002d7a:	dc67      	bgt.n	8002e4c <_dtoa_r+0x94c>
 8002d7c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002d7e:	2b02      	cmp	r3, #2
 8002d80:	dc41      	bgt.n	8002e06 <_dtoa_r+0x906>
 8002d82:	e063      	b.n	8002e4c <_dtoa_r+0x94c>
 8002d84:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002d86:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8002d8a:	e746      	b.n	8002c1a <_dtoa_r+0x71a>
 8002d8c:	9b07      	ldr	r3, [sp, #28]
 8002d8e:	1e5c      	subs	r4, r3, #1
 8002d90:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002d92:	42a3      	cmp	r3, r4
 8002d94:	bfbf      	itttt	lt
 8002d96:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8002d98:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8002d9a:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8002d9c:	1ae3      	sublt	r3, r4, r3
 8002d9e:	bfb4      	ite	lt
 8002da0:	18d2      	addlt	r2, r2, r3
 8002da2:	1b1c      	subge	r4, r3, r4
 8002da4:	9b07      	ldr	r3, [sp, #28]
 8002da6:	bfbc      	itt	lt
 8002da8:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8002daa:	2400      	movlt	r4, #0
 8002dac:	2b00      	cmp	r3, #0
 8002dae:	bfb5      	itete	lt
 8002db0:	eba8 0603 	sublt.w	r6, r8, r3
 8002db4:	9b07      	ldrge	r3, [sp, #28]
 8002db6:	2300      	movlt	r3, #0
 8002db8:	4646      	movge	r6, r8
 8002dba:	e730      	b.n	8002c1e <_dtoa_r+0x71e>
 8002dbc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002dbe:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8002dc0:	4646      	mov	r6, r8
 8002dc2:	e735      	b.n	8002c30 <_dtoa_r+0x730>
 8002dc4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002dc6:	e75c      	b.n	8002c82 <_dtoa_r+0x782>
 8002dc8:	2300      	movs	r3, #0
 8002dca:	e788      	b.n	8002cde <_dtoa_r+0x7de>
 8002dcc:	3fe00000 	.word	0x3fe00000
 8002dd0:	40240000 	.word	0x40240000
 8002dd4:	40140000 	.word	0x40140000
 8002dd8:	9b02      	ldr	r3, [sp, #8]
 8002dda:	e780      	b.n	8002cde <_dtoa_r+0x7de>
 8002ddc:	2300      	movs	r3, #0
 8002dde:	930a      	str	r3, [sp, #40]	@ 0x28
 8002de0:	e782      	b.n	8002ce8 <_dtoa_r+0x7e8>
 8002de2:	d099      	beq.n	8002d18 <_dtoa_r+0x818>
 8002de4:	9a08      	ldr	r2, [sp, #32]
 8002de6:	331c      	adds	r3, #28
 8002de8:	441a      	add	r2, r3
 8002dea:	4498      	add	r8, r3
 8002dec:	441e      	add	r6, r3
 8002dee:	9208      	str	r2, [sp, #32]
 8002df0:	e792      	b.n	8002d18 <_dtoa_r+0x818>
 8002df2:	4603      	mov	r3, r0
 8002df4:	e7f6      	b.n	8002de4 <_dtoa_r+0x8e4>
 8002df6:	9b07      	ldr	r3, [sp, #28]
 8002df8:	9704      	str	r7, [sp, #16]
 8002dfa:	2b00      	cmp	r3, #0
 8002dfc:	dc20      	bgt.n	8002e40 <_dtoa_r+0x940>
 8002dfe:	9300      	str	r3, [sp, #0]
 8002e00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002e02:	2b02      	cmp	r3, #2
 8002e04:	dd1e      	ble.n	8002e44 <_dtoa_r+0x944>
 8002e06:	9b00      	ldr	r3, [sp, #0]
 8002e08:	2b00      	cmp	r3, #0
 8002e0a:	f47f aec0 	bne.w	8002b8e <_dtoa_r+0x68e>
 8002e0e:	4621      	mov	r1, r4
 8002e10:	2205      	movs	r2, #5
 8002e12:	4658      	mov	r0, fp
 8002e14:	f000 fa9a 	bl	800334c <__multadd>
 8002e18:	4601      	mov	r1, r0
 8002e1a:	4604      	mov	r4, r0
 8002e1c:	4648      	mov	r0, r9
 8002e1e:	f000 fcad 	bl	800377c <__mcmp>
 8002e22:	2800      	cmp	r0, #0
 8002e24:	f77f aeb3 	ble.w	8002b8e <_dtoa_r+0x68e>
 8002e28:	4656      	mov	r6, sl
 8002e2a:	2331      	movs	r3, #49	@ 0x31
 8002e2c:	f806 3b01 	strb.w	r3, [r6], #1
 8002e30:	9b04      	ldr	r3, [sp, #16]
 8002e32:	3301      	adds	r3, #1
 8002e34:	9304      	str	r3, [sp, #16]
 8002e36:	e6ae      	b.n	8002b96 <_dtoa_r+0x696>
 8002e38:	9c07      	ldr	r4, [sp, #28]
 8002e3a:	9704      	str	r7, [sp, #16]
 8002e3c:	4625      	mov	r5, r4
 8002e3e:	e7f3      	b.n	8002e28 <_dtoa_r+0x928>
 8002e40:	9b07      	ldr	r3, [sp, #28]
 8002e42:	9300      	str	r3, [sp, #0]
 8002e44:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002e46:	2b00      	cmp	r3, #0
 8002e48:	f000 8104 	beq.w	8003054 <_dtoa_r+0xb54>
 8002e4c:	2e00      	cmp	r6, #0
 8002e4e:	dd05      	ble.n	8002e5c <_dtoa_r+0x95c>
 8002e50:	4629      	mov	r1, r5
 8002e52:	4632      	mov	r2, r6
 8002e54:	4658      	mov	r0, fp
 8002e56:	f000 fc25 	bl	80036a4 <__lshift>
 8002e5a:	4605      	mov	r5, r0
 8002e5c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	d05a      	beq.n	8002f18 <_dtoa_r+0xa18>
 8002e62:	6869      	ldr	r1, [r5, #4]
 8002e64:	4658      	mov	r0, fp
 8002e66:	f000 fa0f 	bl	8003288 <_Balloc>
 8002e6a:	4606      	mov	r6, r0
 8002e6c:	b928      	cbnz	r0, 8002e7a <_dtoa_r+0x97a>
 8002e6e:	4b84      	ldr	r3, [pc, #528]	@ (8003080 <_dtoa_r+0xb80>)
 8002e70:	4602      	mov	r2, r0
 8002e72:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8002e76:	f7ff bb5a 	b.w	800252e <_dtoa_r+0x2e>
 8002e7a:	692a      	ldr	r2, [r5, #16]
 8002e7c:	3202      	adds	r2, #2
 8002e7e:	0092      	lsls	r2, r2, #2
 8002e80:	f105 010c 	add.w	r1, r5, #12
 8002e84:	300c      	adds	r0, #12
 8002e86:	f000 ffaf 	bl	8003de8 <memcpy>
 8002e8a:	2201      	movs	r2, #1
 8002e8c:	4631      	mov	r1, r6
 8002e8e:	4658      	mov	r0, fp
 8002e90:	f000 fc08 	bl	80036a4 <__lshift>
 8002e94:	f10a 0301 	add.w	r3, sl, #1
 8002e98:	9307      	str	r3, [sp, #28]
 8002e9a:	9b00      	ldr	r3, [sp, #0]
 8002e9c:	4453      	add	r3, sl
 8002e9e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002ea0:	9b02      	ldr	r3, [sp, #8]
 8002ea2:	f003 0301 	and.w	r3, r3, #1
 8002ea6:	462f      	mov	r7, r5
 8002ea8:	930a      	str	r3, [sp, #40]	@ 0x28
 8002eaa:	4605      	mov	r5, r0
 8002eac:	9b07      	ldr	r3, [sp, #28]
 8002eae:	4621      	mov	r1, r4
 8002eb0:	3b01      	subs	r3, #1
 8002eb2:	4648      	mov	r0, r9
 8002eb4:	9300      	str	r3, [sp, #0]
 8002eb6:	f7ff fa98 	bl	80023ea <quorem>
 8002eba:	4639      	mov	r1, r7
 8002ebc:	9002      	str	r0, [sp, #8]
 8002ebe:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8002ec2:	4648      	mov	r0, r9
 8002ec4:	f000 fc5a 	bl	800377c <__mcmp>
 8002ec8:	462a      	mov	r2, r5
 8002eca:	9008      	str	r0, [sp, #32]
 8002ecc:	4621      	mov	r1, r4
 8002ece:	4658      	mov	r0, fp
 8002ed0:	f000 fc70 	bl	80037b4 <__mdiff>
 8002ed4:	68c2      	ldr	r2, [r0, #12]
 8002ed6:	4606      	mov	r6, r0
 8002ed8:	bb02      	cbnz	r2, 8002f1c <_dtoa_r+0xa1c>
 8002eda:	4601      	mov	r1, r0
 8002edc:	4648      	mov	r0, r9
 8002ede:	f000 fc4d 	bl	800377c <__mcmp>
 8002ee2:	4602      	mov	r2, r0
 8002ee4:	4631      	mov	r1, r6
 8002ee6:	4658      	mov	r0, fp
 8002ee8:	920e      	str	r2, [sp, #56]	@ 0x38
 8002eea:	f000 fa0d 	bl	8003308 <_Bfree>
 8002eee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002ef0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8002ef2:	9e07      	ldr	r6, [sp, #28]
 8002ef4:	ea43 0102 	orr.w	r1, r3, r2
 8002ef8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002efa:	4319      	orrs	r1, r3
 8002efc:	d110      	bne.n	8002f20 <_dtoa_r+0xa20>
 8002efe:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002f02:	d029      	beq.n	8002f58 <_dtoa_r+0xa58>
 8002f04:	9b08      	ldr	r3, [sp, #32]
 8002f06:	2b00      	cmp	r3, #0
 8002f08:	dd02      	ble.n	8002f10 <_dtoa_r+0xa10>
 8002f0a:	9b02      	ldr	r3, [sp, #8]
 8002f0c:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8002f10:	9b00      	ldr	r3, [sp, #0]
 8002f12:	f883 8000 	strb.w	r8, [r3]
 8002f16:	e63f      	b.n	8002b98 <_dtoa_r+0x698>
 8002f18:	4628      	mov	r0, r5
 8002f1a:	e7bb      	b.n	8002e94 <_dtoa_r+0x994>
 8002f1c:	2201      	movs	r2, #1
 8002f1e:	e7e1      	b.n	8002ee4 <_dtoa_r+0x9e4>
 8002f20:	9b08      	ldr	r3, [sp, #32]
 8002f22:	2b00      	cmp	r3, #0
 8002f24:	db04      	blt.n	8002f30 <_dtoa_r+0xa30>
 8002f26:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8002f28:	430b      	orrs	r3, r1
 8002f2a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8002f2c:	430b      	orrs	r3, r1
 8002f2e:	d120      	bne.n	8002f72 <_dtoa_r+0xa72>
 8002f30:	2a00      	cmp	r2, #0
 8002f32:	dded      	ble.n	8002f10 <_dtoa_r+0xa10>
 8002f34:	4649      	mov	r1, r9
 8002f36:	2201      	movs	r2, #1
 8002f38:	4658      	mov	r0, fp
 8002f3a:	f000 fbb3 	bl	80036a4 <__lshift>
 8002f3e:	4621      	mov	r1, r4
 8002f40:	4681      	mov	r9, r0
 8002f42:	f000 fc1b 	bl	800377c <__mcmp>
 8002f46:	2800      	cmp	r0, #0
 8002f48:	dc03      	bgt.n	8002f52 <_dtoa_r+0xa52>
 8002f4a:	d1e1      	bne.n	8002f10 <_dtoa_r+0xa10>
 8002f4c:	f018 0f01 	tst.w	r8, #1
 8002f50:	d0de      	beq.n	8002f10 <_dtoa_r+0xa10>
 8002f52:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002f56:	d1d8      	bne.n	8002f0a <_dtoa_r+0xa0a>
 8002f58:	9a00      	ldr	r2, [sp, #0]
 8002f5a:	2339      	movs	r3, #57	@ 0x39
 8002f5c:	7013      	strb	r3, [r2, #0]
 8002f5e:	4633      	mov	r3, r6
 8002f60:	461e      	mov	r6, r3
 8002f62:	3b01      	subs	r3, #1
 8002f64:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8002f68:	2a39      	cmp	r2, #57	@ 0x39
 8002f6a:	d052      	beq.n	8003012 <_dtoa_r+0xb12>
 8002f6c:	3201      	adds	r2, #1
 8002f6e:	701a      	strb	r2, [r3, #0]
 8002f70:	e612      	b.n	8002b98 <_dtoa_r+0x698>
 8002f72:	2a00      	cmp	r2, #0
 8002f74:	dd07      	ble.n	8002f86 <_dtoa_r+0xa86>
 8002f76:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002f7a:	d0ed      	beq.n	8002f58 <_dtoa_r+0xa58>
 8002f7c:	9a00      	ldr	r2, [sp, #0]
 8002f7e:	f108 0301 	add.w	r3, r8, #1
 8002f82:	7013      	strb	r3, [r2, #0]
 8002f84:	e608      	b.n	8002b98 <_dtoa_r+0x698>
 8002f86:	9b07      	ldr	r3, [sp, #28]
 8002f88:	9a07      	ldr	r2, [sp, #28]
 8002f8a:	f803 8c01 	strb.w	r8, [r3, #-1]
 8002f8e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002f90:	4293      	cmp	r3, r2
 8002f92:	d028      	beq.n	8002fe6 <_dtoa_r+0xae6>
 8002f94:	4649      	mov	r1, r9
 8002f96:	2300      	movs	r3, #0
 8002f98:	220a      	movs	r2, #10
 8002f9a:	4658      	mov	r0, fp
 8002f9c:	f000 f9d6 	bl	800334c <__multadd>
 8002fa0:	42af      	cmp	r7, r5
 8002fa2:	4681      	mov	r9, r0
 8002fa4:	f04f 0300 	mov.w	r3, #0
 8002fa8:	f04f 020a 	mov.w	r2, #10
 8002fac:	4639      	mov	r1, r7
 8002fae:	4658      	mov	r0, fp
 8002fb0:	d107      	bne.n	8002fc2 <_dtoa_r+0xac2>
 8002fb2:	f000 f9cb 	bl	800334c <__multadd>
 8002fb6:	4607      	mov	r7, r0
 8002fb8:	4605      	mov	r5, r0
 8002fba:	9b07      	ldr	r3, [sp, #28]
 8002fbc:	3301      	adds	r3, #1
 8002fbe:	9307      	str	r3, [sp, #28]
 8002fc0:	e774      	b.n	8002eac <_dtoa_r+0x9ac>
 8002fc2:	f000 f9c3 	bl	800334c <__multadd>
 8002fc6:	4629      	mov	r1, r5
 8002fc8:	4607      	mov	r7, r0
 8002fca:	2300      	movs	r3, #0
 8002fcc:	220a      	movs	r2, #10
 8002fce:	4658      	mov	r0, fp
 8002fd0:	f000 f9bc 	bl	800334c <__multadd>
 8002fd4:	4605      	mov	r5, r0
 8002fd6:	e7f0      	b.n	8002fba <_dtoa_r+0xaba>
 8002fd8:	9b00      	ldr	r3, [sp, #0]
 8002fda:	2b00      	cmp	r3, #0
 8002fdc:	bfcc      	ite	gt
 8002fde:	461e      	movgt	r6, r3
 8002fe0:	2601      	movle	r6, #1
 8002fe2:	4456      	add	r6, sl
 8002fe4:	2700      	movs	r7, #0
 8002fe6:	4649      	mov	r1, r9
 8002fe8:	2201      	movs	r2, #1
 8002fea:	4658      	mov	r0, fp
 8002fec:	f000 fb5a 	bl	80036a4 <__lshift>
 8002ff0:	4621      	mov	r1, r4
 8002ff2:	4681      	mov	r9, r0
 8002ff4:	f000 fbc2 	bl	800377c <__mcmp>
 8002ff8:	2800      	cmp	r0, #0
 8002ffa:	dcb0      	bgt.n	8002f5e <_dtoa_r+0xa5e>
 8002ffc:	d102      	bne.n	8003004 <_dtoa_r+0xb04>
 8002ffe:	f018 0f01 	tst.w	r8, #1
 8003002:	d1ac      	bne.n	8002f5e <_dtoa_r+0xa5e>
 8003004:	4633      	mov	r3, r6
 8003006:	461e      	mov	r6, r3
 8003008:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800300c:	2a30      	cmp	r2, #48	@ 0x30
 800300e:	d0fa      	beq.n	8003006 <_dtoa_r+0xb06>
 8003010:	e5c2      	b.n	8002b98 <_dtoa_r+0x698>
 8003012:	459a      	cmp	sl, r3
 8003014:	d1a4      	bne.n	8002f60 <_dtoa_r+0xa60>
 8003016:	9b04      	ldr	r3, [sp, #16]
 8003018:	3301      	adds	r3, #1
 800301a:	9304      	str	r3, [sp, #16]
 800301c:	2331      	movs	r3, #49	@ 0x31
 800301e:	f88a 3000 	strb.w	r3, [sl]
 8003022:	e5b9      	b.n	8002b98 <_dtoa_r+0x698>
 8003024:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8003026:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8003084 <_dtoa_r+0xb84>
 800302a:	b11b      	cbz	r3, 8003034 <_dtoa_r+0xb34>
 800302c:	f10a 0308 	add.w	r3, sl, #8
 8003030:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8003032:	6013      	str	r3, [r2, #0]
 8003034:	4650      	mov	r0, sl
 8003036:	b019      	add	sp, #100	@ 0x64
 8003038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800303c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800303e:	2b01      	cmp	r3, #1
 8003040:	f77f ae37 	ble.w	8002cb2 <_dtoa_r+0x7b2>
 8003044:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003046:	930a      	str	r3, [sp, #40]	@ 0x28
 8003048:	2001      	movs	r0, #1
 800304a:	e655      	b.n	8002cf8 <_dtoa_r+0x7f8>
 800304c:	9b00      	ldr	r3, [sp, #0]
 800304e:	2b00      	cmp	r3, #0
 8003050:	f77f aed6 	ble.w	8002e00 <_dtoa_r+0x900>
 8003054:	4656      	mov	r6, sl
 8003056:	4621      	mov	r1, r4
 8003058:	4648      	mov	r0, r9
 800305a:	f7ff f9c6 	bl	80023ea <quorem>
 800305e:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8003062:	f806 8b01 	strb.w	r8, [r6], #1
 8003066:	9b00      	ldr	r3, [sp, #0]
 8003068:	eba6 020a 	sub.w	r2, r6, sl
 800306c:	4293      	cmp	r3, r2
 800306e:	ddb3      	ble.n	8002fd8 <_dtoa_r+0xad8>
 8003070:	4649      	mov	r1, r9
 8003072:	2300      	movs	r3, #0
 8003074:	220a      	movs	r2, #10
 8003076:	4658      	mov	r0, fp
 8003078:	f000 f968 	bl	800334c <__multadd>
 800307c:	4681      	mov	r9, r0
 800307e:	e7ea      	b.n	8003056 <_dtoa_r+0xb56>
 8003080:	080047c7 	.word	0x080047c7
 8003084:	0800474b 	.word	0x0800474b

08003088 <_free_r>:
 8003088:	b538      	push	{r3, r4, r5, lr}
 800308a:	4605      	mov	r5, r0
 800308c:	2900      	cmp	r1, #0
 800308e:	d041      	beq.n	8003114 <_free_r+0x8c>
 8003090:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003094:	1f0c      	subs	r4, r1, #4
 8003096:	2b00      	cmp	r3, #0
 8003098:	bfb8      	it	lt
 800309a:	18e4      	addlt	r4, r4, r3
 800309c:	f000 f8e8 	bl	8003270 <__malloc_lock>
 80030a0:	4a1d      	ldr	r2, [pc, #116]	@ (8003118 <_free_r+0x90>)
 80030a2:	6813      	ldr	r3, [r2, #0]
 80030a4:	b933      	cbnz	r3, 80030b4 <_free_r+0x2c>
 80030a6:	6063      	str	r3, [r4, #4]
 80030a8:	6014      	str	r4, [r2, #0]
 80030aa:	4628      	mov	r0, r5
 80030ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80030b0:	f000 b8e4 	b.w	800327c <__malloc_unlock>
 80030b4:	42a3      	cmp	r3, r4
 80030b6:	d908      	bls.n	80030ca <_free_r+0x42>
 80030b8:	6820      	ldr	r0, [r4, #0]
 80030ba:	1821      	adds	r1, r4, r0
 80030bc:	428b      	cmp	r3, r1
 80030be:	bf01      	itttt	eq
 80030c0:	6819      	ldreq	r1, [r3, #0]
 80030c2:	685b      	ldreq	r3, [r3, #4]
 80030c4:	1809      	addeq	r1, r1, r0
 80030c6:	6021      	streq	r1, [r4, #0]
 80030c8:	e7ed      	b.n	80030a6 <_free_r+0x1e>
 80030ca:	461a      	mov	r2, r3
 80030cc:	685b      	ldr	r3, [r3, #4]
 80030ce:	b10b      	cbz	r3, 80030d4 <_free_r+0x4c>
 80030d0:	42a3      	cmp	r3, r4
 80030d2:	d9fa      	bls.n	80030ca <_free_r+0x42>
 80030d4:	6811      	ldr	r1, [r2, #0]
 80030d6:	1850      	adds	r0, r2, r1
 80030d8:	42a0      	cmp	r0, r4
 80030da:	d10b      	bne.n	80030f4 <_free_r+0x6c>
 80030dc:	6820      	ldr	r0, [r4, #0]
 80030de:	4401      	add	r1, r0
 80030e0:	1850      	adds	r0, r2, r1
 80030e2:	4283      	cmp	r3, r0
 80030e4:	6011      	str	r1, [r2, #0]
 80030e6:	d1e0      	bne.n	80030aa <_free_r+0x22>
 80030e8:	6818      	ldr	r0, [r3, #0]
 80030ea:	685b      	ldr	r3, [r3, #4]
 80030ec:	6053      	str	r3, [r2, #4]
 80030ee:	4408      	add	r0, r1
 80030f0:	6010      	str	r0, [r2, #0]
 80030f2:	e7da      	b.n	80030aa <_free_r+0x22>
 80030f4:	d902      	bls.n	80030fc <_free_r+0x74>
 80030f6:	230c      	movs	r3, #12
 80030f8:	602b      	str	r3, [r5, #0]
 80030fa:	e7d6      	b.n	80030aa <_free_r+0x22>
 80030fc:	6820      	ldr	r0, [r4, #0]
 80030fe:	1821      	adds	r1, r4, r0
 8003100:	428b      	cmp	r3, r1
 8003102:	bf04      	itt	eq
 8003104:	6819      	ldreq	r1, [r3, #0]
 8003106:	685b      	ldreq	r3, [r3, #4]
 8003108:	6063      	str	r3, [r4, #4]
 800310a:	bf04      	itt	eq
 800310c:	1809      	addeq	r1, r1, r0
 800310e:	6021      	streq	r1, [r4, #0]
 8003110:	6054      	str	r4, [r2, #4]
 8003112:	e7ca      	b.n	80030aa <_free_r+0x22>
 8003114:	bd38      	pop	{r3, r4, r5, pc}
 8003116:	bf00      	nop
 8003118:	20000384 	.word	0x20000384

0800311c <malloc>:
 800311c:	4b02      	ldr	r3, [pc, #8]	@ (8003128 <malloc+0xc>)
 800311e:	4601      	mov	r1, r0
 8003120:	6818      	ldr	r0, [r3, #0]
 8003122:	f000 b825 	b.w	8003170 <_malloc_r>
 8003126:	bf00      	nop
 8003128:	2000000c 	.word	0x2000000c

0800312c <sbrk_aligned>:
 800312c:	b570      	push	{r4, r5, r6, lr}
 800312e:	4e0f      	ldr	r6, [pc, #60]	@ (800316c <sbrk_aligned+0x40>)
 8003130:	460c      	mov	r4, r1
 8003132:	6831      	ldr	r1, [r6, #0]
 8003134:	4605      	mov	r5, r0
 8003136:	b911      	cbnz	r1, 800313e <sbrk_aligned+0x12>
 8003138:	f000 fe46 	bl	8003dc8 <_sbrk_r>
 800313c:	6030      	str	r0, [r6, #0]
 800313e:	4621      	mov	r1, r4
 8003140:	4628      	mov	r0, r5
 8003142:	f000 fe41 	bl	8003dc8 <_sbrk_r>
 8003146:	1c43      	adds	r3, r0, #1
 8003148:	d103      	bne.n	8003152 <sbrk_aligned+0x26>
 800314a:	f04f 34ff 	mov.w	r4, #4294967295
 800314e:	4620      	mov	r0, r4
 8003150:	bd70      	pop	{r4, r5, r6, pc}
 8003152:	1cc4      	adds	r4, r0, #3
 8003154:	f024 0403 	bic.w	r4, r4, #3
 8003158:	42a0      	cmp	r0, r4
 800315a:	d0f8      	beq.n	800314e <sbrk_aligned+0x22>
 800315c:	1a21      	subs	r1, r4, r0
 800315e:	4628      	mov	r0, r5
 8003160:	f000 fe32 	bl	8003dc8 <_sbrk_r>
 8003164:	3001      	adds	r0, #1
 8003166:	d1f2      	bne.n	800314e <sbrk_aligned+0x22>
 8003168:	e7ef      	b.n	800314a <sbrk_aligned+0x1e>
 800316a:	bf00      	nop
 800316c:	20000380 	.word	0x20000380

08003170 <_malloc_r>:
 8003170:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003174:	1ccd      	adds	r5, r1, #3
 8003176:	f025 0503 	bic.w	r5, r5, #3
 800317a:	3508      	adds	r5, #8
 800317c:	2d0c      	cmp	r5, #12
 800317e:	bf38      	it	cc
 8003180:	250c      	movcc	r5, #12
 8003182:	2d00      	cmp	r5, #0
 8003184:	4606      	mov	r6, r0
 8003186:	db01      	blt.n	800318c <_malloc_r+0x1c>
 8003188:	42a9      	cmp	r1, r5
 800318a:	d904      	bls.n	8003196 <_malloc_r+0x26>
 800318c:	230c      	movs	r3, #12
 800318e:	6033      	str	r3, [r6, #0]
 8003190:	2000      	movs	r0, #0
 8003192:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003196:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800326c <_malloc_r+0xfc>
 800319a:	f000 f869 	bl	8003270 <__malloc_lock>
 800319e:	f8d8 3000 	ldr.w	r3, [r8]
 80031a2:	461c      	mov	r4, r3
 80031a4:	bb44      	cbnz	r4, 80031f8 <_malloc_r+0x88>
 80031a6:	4629      	mov	r1, r5
 80031a8:	4630      	mov	r0, r6
 80031aa:	f7ff ffbf 	bl	800312c <sbrk_aligned>
 80031ae:	1c43      	adds	r3, r0, #1
 80031b0:	4604      	mov	r4, r0
 80031b2:	d158      	bne.n	8003266 <_malloc_r+0xf6>
 80031b4:	f8d8 4000 	ldr.w	r4, [r8]
 80031b8:	4627      	mov	r7, r4
 80031ba:	2f00      	cmp	r7, #0
 80031bc:	d143      	bne.n	8003246 <_malloc_r+0xd6>
 80031be:	2c00      	cmp	r4, #0
 80031c0:	d04b      	beq.n	800325a <_malloc_r+0xea>
 80031c2:	6823      	ldr	r3, [r4, #0]
 80031c4:	4639      	mov	r1, r7
 80031c6:	4630      	mov	r0, r6
 80031c8:	eb04 0903 	add.w	r9, r4, r3
 80031cc:	f000 fdfc 	bl	8003dc8 <_sbrk_r>
 80031d0:	4581      	cmp	r9, r0
 80031d2:	d142      	bne.n	800325a <_malloc_r+0xea>
 80031d4:	6821      	ldr	r1, [r4, #0]
 80031d6:	1a6d      	subs	r5, r5, r1
 80031d8:	4629      	mov	r1, r5
 80031da:	4630      	mov	r0, r6
 80031dc:	f7ff ffa6 	bl	800312c <sbrk_aligned>
 80031e0:	3001      	adds	r0, #1
 80031e2:	d03a      	beq.n	800325a <_malloc_r+0xea>
 80031e4:	6823      	ldr	r3, [r4, #0]
 80031e6:	442b      	add	r3, r5
 80031e8:	6023      	str	r3, [r4, #0]
 80031ea:	f8d8 3000 	ldr.w	r3, [r8]
 80031ee:	685a      	ldr	r2, [r3, #4]
 80031f0:	bb62      	cbnz	r2, 800324c <_malloc_r+0xdc>
 80031f2:	f8c8 7000 	str.w	r7, [r8]
 80031f6:	e00f      	b.n	8003218 <_malloc_r+0xa8>
 80031f8:	6822      	ldr	r2, [r4, #0]
 80031fa:	1b52      	subs	r2, r2, r5
 80031fc:	d420      	bmi.n	8003240 <_malloc_r+0xd0>
 80031fe:	2a0b      	cmp	r2, #11
 8003200:	d917      	bls.n	8003232 <_malloc_r+0xc2>
 8003202:	1961      	adds	r1, r4, r5
 8003204:	42a3      	cmp	r3, r4
 8003206:	6025      	str	r5, [r4, #0]
 8003208:	bf18      	it	ne
 800320a:	6059      	strne	r1, [r3, #4]
 800320c:	6863      	ldr	r3, [r4, #4]
 800320e:	bf08      	it	eq
 8003210:	f8c8 1000 	streq.w	r1, [r8]
 8003214:	5162      	str	r2, [r4, r5]
 8003216:	604b      	str	r3, [r1, #4]
 8003218:	4630      	mov	r0, r6
 800321a:	f000 f82f 	bl	800327c <__malloc_unlock>
 800321e:	f104 000b 	add.w	r0, r4, #11
 8003222:	1d23      	adds	r3, r4, #4
 8003224:	f020 0007 	bic.w	r0, r0, #7
 8003228:	1ac2      	subs	r2, r0, r3
 800322a:	bf1c      	itt	ne
 800322c:	1a1b      	subne	r3, r3, r0
 800322e:	50a3      	strne	r3, [r4, r2]
 8003230:	e7af      	b.n	8003192 <_malloc_r+0x22>
 8003232:	6862      	ldr	r2, [r4, #4]
 8003234:	42a3      	cmp	r3, r4
 8003236:	bf0c      	ite	eq
 8003238:	f8c8 2000 	streq.w	r2, [r8]
 800323c:	605a      	strne	r2, [r3, #4]
 800323e:	e7eb      	b.n	8003218 <_malloc_r+0xa8>
 8003240:	4623      	mov	r3, r4
 8003242:	6864      	ldr	r4, [r4, #4]
 8003244:	e7ae      	b.n	80031a4 <_malloc_r+0x34>
 8003246:	463c      	mov	r4, r7
 8003248:	687f      	ldr	r7, [r7, #4]
 800324a:	e7b6      	b.n	80031ba <_malloc_r+0x4a>
 800324c:	461a      	mov	r2, r3
 800324e:	685b      	ldr	r3, [r3, #4]
 8003250:	42a3      	cmp	r3, r4
 8003252:	d1fb      	bne.n	800324c <_malloc_r+0xdc>
 8003254:	2300      	movs	r3, #0
 8003256:	6053      	str	r3, [r2, #4]
 8003258:	e7de      	b.n	8003218 <_malloc_r+0xa8>
 800325a:	230c      	movs	r3, #12
 800325c:	6033      	str	r3, [r6, #0]
 800325e:	4630      	mov	r0, r6
 8003260:	f000 f80c 	bl	800327c <__malloc_unlock>
 8003264:	e794      	b.n	8003190 <_malloc_r+0x20>
 8003266:	6005      	str	r5, [r0, #0]
 8003268:	e7d6      	b.n	8003218 <_malloc_r+0xa8>
 800326a:	bf00      	nop
 800326c:	20000384 	.word	0x20000384

08003270 <__malloc_lock>:
 8003270:	4801      	ldr	r0, [pc, #4]	@ (8003278 <__malloc_lock+0x8>)
 8003272:	f7ff b8b8 	b.w	80023e6 <__retarget_lock_acquire_recursive>
 8003276:	bf00      	nop
 8003278:	2000037c 	.word	0x2000037c

0800327c <__malloc_unlock>:
 800327c:	4801      	ldr	r0, [pc, #4]	@ (8003284 <__malloc_unlock+0x8>)
 800327e:	f7ff b8b3 	b.w	80023e8 <__retarget_lock_release_recursive>
 8003282:	bf00      	nop
 8003284:	2000037c 	.word	0x2000037c

08003288 <_Balloc>:
 8003288:	b570      	push	{r4, r5, r6, lr}
 800328a:	69c6      	ldr	r6, [r0, #28]
 800328c:	4604      	mov	r4, r0
 800328e:	460d      	mov	r5, r1
 8003290:	b976      	cbnz	r6, 80032b0 <_Balloc+0x28>
 8003292:	2010      	movs	r0, #16
 8003294:	f7ff ff42 	bl	800311c <malloc>
 8003298:	4602      	mov	r2, r0
 800329a:	61e0      	str	r0, [r4, #28]
 800329c:	b920      	cbnz	r0, 80032a8 <_Balloc+0x20>
 800329e:	4b18      	ldr	r3, [pc, #96]	@ (8003300 <_Balloc+0x78>)
 80032a0:	4818      	ldr	r0, [pc, #96]	@ (8003304 <_Balloc+0x7c>)
 80032a2:	216b      	movs	r1, #107	@ 0x6b
 80032a4:	f000 fdae 	bl	8003e04 <__assert_func>
 80032a8:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80032ac:	6006      	str	r6, [r0, #0]
 80032ae:	60c6      	str	r6, [r0, #12]
 80032b0:	69e6      	ldr	r6, [r4, #28]
 80032b2:	68f3      	ldr	r3, [r6, #12]
 80032b4:	b183      	cbz	r3, 80032d8 <_Balloc+0x50>
 80032b6:	69e3      	ldr	r3, [r4, #28]
 80032b8:	68db      	ldr	r3, [r3, #12]
 80032ba:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80032be:	b9b8      	cbnz	r0, 80032f0 <_Balloc+0x68>
 80032c0:	2101      	movs	r1, #1
 80032c2:	fa01 f605 	lsl.w	r6, r1, r5
 80032c6:	1d72      	adds	r2, r6, #5
 80032c8:	0092      	lsls	r2, r2, #2
 80032ca:	4620      	mov	r0, r4
 80032cc:	f000 fdb8 	bl	8003e40 <_calloc_r>
 80032d0:	b160      	cbz	r0, 80032ec <_Balloc+0x64>
 80032d2:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80032d6:	e00e      	b.n	80032f6 <_Balloc+0x6e>
 80032d8:	2221      	movs	r2, #33	@ 0x21
 80032da:	2104      	movs	r1, #4
 80032dc:	4620      	mov	r0, r4
 80032de:	f000 fdaf 	bl	8003e40 <_calloc_r>
 80032e2:	69e3      	ldr	r3, [r4, #28]
 80032e4:	60f0      	str	r0, [r6, #12]
 80032e6:	68db      	ldr	r3, [r3, #12]
 80032e8:	2b00      	cmp	r3, #0
 80032ea:	d1e4      	bne.n	80032b6 <_Balloc+0x2e>
 80032ec:	2000      	movs	r0, #0
 80032ee:	bd70      	pop	{r4, r5, r6, pc}
 80032f0:	6802      	ldr	r2, [r0, #0]
 80032f2:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80032f6:	2300      	movs	r3, #0
 80032f8:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80032fc:	e7f7      	b.n	80032ee <_Balloc+0x66>
 80032fe:	bf00      	nop
 8003300:	08004758 	.word	0x08004758
 8003304:	080047d8 	.word	0x080047d8

08003308 <_Bfree>:
 8003308:	b570      	push	{r4, r5, r6, lr}
 800330a:	69c6      	ldr	r6, [r0, #28]
 800330c:	4605      	mov	r5, r0
 800330e:	460c      	mov	r4, r1
 8003310:	b976      	cbnz	r6, 8003330 <_Bfree+0x28>
 8003312:	2010      	movs	r0, #16
 8003314:	f7ff ff02 	bl	800311c <malloc>
 8003318:	4602      	mov	r2, r0
 800331a:	61e8      	str	r0, [r5, #28]
 800331c:	b920      	cbnz	r0, 8003328 <_Bfree+0x20>
 800331e:	4b09      	ldr	r3, [pc, #36]	@ (8003344 <_Bfree+0x3c>)
 8003320:	4809      	ldr	r0, [pc, #36]	@ (8003348 <_Bfree+0x40>)
 8003322:	218f      	movs	r1, #143	@ 0x8f
 8003324:	f000 fd6e 	bl	8003e04 <__assert_func>
 8003328:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800332c:	6006      	str	r6, [r0, #0]
 800332e:	60c6      	str	r6, [r0, #12]
 8003330:	b13c      	cbz	r4, 8003342 <_Bfree+0x3a>
 8003332:	69eb      	ldr	r3, [r5, #28]
 8003334:	6862      	ldr	r2, [r4, #4]
 8003336:	68db      	ldr	r3, [r3, #12]
 8003338:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800333c:	6021      	str	r1, [r4, #0]
 800333e:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003342:	bd70      	pop	{r4, r5, r6, pc}
 8003344:	08004758 	.word	0x08004758
 8003348:	080047d8 	.word	0x080047d8

0800334c <__multadd>:
 800334c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003350:	690d      	ldr	r5, [r1, #16]
 8003352:	4607      	mov	r7, r0
 8003354:	460c      	mov	r4, r1
 8003356:	461e      	mov	r6, r3
 8003358:	f101 0c14 	add.w	ip, r1, #20
 800335c:	2000      	movs	r0, #0
 800335e:	f8dc 3000 	ldr.w	r3, [ip]
 8003362:	b299      	uxth	r1, r3
 8003364:	fb02 6101 	mla	r1, r2, r1, r6
 8003368:	0c1e      	lsrs	r6, r3, #16
 800336a:	0c0b      	lsrs	r3, r1, #16
 800336c:	fb02 3306 	mla	r3, r2, r6, r3
 8003370:	b289      	uxth	r1, r1
 8003372:	3001      	adds	r0, #1
 8003374:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003378:	4285      	cmp	r5, r0
 800337a:	f84c 1b04 	str.w	r1, [ip], #4
 800337e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003382:	dcec      	bgt.n	800335e <__multadd+0x12>
 8003384:	b30e      	cbz	r6, 80033ca <__multadd+0x7e>
 8003386:	68a3      	ldr	r3, [r4, #8]
 8003388:	42ab      	cmp	r3, r5
 800338a:	dc19      	bgt.n	80033c0 <__multadd+0x74>
 800338c:	6861      	ldr	r1, [r4, #4]
 800338e:	4638      	mov	r0, r7
 8003390:	3101      	adds	r1, #1
 8003392:	f7ff ff79 	bl	8003288 <_Balloc>
 8003396:	4680      	mov	r8, r0
 8003398:	b928      	cbnz	r0, 80033a6 <__multadd+0x5a>
 800339a:	4602      	mov	r2, r0
 800339c:	4b0c      	ldr	r3, [pc, #48]	@ (80033d0 <__multadd+0x84>)
 800339e:	480d      	ldr	r0, [pc, #52]	@ (80033d4 <__multadd+0x88>)
 80033a0:	21ba      	movs	r1, #186	@ 0xba
 80033a2:	f000 fd2f 	bl	8003e04 <__assert_func>
 80033a6:	6922      	ldr	r2, [r4, #16]
 80033a8:	3202      	adds	r2, #2
 80033aa:	f104 010c 	add.w	r1, r4, #12
 80033ae:	0092      	lsls	r2, r2, #2
 80033b0:	300c      	adds	r0, #12
 80033b2:	f000 fd19 	bl	8003de8 <memcpy>
 80033b6:	4621      	mov	r1, r4
 80033b8:	4638      	mov	r0, r7
 80033ba:	f7ff ffa5 	bl	8003308 <_Bfree>
 80033be:	4644      	mov	r4, r8
 80033c0:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80033c4:	3501      	adds	r5, #1
 80033c6:	615e      	str	r6, [r3, #20]
 80033c8:	6125      	str	r5, [r4, #16]
 80033ca:	4620      	mov	r0, r4
 80033cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80033d0:	080047c7 	.word	0x080047c7
 80033d4:	080047d8 	.word	0x080047d8

080033d8 <__hi0bits>:
 80033d8:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 80033dc:	4603      	mov	r3, r0
 80033de:	bf36      	itet	cc
 80033e0:	0403      	lslcc	r3, r0, #16
 80033e2:	2000      	movcs	r0, #0
 80033e4:	2010      	movcc	r0, #16
 80033e6:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80033ea:	bf3c      	itt	cc
 80033ec:	021b      	lslcc	r3, r3, #8
 80033ee:	3008      	addcc	r0, #8
 80033f0:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80033f4:	bf3c      	itt	cc
 80033f6:	011b      	lslcc	r3, r3, #4
 80033f8:	3004      	addcc	r0, #4
 80033fa:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80033fe:	bf3c      	itt	cc
 8003400:	009b      	lslcc	r3, r3, #2
 8003402:	3002      	addcc	r0, #2
 8003404:	2b00      	cmp	r3, #0
 8003406:	db05      	blt.n	8003414 <__hi0bits+0x3c>
 8003408:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800340c:	f100 0001 	add.w	r0, r0, #1
 8003410:	bf08      	it	eq
 8003412:	2020      	moveq	r0, #32
 8003414:	4770      	bx	lr

08003416 <__lo0bits>:
 8003416:	6803      	ldr	r3, [r0, #0]
 8003418:	4602      	mov	r2, r0
 800341a:	f013 0007 	ands.w	r0, r3, #7
 800341e:	d00b      	beq.n	8003438 <__lo0bits+0x22>
 8003420:	07d9      	lsls	r1, r3, #31
 8003422:	d421      	bmi.n	8003468 <__lo0bits+0x52>
 8003424:	0798      	lsls	r0, r3, #30
 8003426:	bf49      	itett	mi
 8003428:	085b      	lsrmi	r3, r3, #1
 800342a:	089b      	lsrpl	r3, r3, #2
 800342c:	2001      	movmi	r0, #1
 800342e:	6013      	strmi	r3, [r2, #0]
 8003430:	bf5c      	itt	pl
 8003432:	6013      	strpl	r3, [r2, #0]
 8003434:	2002      	movpl	r0, #2
 8003436:	4770      	bx	lr
 8003438:	b299      	uxth	r1, r3
 800343a:	b909      	cbnz	r1, 8003440 <__lo0bits+0x2a>
 800343c:	0c1b      	lsrs	r3, r3, #16
 800343e:	2010      	movs	r0, #16
 8003440:	b2d9      	uxtb	r1, r3
 8003442:	b909      	cbnz	r1, 8003448 <__lo0bits+0x32>
 8003444:	3008      	adds	r0, #8
 8003446:	0a1b      	lsrs	r3, r3, #8
 8003448:	0719      	lsls	r1, r3, #28
 800344a:	bf04      	itt	eq
 800344c:	091b      	lsreq	r3, r3, #4
 800344e:	3004      	addeq	r0, #4
 8003450:	0799      	lsls	r1, r3, #30
 8003452:	bf04      	itt	eq
 8003454:	089b      	lsreq	r3, r3, #2
 8003456:	3002      	addeq	r0, #2
 8003458:	07d9      	lsls	r1, r3, #31
 800345a:	d403      	bmi.n	8003464 <__lo0bits+0x4e>
 800345c:	085b      	lsrs	r3, r3, #1
 800345e:	f100 0001 	add.w	r0, r0, #1
 8003462:	d003      	beq.n	800346c <__lo0bits+0x56>
 8003464:	6013      	str	r3, [r2, #0]
 8003466:	4770      	bx	lr
 8003468:	2000      	movs	r0, #0
 800346a:	4770      	bx	lr
 800346c:	2020      	movs	r0, #32
 800346e:	4770      	bx	lr

08003470 <__i2b>:
 8003470:	b510      	push	{r4, lr}
 8003472:	460c      	mov	r4, r1
 8003474:	2101      	movs	r1, #1
 8003476:	f7ff ff07 	bl	8003288 <_Balloc>
 800347a:	4602      	mov	r2, r0
 800347c:	b928      	cbnz	r0, 800348a <__i2b+0x1a>
 800347e:	4b05      	ldr	r3, [pc, #20]	@ (8003494 <__i2b+0x24>)
 8003480:	4805      	ldr	r0, [pc, #20]	@ (8003498 <__i2b+0x28>)
 8003482:	f240 1145 	movw	r1, #325	@ 0x145
 8003486:	f000 fcbd 	bl	8003e04 <__assert_func>
 800348a:	2301      	movs	r3, #1
 800348c:	6144      	str	r4, [r0, #20]
 800348e:	6103      	str	r3, [r0, #16]
 8003490:	bd10      	pop	{r4, pc}
 8003492:	bf00      	nop
 8003494:	080047c7 	.word	0x080047c7
 8003498:	080047d8 	.word	0x080047d8

0800349c <__multiply>:
 800349c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80034a0:	4614      	mov	r4, r2
 80034a2:	690a      	ldr	r2, [r1, #16]
 80034a4:	6923      	ldr	r3, [r4, #16]
 80034a6:	429a      	cmp	r2, r3
 80034a8:	bfa8      	it	ge
 80034aa:	4623      	movge	r3, r4
 80034ac:	460f      	mov	r7, r1
 80034ae:	bfa4      	itt	ge
 80034b0:	460c      	movge	r4, r1
 80034b2:	461f      	movge	r7, r3
 80034b4:	f8d4 a010 	ldr.w	sl, [r4, #16]
 80034b8:	f8d7 9010 	ldr.w	r9, [r7, #16]
 80034bc:	68a3      	ldr	r3, [r4, #8]
 80034be:	6861      	ldr	r1, [r4, #4]
 80034c0:	eb0a 0609 	add.w	r6, sl, r9
 80034c4:	42b3      	cmp	r3, r6
 80034c6:	b085      	sub	sp, #20
 80034c8:	bfb8      	it	lt
 80034ca:	3101      	addlt	r1, #1
 80034cc:	f7ff fedc 	bl	8003288 <_Balloc>
 80034d0:	b930      	cbnz	r0, 80034e0 <__multiply+0x44>
 80034d2:	4602      	mov	r2, r0
 80034d4:	4b44      	ldr	r3, [pc, #272]	@ (80035e8 <__multiply+0x14c>)
 80034d6:	4845      	ldr	r0, [pc, #276]	@ (80035ec <__multiply+0x150>)
 80034d8:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 80034dc:	f000 fc92 	bl	8003e04 <__assert_func>
 80034e0:	f100 0514 	add.w	r5, r0, #20
 80034e4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 80034e8:	462b      	mov	r3, r5
 80034ea:	2200      	movs	r2, #0
 80034ec:	4543      	cmp	r3, r8
 80034ee:	d321      	bcc.n	8003534 <__multiply+0x98>
 80034f0:	f107 0114 	add.w	r1, r7, #20
 80034f4:	f104 0214 	add.w	r2, r4, #20
 80034f8:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 80034fc:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8003500:	9302      	str	r3, [sp, #8]
 8003502:	1b13      	subs	r3, r2, r4
 8003504:	3b15      	subs	r3, #21
 8003506:	f023 0303 	bic.w	r3, r3, #3
 800350a:	3304      	adds	r3, #4
 800350c:	f104 0715 	add.w	r7, r4, #21
 8003510:	42ba      	cmp	r2, r7
 8003512:	bf38      	it	cc
 8003514:	2304      	movcc	r3, #4
 8003516:	9301      	str	r3, [sp, #4]
 8003518:	9b02      	ldr	r3, [sp, #8]
 800351a:	9103      	str	r1, [sp, #12]
 800351c:	428b      	cmp	r3, r1
 800351e:	d80c      	bhi.n	800353a <__multiply+0x9e>
 8003520:	2e00      	cmp	r6, #0
 8003522:	dd03      	ble.n	800352c <__multiply+0x90>
 8003524:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003528:	2b00      	cmp	r3, #0
 800352a:	d05b      	beq.n	80035e4 <__multiply+0x148>
 800352c:	6106      	str	r6, [r0, #16]
 800352e:	b005      	add	sp, #20
 8003530:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003534:	f843 2b04 	str.w	r2, [r3], #4
 8003538:	e7d8      	b.n	80034ec <__multiply+0x50>
 800353a:	f8b1 a000 	ldrh.w	sl, [r1]
 800353e:	f1ba 0f00 	cmp.w	sl, #0
 8003542:	d024      	beq.n	800358e <__multiply+0xf2>
 8003544:	f104 0e14 	add.w	lr, r4, #20
 8003548:	46a9      	mov	r9, r5
 800354a:	f04f 0c00 	mov.w	ip, #0
 800354e:	f85e 7b04 	ldr.w	r7, [lr], #4
 8003552:	f8d9 3000 	ldr.w	r3, [r9]
 8003556:	fa1f fb87 	uxth.w	fp, r7
 800355a:	b29b      	uxth	r3, r3
 800355c:	fb0a 330b 	mla	r3, sl, fp, r3
 8003560:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8003564:	f8d9 7000 	ldr.w	r7, [r9]
 8003568:	4463      	add	r3, ip
 800356a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800356e:	fb0a c70b 	mla	r7, sl, fp, ip
 8003572:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 8003576:	b29b      	uxth	r3, r3
 8003578:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 800357c:	4572      	cmp	r2, lr
 800357e:	f849 3b04 	str.w	r3, [r9], #4
 8003582:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8003586:	d8e2      	bhi.n	800354e <__multiply+0xb2>
 8003588:	9b01      	ldr	r3, [sp, #4]
 800358a:	f845 c003 	str.w	ip, [r5, r3]
 800358e:	9b03      	ldr	r3, [sp, #12]
 8003590:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003594:	3104      	adds	r1, #4
 8003596:	f1b9 0f00 	cmp.w	r9, #0
 800359a:	d021      	beq.n	80035e0 <__multiply+0x144>
 800359c:	682b      	ldr	r3, [r5, #0]
 800359e:	f104 0c14 	add.w	ip, r4, #20
 80035a2:	46ae      	mov	lr, r5
 80035a4:	f04f 0a00 	mov.w	sl, #0
 80035a8:	f8bc b000 	ldrh.w	fp, [ip]
 80035ac:	f8be 7002 	ldrh.w	r7, [lr, #2]
 80035b0:	fb09 770b 	mla	r7, r9, fp, r7
 80035b4:	4457      	add	r7, sl
 80035b6:	b29b      	uxth	r3, r3
 80035b8:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80035bc:	f84e 3b04 	str.w	r3, [lr], #4
 80035c0:	f85c 3b04 	ldr.w	r3, [ip], #4
 80035c4:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80035c8:	f8be 3000 	ldrh.w	r3, [lr]
 80035cc:	fb09 330a 	mla	r3, r9, sl, r3
 80035d0:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 80035d4:	4562      	cmp	r2, ip
 80035d6:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80035da:	d8e5      	bhi.n	80035a8 <__multiply+0x10c>
 80035dc:	9f01      	ldr	r7, [sp, #4]
 80035de:	51eb      	str	r3, [r5, r7]
 80035e0:	3504      	adds	r5, #4
 80035e2:	e799      	b.n	8003518 <__multiply+0x7c>
 80035e4:	3e01      	subs	r6, #1
 80035e6:	e79b      	b.n	8003520 <__multiply+0x84>
 80035e8:	080047c7 	.word	0x080047c7
 80035ec:	080047d8 	.word	0x080047d8

080035f0 <__pow5mult>:
 80035f0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80035f4:	4615      	mov	r5, r2
 80035f6:	f012 0203 	ands.w	r2, r2, #3
 80035fa:	4607      	mov	r7, r0
 80035fc:	460e      	mov	r6, r1
 80035fe:	d007      	beq.n	8003610 <__pow5mult+0x20>
 8003600:	4c25      	ldr	r4, [pc, #148]	@ (8003698 <__pow5mult+0xa8>)
 8003602:	3a01      	subs	r2, #1
 8003604:	2300      	movs	r3, #0
 8003606:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800360a:	f7ff fe9f 	bl	800334c <__multadd>
 800360e:	4606      	mov	r6, r0
 8003610:	10ad      	asrs	r5, r5, #2
 8003612:	d03d      	beq.n	8003690 <__pow5mult+0xa0>
 8003614:	69fc      	ldr	r4, [r7, #28]
 8003616:	b97c      	cbnz	r4, 8003638 <__pow5mult+0x48>
 8003618:	2010      	movs	r0, #16
 800361a:	f7ff fd7f 	bl	800311c <malloc>
 800361e:	4602      	mov	r2, r0
 8003620:	61f8      	str	r0, [r7, #28]
 8003622:	b928      	cbnz	r0, 8003630 <__pow5mult+0x40>
 8003624:	4b1d      	ldr	r3, [pc, #116]	@ (800369c <__pow5mult+0xac>)
 8003626:	481e      	ldr	r0, [pc, #120]	@ (80036a0 <__pow5mult+0xb0>)
 8003628:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800362c:	f000 fbea 	bl	8003e04 <__assert_func>
 8003630:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003634:	6004      	str	r4, [r0, #0]
 8003636:	60c4      	str	r4, [r0, #12]
 8003638:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800363c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003640:	b94c      	cbnz	r4, 8003656 <__pow5mult+0x66>
 8003642:	f240 2171 	movw	r1, #625	@ 0x271
 8003646:	4638      	mov	r0, r7
 8003648:	f7ff ff12 	bl	8003470 <__i2b>
 800364c:	2300      	movs	r3, #0
 800364e:	f8c8 0008 	str.w	r0, [r8, #8]
 8003652:	4604      	mov	r4, r0
 8003654:	6003      	str	r3, [r0, #0]
 8003656:	f04f 0900 	mov.w	r9, #0
 800365a:	07eb      	lsls	r3, r5, #31
 800365c:	d50a      	bpl.n	8003674 <__pow5mult+0x84>
 800365e:	4631      	mov	r1, r6
 8003660:	4622      	mov	r2, r4
 8003662:	4638      	mov	r0, r7
 8003664:	f7ff ff1a 	bl	800349c <__multiply>
 8003668:	4631      	mov	r1, r6
 800366a:	4680      	mov	r8, r0
 800366c:	4638      	mov	r0, r7
 800366e:	f7ff fe4b 	bl	8003308 <_Bfree>
 8003672:	4646      	mov	r6, r8
 8003674:	106d      	asrs	r5, r5, #1
 8003676:	d00b      	beq.n	8003690 <__pow5mult+0xa0>
 8003678:	6820      	ldr	r0, [r4, #0]
 800367a:	b938      	cbnz	r0, 800368c <__pow5mult+0x9c>
 800367c:	4622      	mov	r2, r4
 800367e:	4621      	mov	r1, r4
 8003680:	4638      	mov	r0, r7
 8003682:	f7ff ff0b 	bl	800349c <__multiply>
 8003686:	6020      	str	r0, [r4, #0]
 8003688:	f8c0 9000 	str.w	r9, [r0]
 800368c:	4604      	mov	r4, r0
 800368e:	e7e4      	b.n	800365a <__pow5mult+0x6a>
 8003690:	4630      	mov	r0, r6
 8003692:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003696:	bf00      	nop
 8003698:	08004834 	.word	0x08004834
 800369c:	08004758 	.word	0x08004758
 80036a0:	080047d8 	.word	0x080047d8

080036a4 <__lshift>:
 80036a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80036a8:	460c      	mov	r4, r1
 80036aa:	6849      	ldr	r1, [r1, #4]
 80036ac:	6923      	ldr	r3, [r4, #16]
 80036ae:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80036b2:	68a3      	ldr	r3, [r4, #8]
 80036b4:	4607      	mov	r7, r0
 80036b6:	4691      	mov	r9, r2
 80036b8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80036bc:	f108 0601 	add.w	r6, r8, #1
 80036c0:	42b3      	cmp	r3, r6
 80036c2:	db0b      	blt.n	80036dc <__lshift+0x38>
 80036c4:	4638      	mov	r0, r7
 80036c6:	f7ff fddf 	bl	8003288 <_Balloc>
 80036ca:	4605      	mov	r5, r0
 80036cc:	b948      	cbnz	r0, 80036e2 <__lshift+0x3e>
 80036ce:	4602      	mov	r2, r0
 80036d0:	4b28      	ldr	r3, [pc, #160]	@ (8003774 <__lshift+0xd0>)
 80036d2:	4829      	ldr	r0, [pc, #164]	@ (8003778 <__lshift+0xd4>)
 80036d4:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 80036d8:	f000 fb94 	bl	8003e04 <__assert_func>
 80036dc:	3101      	adds	r1, #1
 80036de:	005b      	lsls	r3, r3, #1
 80036e0:	e7ee      	b.n	80036c0 <__lshift+0x1c>
 80036e2:	2300      	movs	r3, #0
 80036e4:	f100 0114 	add.w	r1, r0, #20
 80036e8:	f100 0210 	add.w	r2, r0, #16
 80036ec:	4618      	mov	r0, r3
 80036ee:	4553      	cmp	r3, sl
 80036f0:	db33      	blt.n	800375a <__lshift+0xb6>
 80036f2:	6920      	ldr	r0, [r4, #16]
 80036f4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 80036f8:	f104 0314 	add.w	r3, r4, #20
 80036fc:	f019 091f 	ands.w	r9, r9, #31
 8003700:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003704:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003708:	d02b      	beq.n	8003762 <__lshift+0xbe>
 800370a:	f1c9 0e20 	rsb	lr, r9, #32
 800370e:	468a      	mov	sl, r1
 8003710:	2200      	movs	r2, #0
 8003712:	6818      	ldr	r0, [r3, #0]
 8003714:	fa00 f009 	lsl.w	r0, r0, r9
 8003718:	4310      	orrs	r0, r2
 800371a:	f84a 0b04 	str.w	r0, [sl], #4
 800371e:	f853 2b04 	ldr.w	r2, [r3], #4
 8003722:	459c      	cmp	ip, r3
 8003724:	fa22 f20e 	lsr.w	r2, r2, lr
 8003728:	d8f3      	bhi.n	8003712 <__lshift+0x6e>
 800372a:	ebac 0304 	sub.w	r3, ip, r4
 800372e:	3b15      	subs	r3, #21
 8003730:	f023 0303 	bic.w	r3, r3, #3
 8003734:	3304      	adds	r3, #4
 8003736:	f104 0015 	add.w	r0, r4, #21
 800373a:	4584      	cmp	ip, r0
 800373c:	bf38      	it	cc
 800373e:	2304      	movcc	r3, #4
 8003740:	50ca      	str	r2, [r1, r3]
 8003742:	b10a      	cbz	r2, 8003748 <__lshift+0xa4>
 8003744:	f108 0602 	add.w	r6, r8, #2
 8003748:	3e01      	subs	r6, #1
 800374a:	4638      	mov	r0, r7
 800374c:	612e      	str	r6, [r5, #16]
 800374e:	4621      	mov	r1, r4
 8003750:	f7ff fdda 	bl	8003308 <_Bfree>
 8003754:	4628      	mov	r0, r5
 8003756:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800375a:	f842 0f04 	str.w	r0, [r2, #4]!
 800375e:	3301      	adds	r3, #1
 8003760:	e7c5      	b.n	80036ee <__lshift+0x4a>
 8003762:	3904      	subs	r1, #4
 8003764:	f853 2b04 	ldr.w	r2, [r3], #4
 8003768:	f841 2f04 	str.w	r2, [r1, #4]!
 800376c:	459c      	cmp	ip, r3
 800376e:	d8f9      	bhi.n	8003764 <__lshift+0xc0>
 8003770:	e7ea      	b.n	8003748 <__lshift+0xa4>
 8003772:	bf00      	nop
 8003774:	080047c7 	.word	0x080047c7
 8003778:	080047d8 	.word	0x080047d8

0800377c <__mcmp>:
 800377c:	690a      	ldr	r2, [r1, #16]
 800377e:	4603      	mov	r3, r0
 8003780:	6900      	ldr	r0, [r0, #16]
 8003782:	1a80      	subs	r0, r0, r2
 8003784:	b530      	push	{r4, r5, lr}
 8003786:	d10e      	bne.n	80037a6 <__mcmp+0x2a>
 8003788:	3314      	adds	r3, #20
 800378a:	3114      	adds	r1, #20
 800378c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003790:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003794:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003798:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800379c:	4295      	cmp	r5, r2
 800379e:	d003      	beq.n	80037a8 <__mcmp+0x2c>
 80037a0:	d205      	bcs.n	80037ae <__mcmp+0x32>
 80037a2:	f04f 30ff 	mov.w	r0, #4294967295
 80037a6:	bd30      	pop	{r4, r5, pc}
 80037a8:	42a3      	cmp	r3, r4
 80037aa:	d3f3      	bcc.n	8003794 <__mcmp+0x18>
 80037ac:	e7fb      	b.n	80037a6 <__mcmp+0x2a>
 80037ae:	2001      	movs	r0, #1
 80037b0:	e7f9      	b.n	80037a6 <__mcmp+0x2a>
	...

080037b4 <__mdiff>:
 80037b4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037b8:	4689      	mov	r9, r1
 80037ba:	4606      	mov	r6, r0
 80037bc:	4611      	mov	r1, r2
 80037be:	4648      	mov	r0, r9
 80037c0:	4614      	mov	r4, r2
 80037c2:	f7ff ffdb 	bl	800377c <__mcmp>
 80037c6:	1e05      	subs	r5, r0, #0
 80037c8:	d112      	bne.n	80037f0 <__mdiff+0x3c>
 80037ca:	4629      	mov	r1, r5
 80037cc:	4630      	mov	r0, r6
 80037ce:	f7ff fd5b 	bl	8003288 <_Balloc>
 80037d2:	4602      	mov	r2, r0
 80037d4:	b928      	cbnz	r0, 80037e2 <__mdiff+0x2e>
 80037d6:	4b3f      	ldr	r3, [pc, #252]	@ (80038d4 <__mdiff+0x120>)
 80037d8:	f240 2137 	movw	r1, #567	@ 0x237
 80037dc:	483e      	ldr	r0, [pc, #248]	@ (80038d8 <__mdiff+0x124>)
 80037de:	f000 fb11 	bl	8003e04 <__assert_func>
 80037e2:	2301      	movs	r3, #1
 80037e4:	e9c0 3504 	strd	r3, r5, [r0, #16]
 80037e8:	4610      	mov	r0, r2
 80037ea:	b003      	add	sp, #12
 80037ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80037f0:	bfbc      	itt	lt
 80037f2:	464b      	movlt	r3, r9
 80037f4:	46a1      	movlt	r9, r4
 80037f6:	4630      	mov	r0, r6
 80037f8:	f8d9 1004 	ldr.w	r1, [r9, #4]
 80037fc:	bfba      	itte	lt
 80037fe:	461c      	movlt	r4, r3
 8003800:	2501      	movlt	r5, #1
 8003802:	2500      	movge	r5, #0
 8003804:	f7ff fd40 	bl	8003288 <_Balloc>
 8003808:	4602      	mov	r2, r0
 800380a:	b918      	cbnz	r0, 8003814 <__mdiff+0x60>
 800380c:	4b31      	ldr	r3, [pc, #196]	@ (80038d4 <__mdiff+0x120>)
 800380e:	f240 2145 	movw	r1, #581	@ 0x245
 8003812:	e7e3      	b.n	80037dc <__mdiff+0x28>
 8003814:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003818:	6926      	ldr	r6, [r4, #16]
 800381a:	60c5      	str	r5, [r0, #12]
 800381c:	f109 0310 	add.w	r3, r9, #16
 8003820:	f109 0514 	add.w	r5, r9, #20
 8003824:	f104 0e14 	add.w	lr, r4, #20
 8003828:	f100 0b14 	add.w	fp, r0, #20
 800382c:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003830:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003834:	9301      	str	r3, [sp, #4]
 8003836:	46d9      	mov	r9, fp
 8003838:	f04f 0c00 	mov.w	ip, #0
 800383c:	9b01      	ldr	r3, [sp, #4]
 800383e:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003842:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003846:	9301      	str	r3, [sp, #4]
 8003848:	fa1f f38a 	uxth.w	r3, sl
 800384c:	4619      	mov	r1, r3
 800384e:	b283      	uxth	r3, r0
 8003850:	1acb      	subs	r3, r1, r3
 8003852:	0c00      	lsrs	r0, r0, #16
 8003854:	4463      	add	r3, ip
 8003856:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800385a:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800385e:	b29b      	uxth	r3, r3
 8003860:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003864:	4576      	cmp	r6, lr
 8003866:	f849 3b04 	str.w	r3, [r9], #4
 800386a:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800386e:	d8e5      	bhi.n	800383c <__mdiff+0x88>
 8003870:	1b33      	subs	r3, r6, r4
 8003872:	3b15      	subs	r3, #21
 8003874:	f023 0303 	bic.w	r3, r3, #3
 8003878:	3415      	adds	r4, #21
 800387a:	3304      	adds	r3, #4
 800387c:	42a6      	cmp	r6, r4
 800387e:	bf38      	it	cc
 8003880:	2304      	movcc	r3, #4
 8003882:	441d      	add	r5, r3
 8003884:	445b      	add	r3, fp
 8003886:	461e      	mov	r6, r3
 8003888:	462c      	mov	r4, r5
 800388a:	4544      	cmp	r4, r8
 800388c:	d30e      	bcc.n	80038ac <__mdiff+0xf8>
 800388e:	f108 0103 	add.w	r1, r8, #3
 8003892:	1b49      	subs	r1, r1, r5
 8003894:	f021 0103 	bic.w	r1, r1, #3
 8003898:	3d03      	subs	r5, #3
 800389a:	45a8      	cmp	r8, r5
 800389c:	bf38      	it	cc
 800389e:	2100      	movcc	r1, #0
 80038a0:	440b      	add	r3, r1
 80038a2:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80038a6:	b191      	cbz	r1, 80038ce <__mdiff+0x11a>
 80038a8:	6117      	str	r7, [r2, #16]
 80038aa:	e79d      	b.n	80037e8 <__mdiff+0x34>
 80038ac:	f854 1b04 	ldr.w	r1, [r4], #4
 80038b0:	46e6      	mov	lr, ip
 80038b2:	0c08      	lsrs	r0, r1, #16
 80038b4:	fa1c fc81 	uxtah	ip, ip, r1
 80038b8:	4471      	add	r1, lr
 80038ba:	eb00 402c 	add.w	r0, r0, ip, asr #16
 80038be:	b289      	uxth	r1, r1
 80038c0:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 80038c4:	f846 1b04 	str.w	r1, [r6], #4
 80038c8:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80038cc:	e7dd      	b.n	800388a <__mdiff+0xd6>
 80038ce:	3f01      	subs	r7, #1
 80038d0:	e7e7      	b.n	80038a2 <__mdiff+0xee>
 80038d2:	bf00      	nop
 80038d4:	080047c7 	.word	0x080047c7
 80038d8:	080047d8 	.word	0x080047d8

080038dc <__d2b>:
 80038dc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80038e0:	460f      	mov	r7, r1
 80038e2:	2101      	movs	r1, #1
 80038e4:	ec59 8b10 	vmov	r8, r9, d0
 80038e8:	4616      	mov	r6, r2
 80038ea:	f7ff fccd 	bl	8003288 <_Balloc>
 80038ee:	4604      	mov	r4, r0
 80038f0:	b930      	cbnz	r0, 8003900 <__d2b+0x24>
 80038f2:	4602      	mov	r2, r0
 80038f4:	4b23      	ldr	r3, [pc, #140]	@ (8003984 <__d2b+0xa8>)
 80038f6:	4824      	ldr	r0, [pc, #144]	@ (8003988 <__d2b+0xac>)
 80038f8:	f240 310f 	movw	r1, #783	@ 0x30f
 80038fc:	f000 fa82 	bl	8003e04 <__assert_func>
 8003900:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003904:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003908:	b10d      	cbz	r5, 800390e <__d2b+0x32>
 800390a:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800390e:	9301      	str	r3, [sp, #4]
 8003910:	f1b8 0300 	subs.w	r3, r8, #0
 8003914:	d023      	beq.n	800395e <__d2b+0x82>
 8003916:	4668      	mov	r0, sp
 8003918:	9300      	str	r3, [sp, #0]
 800391a:	f7ff fd7c 	bl	8003416 <__lo0bits>
 800391e:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003922:	b1d0      	cbz	r0, 800395a <__d2b+0x7e>
 8003924:	f1c0 0320 	rsb	r3, r0, #32
 8003928:	fa02 f303 	lsl.w	r3, r2, r3
 800392c:	430b      	orrs	r3, r1
 800392e:	40c2      	lsrs	r2, r0
 8003930:	6163      	str	r3, [r4, #20]
 8003932:	9201      	str	r2, [sp, #4]
 8003934:	9b01      	ldr	r3, [sp, #4]
 8003936:	61a3      	str	r3, [r4, #24]
 8003938:	2b00      	cmp	r3, #0
 800393a:	bf0c      	ite	eq
 800393c:	2201      	moveq	r2, #1
 800393e:	2202      	movne	r2, #2
 8003940:	6122      	str	r2, [r4, #16]
 8003942:	b1a5      	cbz	r5, 800396e <__d2b+0x92>
 8003944:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8003948:	4405      	add	r5, r0
 800394a:	603d      	str	r5, [r7, #0]
 800394c:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8003950:	6030      	str	r0, [r6, #0]
 8003952:	4620      	mov	r0, r4
 8003954:	b003      	add	sp, #12
 8003956:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800395a:	6161      	str	r1, [r4, #20]
 800395c:	e7ea      	b.n	8003934 <__d2b+0x58>
 800395e:	a801      	add	r0, sp, #4
 8003960:	f7ff fd59 	bl	8003416 <__lo0bits>
 8003964:	9b01      	ldr	r3, [sp, #4]
 8003966:	6163      	str	r3, [r4, #20]
 8003968:	3020      	adds	r0, #32
 800396a:	2201      	movs	r2, #1
 800396c:	e7e8      	b.n	8003940 <__d2b+0x64>
 800396e:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003972:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8003976:	6038      	str	r0, [r7, #0]
 8003978:	6918      	ldr	r0, [r3, #16]
 800397a:	f7ff fd2d 	bl	80033d8 <__hi0bits>
 800397e:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003982:	e7e5      	b.n	8003950 <__d2b+0x74>
 8003984:	080047c7 	.word	0x080047c7
 8003988:	080047d8 	.word	0x080047d8

0800398c <__ssputs_r>:
 800398c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003990:	688e      	ldr	r6, [r1, #8]
 8003992:	461f      	mov	r7, r3
 8003994:	42be      	cmp	r6, r7
 8003996:	680b      	ldr	r3, [r1, #0]
 8003998:	4682      	mov	sl, r0
 800399a:	460c      	mov	r4, r1
 800399c:	4690      	mov	r8, r2
 800399e:	d82d      	bhi.n	80039fc <__ssputs_r+0x70>
 80039a0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80039a4:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80039a8:	d026      	beq.n	80039f8 <__ssputs_r+0x6c>
 80039aa:	6965      	ldr	r5, [r4, #20]
 80039ac:	6909      	ldr	r1, [r1, #16]
 80039ae:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80039b2:	eba3 0901 	sub.w	r9, r3, r1
 80039b6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80039ba:	1c7b      	adds	r3, r7, #1
 80039bc:	444b      	add	r3, r9
 80039be:	106d      	asrs	r5, r5, #1
 80039c0:	429d      	cmp	r5, r3
 80039c2:	bf38      	it	cc
 80039c4:	461d      	movcc	r5, r3
 80039c6:	0553      	lsls	r3, r2, #21
 80039c8:	d527      	bpl.n	8003a1a <__ssputs_r+0x8e>
 80039ca:	4629      	mov	r1, r5
 80039cc:	f7ff fbd0 	bl	8003170 <_malloc_r>
 80039d0:	4606      	mov	r6, r0
 80039d2:	b360      	cbz	r0, 8003a2e <__ssputs_r+0xa2>
 80039d4:	6921      	ldr	r1, [r4, #16]
 80039d6:	464a      	mov	r2, r9
 80039d8:	f000 fa06 	bl	8003de8 <memcpy>
 80039dc:	89a3      	ldrh	r3, [r4, #12]
 80039de:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 80039e2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80039e6:	81a3      	strh	r3, [r4, #12]
 80039e8:	6126      	str	r6, [r4, #16]
 80039ea:	6165      	str	r5, [r4, #20]
 80039ec:	444e      	add	r6, r9
 80039ee:	eba5 0509 	sub.w	r5, r5, r9
 80039f2:	6026      	str	r6, [r4, #0]
 80039f4:	60a5      	str	r5, [r4, #8]
 80039f6:	463e      	mov	r6, r7
 80039f8:	42be      	cmp	r6, r7
 80039fa:	d900      	bls.n	80039fe <__ssputs_r+0x72>
 80039fc:	463e      	mov	r6, r7
 80039fe:	6820      	ldr	r0, [r4, #0]
 8003a00:	4632      	mov	r2, r6
 8003a02:	4641      	mov	r1, r8
 8003a04:	f000 f9c6 	bl	8003d94 <memmove>
 8003a08:	68a3      	ldr	r3, [r4, #8]
 8003a0a:	1b9b      	subs	r3, r3, r6
 8003a0c:	60a3      	str	r3, [r4, #8]
 8003a0e:	6823      	ldr	r3, [r4, #0]
 8003a10:	4433      	add	r3, r6
 8003a12:	6023      	str	r3, [r4, #0]
 8003a14:	2000      	movs	r0, #0
 8003a16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003a1a:	462a      	mov	r2, r5
 8003a1c:	f000 fa36 	bl	8003e8c <_realloc_r>
 8003a20:	4606      	mov	r6, r0
 8003a22:	2800      	cmp	r0, #0
 8003a24:	d1e0      	bne.n	80039e8 <__ssputs_r+0x5c>
 8003a26:	6921      	ldr	r1, [r4, #16]
 8003a28:	4650      	mov	r0, sl
 8003a2a:	f7ff fb2d 	bl	8003088 <_free_r>
 8003a2e:	230c      	movs	r3, #12
 8003a30:	f8ca 3000 	str.w	r3, [sl]
 8003a34:	89a3      	ldrh	r3, [r4, #12]
 8003a36:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003a3a:	81a3      	strh	r3, [r4, #12]
 8003a3c:	f04f 30ff 	mov.w	r0, #4294967295
 8003a40:	e7e9      	b.n	8003a16 <__ssputs_r+0x8a>
	...

08003a44 <_svfiprintf_r>:
 8003a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a48:	4698      	mov	r8, r3
 8003a4a:	898b      	ldrh	r3, [r1, #12]
 8003a4c:	061b      	lsls	r3, r3, #24
 8003a4e:	b09d      	sub	sp, #116	@ 0x74
 8003a50:	4607      	mov	r7, r0
 8003a52:	460d      	mov	r5, r1
 8003a54:	4614      	mov	r4, r2
 8003a56:	d510      	bpl.n	8003a7a <_svfiprintf_r+0x36>
 8003a58:	690b      	ldr	r3, [r1, #16]
 8003a5a:	b973      	cbnz	r3, 8003a7a <_svfiprintf_r+0x36>
 8003a5c:	2140      	movs	r1, #64	@ 0x40
 8003a5e:	f7ff fb87 	bl	8003170 <_malloc_r>
 8003a62:	6028      	str	r0, [r5, #0]
 8003a64:	6128      	str	r0, [r5, #16]
 8003a66:	b930      	cbnz	r0, 8003a76 <_svfiprintf_r+0x32>
 8003a68:	230c      	movs	r3, #12
 8003a6a:	603b      	str	r3, [r7, #0]
 8003a6c:	f04f 30ff 	mov.w	r0, #4294967295
 8003a70:	b01d      	add	sp, #116	@ 0x74
 8003a72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003a76:	2340      	movs	r3, #64	@ 0x40
 8003a78:	616b      	str	r3, [r5, #20]
 8003a7a:	2300      	movs	r3, #0
 8003a7c:	9309      	str	r3, [sp, #36]	@ 0x24
 8003a7e:	2320      	movs	r3, #32
 8003a80:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003a84:	f8cd 800c 	str.w	r8, [sp, #12]
 8003a88:	2330      	movs	r3, #48	@ 0x30
 8003a8a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8003c28 <_svfiprintf_r+0x1e4>
 8003a8e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003a92:	f04f 0901 	mov.w	r9, #1
 8003a96:	4623      	mov	r3, r4
 8003a98:	469a      	mov	sl, r3
 8003a9a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003a9e:	b10a      	cbz	r2, 8003aa4 <_svfiprintf_r+0x60>
 8003aa0:	2a25      	cmp	r2, #37	@ 0x25
 8003aa2:	d1f9      	bne.n	8003a98 <_svfiprintf_r+0x54>
 8003aa4:	ebba 0b04 	subs.w	fp, sl, r4
 8003aa8:	d00b      	beq.n	8003ac2 <_svfiprintf_r+0x7e>
 8003aaa:	465b      	mov	r3, fp
 8003aac:	4622      	mov	r2, r4
 8003aae:	4629      	mov	r1, r5
 8003ab0:	4638      	mov	r0, r7
 8003ab2:	f7ff ff6b 	bl	800398c <__ssputs_r>
 8003ab6:	3001      	adds	r0, #1
 8003ab8:	f000 80a7 	beq.w	8003c0a <_svfiprintf_r+0x1c6>
 8003abc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003abe:	445a      	add	r2, fp
 8003ac0:	9209      	str	r2, [sp, #36]	@ 0x24
 8003ac2:	f89a 3000 	ldrb.w	r3, [sl]
 8003ac6:	2b00      	cmp	r3, #0
 8003ac8:	f000 809f 	beq.w	8003c0a <_svfiprintf_r+0x1c6>
 8003acc:	2300      	movs	r3, #0
 8003ace:	f04f 32ff 	mov.w	r2, #4294967295
 8003ad2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003ad6:	f10a 0a01 	add.w	sl, sl, #1
 8003ada:	9304      	str	r3, [sp, #16]
 8003adc:	9307      	str	r3, [sp, #28]
 8003ade:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003ae2:	931a      	str	r3, [sp, #104]	@ 0x68
 8003ae4:	4654      	mov	r4, sl
 8003ae6:	2205      	movs	r2, #5
 8003ae8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003aec:	484e      	ldr	r0, [pc, #312]	@ (8003c28 <_svfiprintf_r+0x1e4>)
 8003aee:	f7fc fb8f 	bl	8000210 <memchr>
 8003af2:	9a04      	ldr	r2, [sp, #16]
 8003af4:	b9d8      	cbnz	r0, 8003b2e <_svfiprintf_r+0xea>
 8003af6:	06d0      	lsls	r0, r2, #27
 8003af8:	bf44      	itt	mi
 8003afa:	2320      	movmi	r3, #32
 8003afc:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003b00:	0711      	lsls	r1, r2, #28
 8003b02:	bf44      	itt	mi
 8003b04:	232b      	movmi	r3, #43	@ 0x2b
 8003b06:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003b0a:	f89a 3000 	ldrb.w	r3, [sl]
 8003b0e:	2b2a      	cmp	r3, #42	@ 0x2a
 8003b10:	d015      	beq.n	8003b3e <_svfiprintf_r+0xfa>
 8003b12:	9a07      	ldr	r2, [sp, #28]
 8003b14:	4654      	mov	r4, sl
 8003b16:	2000      	movs	r0, #0
 8003b18:	f04f 0c0a 	mov.w	ip, #10
 8003b1c:	4621      	mov	r1, r4
 8003b1e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003b22:	3b30      	subs	r3, #48	@ 0x30
 8003b24:	2b09      	cmp	r3, #9
 8003b26:	d94b      	bls.n	8003bc0 <_svfiprintf_r+0x17c>
 8003b28:	b1b0      	cbz	r0, 8003b58 <_svfiprintf_r+0x114>
 8003b2a:	9207      	str	r2, [sp, #28]
 8003b2c:	e014      	b.n	8003b58 <_svfiprintf_r+0x114>
 8003b2e:	eba0 0308 	sub.w	r3, r0, r8
 8003b32:	fa09 f303 	lsl.w	r3, r9, r3
 8003b36:	4313      	orrs	r3, r2
 8003b38:	9304      	str	r3, [sp, #16]
 8003b3a:	46a2      	mov	sl, r4
 8003b3c:	e7d2      	b.n	8003ae4 <_svfiprintf_r+0xa0>
 8003b3e:	9b03      	ldr	r3, [sp, #12]
 8003b40:	1d19      	adds	r1, r3, #4
 8003b42:	681b      	ldr	r3, [r3, #0]
 8003b44:	9103      	str	r1, [sp, #12]
 8003b46:	2b00      	cmp	r3, #0
 8003b48:	bfbb      	ittet	lt
 8003b4a:	425b      	neglt	r3, r3
 8003b4c:	f042 0202 	orrlt.w	r2, r2, #2
 8003b50:	9307      	strge	r3, [sp, #28]
 8003b52:	9307      	strlt	r3, [sp, #28]
 8003b54:	bfb8      	it	lt
 8003b56:	9204      	strlt	r2, [sp, #16]
 8003b58:	7823      	ldrb	r3, [r4, #0]
 8003b5a:	2b2e      	cmp	r3, #46	@ 0x2e
 8003b5c:	d10a      	bne.n	8003b74 <_svfiprintf_r+0x130>
 8003b5e:	7863      	ldrb	r3, [r4, #1]
 8003b60:	2b2a      	cmp	r3, #42	@ 0x2a
 8003b62:	d132      	bne.n	8003bca <_svfiprintf_r+0x186>
 8003b64:	9b03      	ldr	r3, [sp, #12]
 8003b66:	1d1a      	adds	r2, r3, #4
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	9203      	str	r2, [sp, #12]
 8003b6c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003b70:	3402      	adds	r4, #2
 8003b72:	9305      	str	r3, [sp, #20]
 8003b74:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8003c38 <_svfiprintf_r+0x1f4>
 8003b78:	7821      	ldrb	r1, [r4, #0]
 8003b7a:	2203      	movs	r2, #3
 8003b7c:	4650      	mov	r0, sl
 8003b7e:	f7fc fb47 	bl	8000210 <memchr>
 8003b82:	b138      	cbz	r0, 8003b94 <_svfiprintf_r+0x150>
 8003b84:	9b04      	ldr	r3, [sp, #16]
 8003b86:	eba0 000a 	sub.w	r0, r0, sl
 8003b8a:	2240      	movs	r2, #64	@ 0x40
 8003b8c:	4082      	lsls	r2, r0
 8003b8e:	4313      	orrs	r3, r2
 8003b90:	3401      	adds	r4, #1
 8003b92:	9304      	str	r3, [sp, #16]
 8003b94:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003b98:	4824      	ldr	r0, [pc, #144]	@ (8003c2c <_svfiprintf_r+0x1e8>)
 8003b9a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003b9e:	2206      	movs	r2, #6
 8003ba0:	f7fc fb36 	bl	8000210 <memchr>
 8003ba4:	2800      	cmp	r0, #0
 8003ba6:	d036      	beq.n	8003c16 <_svfiprintf_r+0x1d2>
 8003ba8:	4b21      	ldr	r3, [pc, #132]	@ (8003c30 <_svfiprintf_r+0x1ec>)
 8003baa:	bb1b      	cbnz	r3, 8003bf4 <_svfiprintf_r+0x1b0>
 8003bac:	9b03      	ldr	r3, [sp, #12]
 8003bae:	3307      	adds	r3, #7
 8003bb0:	f023 0307 	bic.w	r3, r3, #7
 8003bb4:	3308      	adds	r3, #8
 8003bb6:	9303      	str	r3, [sp, #12]
 8003bb8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003bba:	4433      	add	r3, r6
 8003bbc:	9309      	str	r3, [sp, #36]	@ 0x24
 8003bbe:	e76a      	b.n	8003a96 <_svfiprintf_r+0x52>
 8003bc0:	fb0c 3202 	mla	r2, ip, r2, r3
 8003bc4:	460c      	mov	r4, r1
 8003bc6:	2001      	movs	r0, #1
 8003bc8:	e7a8      	b.n	8003b1c <_svfiprintf_r+0xd8>
 8003bca:	2300      	movs	r3, #0
 8003bcc:	3401      	adds	r4, #1
 8003bce:	9305      	str	r3, [sp, #20]
 8003bd0:	4619      	mov	r1, r3
 8003bd2:	f04f 0c0a 	mov.w	ip, #10
 8003bd6:	4620      	mov	r0, r4
 8003bd8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003bdc:	3a30      	subs	r2, #48	@ 0x30
 8003bde:	2a09      	cmp	r2, #9
 8003be0:	d903      	bls.n	8003bea <_svfiprintf_r+0x1a6>
 8003be2:	2b00      	cmp	r3, #0
 8003be4:	d0c6      	beq.n	8003b74 <_svfiprintf_r+0x130>
 8003be6:	9105      	str	r1, [sp, #20]
 8003be8:	e7c4      	b.n	8003b74 <_svfiprintf_r+0x130>
 8003bea:	fb0c 2101 	mla	r1, ip, r1, r2
 8003bee:	4604      	mov	r4, r0
 8003bf0:	2301      	movs	r3, #1
 8003bf2:	e7f0      	b.n	8003bd6 <_svfiprintf_r+0x192>
 8003bf4:	ab03      	add	r3, sp, #12
 8003bf6:	9300      	str	r3, [sp, #0]
 8003bf8:	462a      	mov	r2, r5
 8003bfa:	4b0e      	ldr	r3, [pc, #56]	@ (8003c34 <_svfiprintf_r+0x1f0>)
 8003bfc:	a904      	add	r1, sp, #16
 8003bfe:	4638      	mov	r0, r7
 8003c00:	f7fd fe82 	bl	8001908 <_printf_float>
 8003c04:	1c42      	adds	r2, r0, #1
 8003c06:	4606      	mov	r6, r0
 8003c08:	d1d6      	bne.n	8003bb8 <_svfiprintf_r+0x174>
 8003c0a:	89ab      	ldrh	r3, [r5, #12]
 8003c0c:	065b      	lsls	r3, r3, #25
 8003c0e:	f53f af2d 	bmi.w	8003a6c <_svfiprintf_r+0x28>
 8003c12:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003c14:	e72c      	b.n	8003a70 <_svfiprintf_r+0x2c>
 8003c16:	ab03      	add	r3, sp, #12
 8003c18:	9300      	str	r3, [sp, #0]
 8003c1a:	462a      	mov	r2, r5
 8003c1c:	4b05      	ldr	r3, [pc, #20]	@ (8003c34 <_svfiprintf_r+0x1f0>)
 8003c1e:	a904      	add	r1, sp, #16
 8003c20:	4638      	mov	r0, r7
 8003c22:	f7fe f909 	bl	8001e38 <_printf_i>
 8003c26:	e7ed      	b.n	8003c04 <_svfiprintf_r+0x1c0>
 8003c28:	08004930 	.word	0x08004930
 8003c2c:	0800493a 	.word	0x0800493a
 8003c30:	08001909 	.word	0x08001909
 8003c34:	0800398d 	.word	0x0800398d
 8003c38:	08004936 	.word	0x08004936

08003c3c <__sflush_r>:
 8003c3c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003c40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003c44:	0716      	lsls	r6, r2, #28
 8003c46:	4605      	mov	r5, r0
 8003c48:	460c      	mov	r4, r1
 8003c4a:	d454      	bmi.n	8003cf6 <__sflush_r+0xba>
 8003c4c:	684b      	ldr	r3, [r1, #4]
 8003c4e:	2b00      	cmp	r3, #0
 8003c50:	dc02      	bgt.n	8003c58 <__sflush_r+0x1c>
 8003c52:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003c54:	2b00      	cmp	r3, #0
 8003c56:	dd48      	ble.n	8003cea <__sflush_r+0xae>
 8003c58:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003c5a:	2e00      	cmp	r6, #0
 8003c5c:	d045      	beq.n	8003cea <__sflush_r+0xae>
 8003c5e:	2300      	movs	r3, #0
 8003c60:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003c64:	682f      	ldr	r7, [r5, #0]
 8003c66:	6a21      	ldr	r1, [r4, #32]
 8003c68:	602b      	str	r3, [r5, #0]
 8003c6a:	d030      	beq.n	8003cce <__sflush_r+0x92>
 8003c6c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003c6e:	89a3      	ldrh	r3, [r4, #12]
 8003c70:	0759      	lsls	r1, r3, #29
 8003c72:	d505      	bpl.n	8003c80 <__sflush_r+0x44>
 8003c74:	6863      	ldr	r3, [r4, #4]
 8003c76:	1ad2      	subs	r2, r2, r3
 8003c78:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003c7a:	b10b      	cbz	r3, 8003c80 <__sflush_r+0x44>
 8003c7c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003c7e:	1ad2      	subs	r2, r2, r3
 8003c80:	2300      	movs	r3, #0
 8003c82:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003c84:	6a21      	ldr	r1, [r4, #32]
 8003c86:	4628      	mov	r0, r5
 8003c88:	47b0      	blx	r6
 8003c8a:	1c43      	adds	r3, r0, #1
 8003c8c:	89a3      	ldrh	r3, [r4, #12]
 8003c8e:	d106      	bne.n	8003c9e <__sflush_r+0x62>
 8003c90:	6829      	ldr	r1, [r5, #0]
 8003c92:	291d      	cmp	r1, #29
 8003c94:	d82b      	bhi.n	8003cee <__sflush_r+0xb2>
 8003c96:	4a2a      	ldr	r2, [pc, #168]	@ (8003d40 <__sflush_r+0x104>)
 8003c98:	410a      	asrs	r2, r1
 8003c9a:	07d6      	lsls	r6, r2, #31
 8003c9c:	d427      	bmi.n	8003cee <__sflush_r+0xb2>
 8003c9e:	2200      	movs	r2, #0
 8003ca0:	6062      	str	r2, [r4, #4]
 8003ca2:	04d9      	lsls	r1, r3, #19
 8003ca4:	6922      	ldr	r2, [r4, #16]
 8003ca6:	6022      	str	r2, [r4, #0]
 8003ca8:	d504      	bpl.n	8003cb4 <__sflush_r+0x78>
 8003caa:	1c42      	adds	r2, r0, #1
 8003cac:	d101      	bne.n	8003cb2 <__sflush_r+0x76>
 8003cae:	682b      	ldr	r3, [r5, #0]
 8003cb0:	b903      	cbnz	r3, 8003cb4 <__sflush_r+0x78>
 8003cb2:	6560      	str	r0, [r4, #84]	@ 0x54
 8003cb4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003cb6:	602f      	str	r7, [r5, #0]
 8003cb8:	b1b9      	cbz	r1, 8003cea <__sflush_r+0xae>
 8003cba:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003cbe:	4299      	cmp	r1, r3
 8003cc0:	d002      	beq.n	8003cc8 <__sflush_r+0x8c>
 8003cc2:	4628      	mov	r0, r5
 8003cc4:	f7ff f9e0 	bl	8003088 <_free_r>
 8003cc8:	2300      	movs	r3, #0
 8003cca:	6363      	str	r3, [r4, #52]	@ 0x34
 8003ccc:	e00d      	b.n	8003cea <__sflush_r+0xae>
 8003cce:	2301      	movs	r3, #1
 8003cd0:	4628      	mov	r0, r5
 8003cd2:	47b0      	blx	r6
 8003cd4:	4602      	mov	r2, r0
 8003cd6:	1c50      	adds	r0, r2, #1
 8003cd8:	d1c9      	bne.n	8003c6e <__sflush_r+0x32>
 8003cda:	682b      	ldr	r3, [r5, #0]
 8003cdc:	2b00      	cmp	r3, #0
 8003cde:	d0c6      	beq.n	8003c6e <__sflush_r+0x32>
 8003ce0:	2b1d      	cmp	r3, #29
 8003ce2:	d001      	beq.n	8003ce8 <__sflush_r+0xac>
 8003ce4:	2b16      	cmp	r3, #22
 8003ce6:	d11e      	bne.n	8003d26 <__sflush_r+0xea>
 8003ce8:	602f      	str	r7, [r5, #0]
 8003cea:	2000      	movs	r0, #0
 8003cec:	e022      	b.n	8003d34 <__sflush_r+0xf8>
 8003cee:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003cf2:	b21b      	sxth	r3, r3
 8003cf4:	e01b      	b.n	8003d2e <__sflush_r+0xf2>
 8003cf6:	690f      	ldr	r7, [r1, #16]
 8003cf8:	2f00      	cmp	r7, #0
 8003cfa:	d0f6      	beq.n	8003cea <__sflush_r+0xae>
 8003cfc:	0793      	lsls	r3, r2, #30
 8003cfe:	680e      	ldr	r6, [r1, #0]
 8003d00:	bf08      	it	eq
 8003d02:	694b      	ldreq	r3, [r1, #20]
 8003d04:	600f      	str	r7, [r1, #0]
 8003d06:	bf18      	it	ne
 8003d08:	2300      	movne	r3, #0
 8003d0a:	eba6 0807 	sub.w	r8, r6, r7
 8003d0e:	608b      	str	r3, [r1, #8]
 8003d10:	f1b8 0f00 	cmp.w	r8, #0
 8003d14:	dde9      	ble.n	8003cea <__sflush_r+0xae>
 8003d16:	6a21      	ldr	r1, [r4, #32]
 8003d18:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8003d1a:	4643      	mov	r3, r8
 8003d1c:	463a      	mov	r2, r7
 8003d1e:	4628      	mov	r0, r5
 8003d20:	47b0      	blx	r6
 8003d22:	2800      	cmp	r0, #0
 8003d24:	dc08      	bgt.n	8003d38 <__sflush_r+0xfc>
 8003d26:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003d2a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003d2e:	81a3      	strh	r3, [r4, #12]
 8003d30:	f04f 30ff 	mov.w	r0, #4294967295
 8003d34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003d38:	4407      	add	r7, r0
 8003d3a:	eba8 0800 	sub.w	r8, r8, r0
 8003d3e:	e7e7      	b.n	8003d10 <__sflush_r+0xd4>
 8003d40:	dfbffffe 	.word	0xdfbffffe

08003d44 <_fflush_r>:
 8003d44:	b538      	push	{r3, r4, r5, lr}
 8003d46:	690b      	ldr	r3, [r1, #16]
 8003d48:	4605      	mov	r5, r0
 8003d4a:	460c      	mov	r4, r1
 8003d4c:	b913      	cbnz	r3, 8003d54 <_fflush_r+0x10>
 8003d4e:	2500      	movs	r5, #0
 8003d50:	4628      	mov	r0, r5
 8003d52:	bd38      	pop	{r3, r4, r5, pc}
 8003d54:	b118      	cbz	r0, 8003d5e <_fflush_r+0x1a>
 8003d56:	6a03      	ldr	r3, [r0, #32]
 8003d58:	b90b      	cbnz	r3, 8003d5e <_fflush_r+0x1a>
 8003d5a:	f7fe fa19 	bl	8002190 <__sinit>
 8003d5e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003d62:	2b00      	cmp	r3, #0
 8003d64:	d0f3      	beq.n	8003d4e <_fflush_r+0xa>
 8003d66:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003d68:	07d0      	lsls	r0, r2, #31
 8003d6a:	d404      	bmi.n	8003d76 <_fflush_r+0x32>
 8003d6c:	0599      	lsls	r1, r3, #22
 8003d6e:	d402      	bmi.n	8003d76 <_fflush_r+0x32>
 8003d70:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003d72:	f7fe fb38 	bl	80023e6 <__retarget_lock_acquire_recursive>
 8003d76:	4628      	mov	r0, r5
 8003d78:	4621      	mov	r1, r4
 8003d7a:	f7ff ff5f 	bl	8003c3c <__sflush_r>
 8003d7e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003d80:	07da      	lsls	r2, r3, #31
 8003d82:	4605      	mov	r5, r0
 8003d84:	d4e4      	bmi.n	8003d50 <_fflush_r+0xc>
 8003d86:	89a3      	ldrh	r3, [r4, #12]
 8003d88:	059b      	lsls	r3, r3, #22
 8003d8a:	d4e1      	bmi.n	8003d50 <_fflush_r+0xc>
 8003d8c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003d8e:	f7fe fb2b 	bl	80023e8 <__retarget_lock_release_recursive>
 8003d92:	e7dd      	b.n	8003d50 <_fflush_r+0xc>

08003d94 <memmove>:
 8003d94:	4288      	cmp	r0, r1
 8003d96:	b510      	push	{r4, lr}
 8003d98:	eb01 0402 	add.w	r4, r1, r2
 8003d9c:	d902      	bls.n	8003da4 <memmove+0x10>
 8003d9e:	4284      	cmp	r4, r0
 8003da0:	4623      	mov	r3, r4
 8003da2:	d807      	bhi.n	8003db4 <memmove+0x20>
 8003da4:	1e43      	subs	r3, r0, #1
 8003da6:	42a1      	cmp	r1, r4
 8003da8:	d008      	beq.n	8003dbc <memmove+0x28>
 8003daa:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003dae:	f803 2f01 	strb.w	r2, [r3, #1]!
 8003db2:	e7f8      	b.n	8003da6 <memmove+0x12>
 8003db4:	4402      	add	r2, r0
 8003db6:	4601      	mov	r1, r0
 8003db8:	428a      	cmp	r2, r1
 8003dba:	d100      	bne.n	8003dbe <memmove+0x2a>
 8003dbc:	bd10      	pop	{r4, pc}
 8003dbe:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8003dc2:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8003dc6:	e7f7      	b.n	8003db8 <memmove+0x24>

08003dc8 <_sbrk_r>:
 8003dc8:	b538      	push	{r3, r4, r5, lr}
 8003dca:	4d06      	ldr	r5, [pc, #24]	@ (8003de4 <_sbrk_r+0x1c>)
 8003dcc:	2300      	movs	r3, #0
 8003dce:	4604      	mov	r4, r0
 8003dd0:	4608      	mov	r0, r1
 8003dd2:	602b      	str	r3, [r5, #0]
 8003dd4:	f7fd fc80 	bl	80016d8 <_sbrk>
 8003dd8:	1c43      	adds	r3, r0, #1
 8003dda:	d102      	bne.n	8003de2 <_sbrk_r+0x1a>
 8003ddc:	682b      	ldr	r3, [r5, #0]
 8003dde:	b103      	cbz	r3, 8003de2 <_sbrk_r+0x1a>
 8003de0:	6023      	str	r3, [r4, #0]
 8003de2:	bd38      	pop	{r3, r4, r5, pc}
 8003de4:	20000378 	.word	0x20000378

08003de8 <memcpy>:
 8003de8:	440a      	add	r2, r1
 8003dea:	4291      	cmp	r1, r2
 8003dec:	f100 33ff 	add.w	r3, r0, #4294967295
 8003df0:	d100      	bne.n	8003df4 <memcpy+0xc>
 8003df2:	4770      	bx	lr
 8003df4:	b510      	push	{r4, lr}
 8003df6:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003dfa:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003dfe:	4291      	cmp	r1, r2
 8003e00:	d1f9      	bne.n	8003df6 <memcpy+0xe>
 8003e02:	bd10      	pop	{r4, pc}

08003e04 <__assert_func>:
 8003e04:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003e06:	4614      	mov	r4, r2
 8003e08:	461a      	mov	r2, r3
 8003e0a:	4b09      	ldr	r3, [pc, #36]	@ (8003e30 <__assert_func+0x2c>)
 8003e0c:	681b      	ldr	r3, [r3, #0]
 8003e0e:	4605      	mov	r5, r0
 8003e10:	68d8      	ldr	r0, [r3, #12]
 8003e12:	b954      	cbnz	r4, 8003e2a <__assert_func+0x26>
 8003e14:	4b07      	ldr	r3, [pc, #28]	@ (8003e34 <__assert_func+0x30>)
 8003e16:	461c      	mov	r4, r3
 8003e18:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003e1c:	9100      	str	r1, [sp, #0]
 8003e1e:	462b      	mov	r3, r5
 8003e20:	4905      	ldr	r1, [pc, #20]	@ (8003e38 <__assert_func+0x34>)
 8003e22:	f000 f86f 	bl	8003f04 <fiprintf>
 8003e26:	f000 f87f 	bl	8003f28 <abort>
 8003e2a:	4b04      	ldr	r3, [pc, #16]	@ (8003e3c <__assert_func+0x38>)
 8003e2c:	e7f4      	b.n	8003e18 <__assert_func+0x14>
 8003e2e:	bf00      	nop
 8003e30:	2000000c 	.word	0x2000000c
 8003e34:	08004986 	.word	0x08004986
 8003e38:	08004958 	.word	0x08004958
 8003e3c:	0800494b 	.word	0x0800494b

08003e40 <_calloc_r>:
 8003e40:	b570      	push	{r4, r5, r6, lr}
 8003e42:	fba1 5402 	umull	r5, r4, r1, r2
 8003e46:	b93c      	cbnz	r4, 8003e58 <_calloc_r+0x18>
 8003e48:	4629      	mov	r1, r5
 8003e4a:	f7ff f991 	bl	8003170 <_malloc_r>
 8003e4e:	4606      	mov	r6, r0
 8003e50:	b928      	cbnz	r0, 8003e5e <_calloc_r+0x1e>
 8003e52:	2600      	movs	r6, #0
 8003e54:	4630      	mov	r0, r6
 8003e56:	bd70      	pop	{r4, r5, r6, pc}
 8003e58:	220c      	movs	r2, #12
 8003e5a:	6002      	str	r2, [r0, #0]
 8003e5c:	e7f9      	b.n	8003e52 <_calloc_r+0x12>
 8003e5e:	462a      	mov	r2, r5
 8003e60:	4621      	mov	r1, r4
 8003e62:	f7fe fa42 	bl	80022ea <memset>
 8003e66:	e7f5      	b.n	8003e54 <_calloc_r+0x14>

08003e68 <__ascii_mbtowc>:
 8003e68:	b082      	sub	sp, #8
 8003e6a:	b901      	cbnz	r1, 8003e6e <__ascii_mbtowc+0x6>
 8003e6c:	a901      	add	r1, sp, #4
 8003e6e:	b142      	cbz	r2, 8003e82 <__ascii_mbtowc+0x1a>
 8003e70:	b14b      	cbz	r3, 8003e86 <__ascii_mbtowc+0x1e>
 8003e72:	7813      	ldrb	r3, [r2, #0]
 8003e74:	600b      	str	r3, [r1, #0]
 8003e76:	7812      	ldrb	r2, [r2, #0]
 8003e78:	1e10      	subs	r0, r2, #0
 8003e7a:	bf18      	it	ne
 8003e7c:	2001      	movne	r0, #1
 8003e7e:	b002      	add	sp, #8
 8003e80:	4770      	bx	lr
 8003e82:	4610      	mov	r0, r2
 8003e84:	e7fb      	b.n	8003e7e <__ascii_mbtowc+0x16>
 8003e86:	f06f 0001 	mvn.w	r0, #1
 8003e8a:	e7f8      	b.n	8003e7e <__ascii_mbtowc+0x16>

08003e8c <_realloc_r>:
 8003e8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003e90:	4680      	mov	r8, r0
 8003e92:	4615      	mov	r5, r2
 8003e94:	460c      	mov	r4, r1
 8003e96:	b921      	cbnz	r1, 8003ea2 <_realloc_r+0x16>
 8003e98:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003e9c:	4611      	mov	r1, r2
 8003e9e:	f7ff b967 	b.w	8003170 <_malloc_r>
 8003ea2:	b92a      	cbnz	r2, 8003eb0 <_realloc_r+0x24>
 8003ea4:	f7ff f8f0 	bl	8003088 <_free_r>
 8003ea8:	2400      	movs	r4, #0
 8003eaa:	4620      	mov	r0, r4
 8003eac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003eb0:	f000 f841 	bl	8003f36 <_malloc_usable_size_r>
 8003eb4:	4285      	cmp	r5, r0
 8003eb6:	4606      	mov	r6, r0
 8003eb8:	d802      	bhi.n	8003ec0 <_realloc_r+0x34>
 8003eba:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8003ebe:	d8f4      	bhi.n	8003eaa <_realloc_r+0x1e>
 8003ec0:	4629      	mov	r1, r5
 8003ec2:	4640      	mov	r0, r8
 8003ec4:	f7ff f954 	bl	8003170 <_malloc_r>
 8003ec8:	4607      	mov	r7, r0
 8003eca:	2800      	cmp	r0, #0
 8003ecc:	d0ec      	beq.n	8003ea8 <_realloc_r+0x1c>
 8003ece:	42b5      	cmp	r5, r6
 8003ed0:	462a      	mov	r2, r5
 8003ed2:	4621      	mov	r1, r4
 8003ed4:	bf28      	it	cs
 8003ed6:	4632      	movcs	r2, r6
 8003ed8:	f7ff ff86 	bl	8003de8 <memcpy>
 8003edc:	4621      	mov	r1, r4
 8003ede:	4640      	mov	r0, r8
 8003ee0:	f7ff f8d2 	bl	8003088 <_free_r>
 8003ee4:	463c      	mov	r4, r7
 8003ee6:	e7e0      	b.n	8003eaa <_realloc_r+0x1e>

08003ee8 <__ascii_wctomb>:
 8003ee8:	4603      	mov	r3, r0
 8003eea:	4608      	mov	r0, r1
 8003eec:	b141      	cbz	r1, 8003f00 <__ascii_wctomb+0x18>
 8003eee:	2aff      	cmp	r2, #255	@ 0xff
 8003ef0:	d904      	bls.n	8003efc <__ascii_wctomb+0x14>
 8003ef2:	228a      	movs	r2, #138	@ 0x8a
 8003ef4:	601a      	str	r2, [r3, #0]
 8003ef6:	f04f 30ff 	mov.w	r0, #4294967295
 8003efa:	4770      	bx	lr
 8003efc:	700a      	strb	r2, [r1, #0]
 8003efe:	2001      	movs	r0, #1
 8003f00:	4770      	bx	lr
	...

08003f04 <fiprintf>:
 8003f04:	b40e      	push	{r1, r2, r3}
 8003f06:	b503      	push	{r0, r1, lr}
 8003f08:	4601      	mov	r1, r0
 8003f0a:	ab03      	add	r3, sp, #12
 8003f0c:	4805      	ldr	r0, [pc, #20]	@ (8003f24 <fiprintf+0x20>)
 8003f0e:	f853 2b04 	ldr.w	r2, [r3], #4
 8003f12:	6800      	ldr	r0, [r0, #0]
 8003f14:	9301      	str	r3, [sp, #4]
 8003f16:	f000 f83f 	bl	8003f98 <_vfiprintf_r>
 8003f1a:	b002      	add	sp, #8
 8003f1c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003f20:	b003      	add	sp, #12
 8003f22:	4770      	bx	lr
 8003f24:	2000000c 	.word	0x2000000c

08003f28 <abort>:
 8003f28:	b508      	push	{r3, lr}
 8003f2a:	2006      	movs	r0, #6
 8003f2c:	f000 fa08 	bl	8004340 <raise>
 8003f30:	2001      	movs	r0, #1
 8003f32:	f7fd fb59 	bl	80015e8 <_exit>

08003f36 <_malloc_usable_size_r>:
 8003f36:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003f3a:	1f18      	subs	r0, r3, #4
 8003f3c:	2b00      	cmp	r3, #0
 8003f3e:	bfbc      	itt	lt
 8003f40:	580b      	ldrlt	r3, [r1, r0]
 8003f42:	18c0      	addlt	r0, r0, r3
 8003f44:	4770      	bx	lr

08003f46 <__sfputc_r>:
 8003f46:	6893      	ldr	r3, [r2, #8]
 8003f48:	3b01      	subs	r3, #1
 8003f4a:	2b00      	cmp	r3, #0
 8003f4c:	b410      	push	{r4}
 8003f4e:	6093      	str	r3, [r2, #8]
 8003f50:	da08      	bge.n	8003f64 <__sfputc_r+0x1e>
 8003f52:	6994      	ldr	r4, [r2, #24]
 8003f54:	42a3      	cmp	r3, r4
 8003f56:	db01      	blt.n	8003f5c <__sfputc_r+0x16>
 8003f58:	290a      	cmp	r1, #10
 8003f5a:	d103      	bne.n	8003f64 <__sfputc_r+0x1e>
 8003f5c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003f60:	f000 b932 	b.w	80041c8 <__swbuf_r>
 8003f64:	6813      	ldr	r3, [r2, #0]
 8003f66:	1c58      	adds	r0, r3, #1
 8003f68:	6010      	str	r0, [r2, #0]
 8003f6a:	7019      	strb	r1, [r3, #0]
 8003f6c:	4608      	mov	r0, r1
 8003f6e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003f72:	4770      	bx	lr

08003f74 <__sfputs_r>:
 8003f74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003f76:	4606      	mov	r6, r0
 8003f78:	460f      	mov	r7, r1
 8003f7a:	4614      	mov	r4, r2
 8003f7c:	18d5      	adds	r5, r2, r3
 8003f7e:	42ac      	cmp	r4, r5
 8003f80:	d101      	bne.n	8003f86 <__sfputs_r+0x12>
 8003f82:	2000      	movs	r0, #0
 8003f84:	e007      	b.n	8003f96 <__sfputs_r+0x22>
 8003f86:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003f8a:	463a      	mov	r2, r7
 8003f8c:	4630      	mov	r0, r6
 8003f8e:	f7ff ffda 	bl	8003f46 <__sfputc_r>
 8003f92:	1c43      	adds	r3, r0, #1
 8003f94:	d1f3      	bne.n	8003f7e <__sfputs_r+0xa>
 8003f96:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08003f98 <_vfiprintf_r>:
 8003f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f9c:	460d      	mov	r5, r1
 8003f9e:	b09d      	sub	sp, #116	@ 0x74
 8003fa0:	4614      	mov	r4, r2
 8003fa2:	4698      	mov	r8, r3
 8003fa4:	4606      	mov	r6, r0
 8003fa6:	b118      	cbz	r0, 8003fb0 <_vfiprintf_r+0x18>
 8003fa8:	6a03      	ldr	r3, [r0, #32]
 8003faa:	b90b      	cbnz	r3, 8003fb0 <_vfiprintf_r+0x18>
 8003fac:	f7fe f8f0 	bl	8002190 <__sinit>
 8003fb0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003fb2:	07d9      	lsls	r1, r3, #31
 8003fb4:	d405      	bmi.n	8003fc2 <_vfiprintf_r+0x2a>
 8003fb6:	89ab      	ldrh	r3, [r5, #12]
 8003fb8:	059a      	lsls	r2, r3, #22
 8003fba:	d402      	bmi.n	8003fc2 <_vfiprintf_r+0x2a>
 8003fbc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003fbe:	f7fe fa12 	bl	80023e6 <__retarget_lock_acquire_recursive>
 8003fc2:	89ab      	ldrh	r3, [r5, #12]
 8003fc4:	071b      	lsls	r3, r3, #28
 8003fc6:	d501      	bpl.n	8003fcc <_vfiprintf_r+0x34>
 8003fc8:	692b      	ldr	r3, [r5, #16]
 8003fca:	b99b      	cbnz	r3, 8003ff4 <_vfiprintf_r+0x5c>
 8003fcc:	4629      	mov	r1, r5
 8003fce:	4630      	mov	r0, r6
 8003fd0:	f000 f938 	bl	8004244 <__swsetup_r>
 8003fd4:	b170      	cbz	r0, 8003ff4 <_vfiprintf_r+0x5c>
 8003fd6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003fd8:	07dc      	lsls	r4, r3, #31
 8003fda:	d504      	bpl.n	8003fe6 <_vfiprintf_r+0x4e>
 8003fdc:	f04f 30ff 	mov.w	r0, #4294967295
 8003fe0:	b01d      	add	sp, #116	@ 0x74
 8003fe2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003fe6:	89ab      	ldrh	r3, [r5, #12]
 8003fe8:	0598      	lsls	r0, r3, #22
 8003fea:	d4f7      	bmi.n	8003fdc <_vfiprintf_r+0x44>
 8003fec:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003fee:	f7fe f9fb 	bl	80023e8 <__retarget_lock_release_recursive>
 8003ff2:	e7f3      	b.n	8003fdc <_vfiprintf_r+0x44>
 8003ff4:	2300      	movs	r3, #0
 8003ff6:	9309      	str	r3, [sp, #36]	@ 0x24
 8003ff8:	2320      	movs	r3, #32
 8003ffa:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003ffe:	f8cd 800c 	str.w	r8, [sp, #12]
 8004002:	2330      	movs	r3, #48	@ 0x30
 8004004:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80041b4 <_vfiprintf_r+0x21c>
 8004008:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800400c:	f04f 0901 	mov.w	r9, #1
 8004010:	4623      	mov	r3, r4
 8004012:	469a      	mov	sl, r3
 8004014:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004018:	b10a      	cbz	r2, 800401e <_vfiprintf_r+0x86>
 800401a:	2a25      	cmp	r2, #37	@ 0x25
 800401c:	d1f9      	bne.n	8004012 <_vfiprintf_r+0x7a>
 800401e:	ebba 0b04 	subs.w	fp, sl, r4
 8004022:	d00b      	beq.n	800403c <_vfiprintf_r+0xa4>
 8004024:	465b      	mov	r3, fp
 8004026:	4622      	mov	r2, r4
 8004028:	4629      	mov	r1, r5
 800402a:	4630      	mov	r0, r6
 800402c:	f7ff ffa2 	bl	8003f74 <__sfputs_r>
 8004030:	3001      	adds	r0, #1
 8004032:	f000 80a7 	beq.w	8004184 <_vfiprintf_r+0x1ec>
 8004036:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004038:	445a      	add	r2, fp
 800403a:	9209      	str	r2, [sp, #36]	@ 0x24
 800403c:	f89a 3000 	ldrb.w	r3, [sl]
 8004040:	2b00      	cmp	r3, #0
 8004042:	f000 809f 	beq.w	8004184 <_vfiprintf_r+0x1ec>
 8004046:	2300      	movs	r3, #0
 8004048:	f04f 32ff 	mov.w	r2, #4294967295
 800404c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004050:	f10a 0a01 	add.w	sl, sl, #1
 8004054:	9304      	str	r3, [sp, #16]
 8004056:	9307      	str	r3, [sp, #28]
 8004058:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800405c:	931a      	str	r3, [sp, #104]	@ 0x68
 800405e:	4654      	mov	r4, sl
 8004060:	2205      	movs	r2, #5
 8004062:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004066:	4853      	ldr	r0, [pc, #332]	@ (80041b4 <_vfiprintf_r+0x21c>)
 8004068:	f7fc f8d2 	bl	8000210 <memchr>
 800406c:	9a04      	ldr	r2, [sp, #16]
 800406e:	b9d8      	cbnz	r0, 80040a8 <_vfiprintf_r+0x110>
 8004070:	06d1      	lsls	r1, r2, #27
 8004072:	bf44      	itt	mi
 8004074:	2320      	movmi	r3, #32
 8004076:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800407a:	0713      	lsls	r3, r2, #28
 800407c:	bf44      	itt	mi
 800407e:	232b      	movmi	r3, #43	@ 0x2b
 8004080:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004084:	f89a 3000 	ldrb.w	r3, [sl]
 8004088:	2b2a      	cmp	r3, #42	@ 0x2a
 800408a:	d015      	beq.n	80040b8 <_vfiprintf_r+0x120>
 800408c:	9a07      	ldr	r2, [sp, #28]
 800408e:	4654      	mov	r4, sl
 8004090:	2000      	movs	r0, #0
 8004092:	f04f 0c0a 	mov.w	ip, #10
 8004096:	4621      	mov	r1, r4
 8004098:	f811 3b01 	ldrb.w	r3, [r1], #1
 800409c:	3b30      	subs	r3, #48	@ 0x30
 800409e:	2b09      	cmp	r3, #9
 80040a0:	d94b      	bls.n	800413a <_vfiprintf_r+0x1a2>
 80040a2:	b1b0      	cbz	r0, 80040d2 <_vfiprintf_r+0x13a>
 80040a4:	9207      	str	r2, [sp, #28]
 80040a6:	e014      	b.n	80040d2 <_vfiprintf_r+0x13a>
 80040a8:	eba0 0308 	sub.w	r3, r0, r8
 80040ac:	fa09 f303 	lsl.w	r3, r9, r3
 80040b0:	4313      	orrs	r3, r2
 80040b2:	9304      	str	r3, [sp, #16]
 80040b4:	46a2      	mov	sl, r4
 80040b6:	e7d2      	b.n	800405e <_vfiprintf_r+0xc6>
 80040b8:	9b03      	ldr	r3, [sp, #12]
 80040ba:	1d19      	adds	r1, r3, #4
 80040bc:	681b      	ldr	r3, [r3, #0]
 80040be:	9103      	str	r1, [sp, #12]
 80040c0:	2b00      	cmp	r3, #0
 80040c2:	bfbb      	ittet	lt
 80040c4:	425b      	neglt	r3, r3
 80040c6:	f042 0202 	orrlt.w	r2, r2, #2
 80040ca:	9307      	strge	r3, [sp, #28]
 80040cc:	9307      	strlt	r3, [sp, #28]
 80040ce:	bfb8      	it	lt
 80040d0:	9204      	strlt	r2, [sp, #16]
 80040d2:	7823      	ldrb	r3, [r4, #0]
 80040d4:	2b2e      	cmp	r3, #46	@ 0x2e
 80040d6:	d10a      	bne.n	80040ee <_vfiprintf_r+0x156>
 80040d8:	7863      	ldrb	r3, [r4, #1]
 80040da:	2b2a      	cmp	r3, #42	@ 0x2a
 80040dc:	d132      	bne.n	8004144 <_vfiprintf_r+0x1ac>
 80040de:	9b03      	ldr	r3, [sp, #12]
 80040e0:	1d1a      	adds	r2, r3, #4
 80040e2:	681b      	ldr	r3, [r3, #0]
 80040e4:	9203      	str	r2, [sp, #12]
 80040e6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80040ea:	3402      	adds	r4, #2
 80040ec:	9305      	str	r3, [sp, #20]
 80040ee:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80041c4 <_vfiprintf_r+0x22c>
 80040f2:	7821      	ldrb	r1, [r4, #0]
 80040f4:	2203      	movs	r2, #3
 80040f6:	4650      	mov	r0, sl
 80040f8:	f7fc f88a 	bl	8000210 <memchr>
 80040fc:	b138      	cbz	r0, 800410e <_vfiprintf_r+0x176>
 80040fe:	9b04      	ldr	r3, [sp, #16]
 8004100:	eba0 000a 	sub.w	r0, r0, sl
 8004104:	2240      	movs	r2, #64	@ 0x40
 8004106:	4082      	lsls	r2, r0
 8004108:	4313      	orrs	r3, r2
 800410a:	3401      	adds	r4, #1
 800410c:	9304      	str	r3, [sp, #16]
 800410e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004112:	4829      	ldr	r0, [pc, #164]	@ (80041b8 <_vfiprintf_r+0x220>)
 8004114:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8004118:	2206      	movs	r2, #6
 800411a:	f7fc f879 	bl	8000210 <memchr>
 800411e:	2800      	cmp	r0, #0
 8004120:	d03f      	beq.n	80041a2 <_vfiprintf_r+0x20a>
 8004122:	4b26      	ldr	r3, [pc, #152]	@ (80041bc <_vfiprintf_r+0x224>)
 8004124:	bb1b      	cbnz	r3, 800416e <_vfiprintf_r+0x1d6>
 8004126:	9b03      	ldr	r3, [sp, #12]
 8004128:	3307      	adds	r3, #7
 800412a:	f023 0307 	bic.w	r3, r3, #7
 800412e:	3308      	adds	r3, #8
 8004130:	9303      	str	r3, [sp, #12]
 8004132:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004134:	443b      	add	r3, r7
 8004136:	9309      	str	r3, [sp, #36]	@ 0x24
 8004138:	e76a      	b.n	8004010 <_vfiprintf_r+0x78>
 800413a:	fb0c 3202 	mla	r2, ip, r2, r3
 800413e:	460c      	mov	r4, r1
 8004140:	2001      	movs	r0, #1
 8004142:	e7a8      	b.n	8004096 <_vfiprintf_r+0xfe>
 8004144:	2300      	movs	r3, #0
 8004146:	3401      	adds	r4, #1
 8004148:	9305      	str	r3, [sp, #20]
 800414a:	4619      	mov	r1, r3
 800414c:	f04f 0c0a 	mov.w	ip, #10
 8004150:	4620      	mov	r0, r4
 8004152:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004156:	3a30      	subs	r2, #48	@ 0x30
 8004158:	2a09      	cmp	r2, #9
 800415a:	d903      	bls.n	8004164 <_vfiprintf_r+0x1cc>
 800415c:	2b00      	cmp	r3, #0
 800415e:	d0c6      	beq.n	80040ee <_vfiprintf_r+0x156>
 8004160:	9105      	str	r1, [sp, #20]
 8004162:	e7c4      	b.n	80040ee <_vfiprintf_r+0x156>
 8004164:	fb0c 2101 	mla	r1, ip, r1, r2
 8004168:	4604      	mov	r4, r0
 800416a:	2301      	movs	r3, #1
 800416c:	e7f0      	b.n	8004150 <_vfiprintf_r+0x1b8>
 800416e:	ab03      	add	r3, sp, #12
 8004170:	9300      	str	r3, [sp, #0]
 8004172:	462a      	mov	r2, r5
 8004174:	4b12      	ldr	r3, [pc, #72]	@ (80041c0 <_vfiprintf_r+0x228>)
 8004176:	a904      	add	r1, sp, #16
 8004178:	4630      	mov	r0, r6
 800417a:	f7fd fbc5 	bl	8001908 <_printf_float>
 800417e:	4607      	mov	r7, r0
 8004180:	1c78      	adds	r0, r7, #1
 8004182:	d1d6      	bne.n	8004132 <_vfiprintf_r+0x19a>
 8004184:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004186:	07d9      	lsls	r1, r3, #31
 8004188:	d405      	bmi.n	8004196 <_vfiprintf_r+0x1fe>
 800418a:	89ab      	ldrh	r3, [r5, #12]
 800418c:	059a      	lsls	r2, r3, #22
 800418e:	d402      	bmi.n	8004196 <_vfiprintf_r+0x1fe>
 8004190:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004192:	f7fe f929 	bl	80023e8 <__retarget_lock_release_recursive>
 8004196:	89ab      	ldrh	r3, [r5, #12]
 8004198:	065b      	lsls	r3, r3, #25
 800419a:	f53f af1f 	bmi.w	8003fdc <_vfiprintf_r+0x44>
 800419e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80041a0:	e71e      	b.n	8003fe0 <_vfiprintf_r+0x48>
 80041a2:	ab03      	add	r3, sp, #12
 80041a4:	9300      	str	r3, [sp, #0]
 80041a6:	462a      	mov	r2, r5
 80041a8:	4b05      	ldr	r3, [pc, #20]	@ (80041c0 <_vfiprintf_r+0x228>)
 80041aa:	a904      	add	r1, sp, #16
 80041ac:	4630      	mov	r0, r6
 80041ae:	f7fd fe43 	bl	8001e38 <_printf_i>
 80041b2:	e7e4      	b.n	800417e <_vfiprintf_r+0x1e6>
 80041b4:	08004930 	.word	0x08004930
 80041b8:	0800493a 	.word	0x0800493a
 80041bc:	08001909 	.word	0x08001909
 80041c0:	08003f75 	.word	0x08003f75
 80041c4:	08004936 	.word	0x08004936

080041c8 <__swbuf_r>:
 80041c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80041ca:	460e      	mov	r6, r1
 80041cc:	4614      	mov	r4, r2
 80041ce:	4605      	mov	r5, r0
 80041d0:	b118      	cbz	r0, 80041da <__swbuf_r+0x12>
 80041d2:	6a03      	ldr	r3, [r0, #32]
 80041d4:	b90b      	cbnz	r3, 80041da <__swbuf_r+0x12>
 80041d6:	f7fd ffdb 	bl	8002190 <__sinit>
 80041da:	69a3      	ldr	r3, [r4, #24]
 80041dc:	60a3      	str	r3, [r4, #8]
 80041de:	89a3      	ldrh	r3, [r4, #12]
 80041e0:	071a      	lsls	r2, r3, #28
 80041e2:	d501      	bpl.n	80041e8 <__swbuf_r+0x20>
 80041e4:	6923      	ldr	r3, [r4, #16]
 80041e6:	b943      	cbnz	r3, 80041fa <__swbuf_r+0x32>
 80041e8:	4621      	mov	r1, r4
 80041ea:	4628      	mov	r0, r5
 80041ec:	f000 f82a 	bl	8004244 <__swsetup_r>
 80041f0:	b118      	cbz	r0, 80041fa <__swbuf_r+0x32>
 80041f2:	f04f 37ff 	mov.w	r7, #4294967295
 80041f6:	4638      	mov	r0, r7
 80041f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80041fa:	6823      	ldr	r3, [r4, #0]
 80041fc:	6922      	ldr	r2, [r4, #16]
 80041fe:	1a98      	subs	r0, r3, r2
 8004200:	6963      	ldr	r3, [r4, #20]
 8004202:	b2f6      	uxtb	r6, r6
 8004204:	4283      	cmp	r3, r0
 8004206:	4637      	mov	r7, r6
 8004208:	dc05      	bgt.n	8004216 <__swbuf_r+0x4e>
 800420a:	4621      	mov	r1, r4
 800420c:	4628      	mov	r0, r5
 800420e:	f7ff fd99 	bl	8003d44 <_fflush_r>
 8004212:	2800      	cmp	r0, #0
 8004214:	d1ed      	bne.n	80041f2 <__swbuf_r+0x2a>
 8004216:	68a3      	ldr	r3, [r4, #8]
 8004218:	3b01      	subs	r3, #1
 800421a:	60a3      	str	r3, [r4, #8]
 800421c:	6823      	ldr	r3, [r4, #0]
 800421e:	1c5a      	adds	r2, r3, #1
 8004220:	6022      	str	r2, [r4, #0]
 8004222:	701e      	strb	r6, [r3, #0]
 8004224:	6962      	ldr	r2, [r4, #20]
 8004226:	1c43      	adds	r3, r0, #1
 8004228:	429a      	cmp	r2, r3
 800422a:	d004      	beq.n	8004236 <__swbuf_r+0x6e>
 800422c:	89a3      	ldrh	r3, [r4, #12]
 800422e:	07db      	lsls	r3, r3, #31
 8004230:	d5e1      	bpl.n	80041f6 <__swbuf_r+0x2e>
 8004232:	2e0a      	cmp	r6, #10
 8004234:	d1df      	bne.n	80041f6 <__swbuf_r+0x2e>
 8004236:	4621      	mov	r1, r4
 8004238:	4628      	mov	r0, r5
 800423a:	f7ff fd83 	bl	8003d44 <_fflush_r>
 800423e:	2800      	cmp	r0, #0
 8004240:	d0d9      	beq.n	80041f6 <__swbuf_r+0x2e>
 8004242:	e7d6      	b.n	80041f2 <__swbuf_r+0x2a>

08004244 <__swsetup_r>:
 8004244:	b538      	push	{r3, r4, r5, lr}
 8004246:	4b29      	ldr	r3, [pc, #164]	@ (80042ec <__swsetup_r+0xa8>)
 8004248:	4605      	mov	r5, r0
 800424a:	6818      	ldr	r0, [r3, #0]
 800424c:	460c      	mov	r4, r1
 800424e:	b118      	cbz	r0, 8004258 <__swsetup_r+0x14>
 8004250:	6a03      	ldr	r3, [r0, #32]
 8004252:	b90b      	cbnz	r3, 8004258 <__swsetup_r+0x14>
 8004254:	f7fd ff9c 	bl	8002190 <__sinit>
 8004258:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800425c:	0719      	lsls	r1, r3, #28
 800425e:	d422      	bmi.n	80042a6 <__swsetup_r+0x62>
 8004260:	06da      	lsls	r2, r3, #27
 8004262:	d407      	bmi.n	8004274 <__swsetup_r+0x30>
 8004264:	2209      	movs	r2, #9
 8004266:	602a      	str	r2, [r5, #0]
 8004268:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800426c:	81a3      	strh	r3, [r4, #12]
 800426e:	f04f 30ff 	mov.w	r0, #4294967295
 8004272:	e033      	b.n	80042dc <__swsetup_r+0x98>
 8004274:	0758      	lsls	r0, r3, #29
 8004276:	d512      	bpl.n	800429e <__swsetup_r+0x5a>
 8004278:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800427a:	b141      	cbz	r1, 800428e <__swsetup_r+0x4a>
 800427c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004280:	4299      	cmp	r1, r3
 8004282:	d002      	beq.n	800428a <__swsetup_r+0x46>
 8004284:	4628      	mov	r0, r5
 8004286:	f7fe feff 	bl	8003088 <_free_r>
 800428a:	2300      	movs	r3, #0
 800428c:	6363      	str	r3, [r4, #52]	@ 0x34
 800428e:	89a3      	ldrh	r3, [r4, #12]
 8004290:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8004294:	81a3      	strh	r3, [r4, #12]
 8004296:	2300      	movs	r3, #0
 8004298:	6063      	str	r3, [r4, #4]
 800429a:	6923      	ldr	r3, [r4, #16]
 800429c:	6023      	str	r3, [r4, #0]
 800429e:	89a3      	ldrh	r3, [r4, #12]
 80042a0:	f043 0308 	orr.w	r3, r3, #8
 80042a4:	81a3      	strh	r3, [r4, #12]
 80042a6:	6923      	ldr	r3, [r4, #16]
 80042a8:	b94b      	cbnz	r3, 80042be <__swsetup_r+0x7a>
 80042aa:	89a3      	ldrh	r3, [r4, #12]
 80042ac:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80042b0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80042b4:	d003      	beq.n	80042be <__swsetup_r+0x7a>
 80042b6:	4621      	mov	r1, r4
 80042b8:	4628      	mov	r0, r5
 80042ba:	f000 f883 	bl	80043c4 <__smakebuf_r>
 80042be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80042c2:	f013 0201 	ands.w	r2, r3, #1
 80042c6:	d00a      	beq.n	80042de <__swsetup_r+0x9a>
 80042c8:	2200      	movs	r2, #0
 80042ca:	60a2      	str	r2, [r4, #8]
 80042cc:	6962      	ldr	r2, [r4, #20]
 80042ce:	4252      	negs	r2, r2
 80042d0:	61a2      	str	r2, [r4, #24]
 80042d2:	6922      	ldr	r2, [r4, #16]
 80042d4:	b942      	cbnz	r2, 80042e8 <__swsetup_r+0xa4>
 80042d6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80042da:	d1c5      	bne.n	8004268 <__swsetup_r+0x24>
 80042dc:	bd38      	pop	{r3, r4, r5, pc}
 80042de:	0799      	lsls	r1, r3, #30
 80042e0:	bf58      	it	pl
 80042e2:	6962      	ldrpl	r2, [r4, #20]
 80042e4:	60a2      	str	r2, [r4, #8]
 80042e6:	e7f4      	b.n	80042d2 <__swsetup_r+0x8e>
 80042e8:	2000      	movs	r0, #0
 80042ea:	e7f7      	b.n	80042dc <__swsetup_r+0x98>
 80042ec:	2000000c 	.word	0x2000000c

080042f0 <_raise_r>:
 80042f0:	291f      	cmp	r1, #31
 80042f2:	b538      	push	{r3, r4, r5, lr}
 80042f4:	4605      	mov	r5, r0
 80042f6:	460c      	mov	r4, r1
 80042f8:	d904      	bls.n	8004304 <_raise_r+0x14>
 80042fa:	2316      	movs	r3, #22
 80042fc:	6003      	str	r3, [r0, #0]
 80042fe:	f04f 30ff 	mov.w	r0, #4294967295
 8004302:	bd38      	pop	{r3, r4, r5, pc}
 8004304:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004306:	b112      	cbz	r2, 800430e <_raise_r+0x1e>
 8004308:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800430c:	b94b      	cbnz	r3, 8004322 <_raise_r+0x32>
 800430e:	4628      	mov	r0, r5
 8004310:	f000 f830 	bl	8004374 <_getpid_r>
 8004314:	4622      	mov	r2, r4
 8004316:	4601      	mov	r1, r0
 8004318:	4628      	mov	r0, r5
 800431a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800431e:	f000 b817 	b.w	8004350 <_kill_r>
 8004322:	2b01      	cmp	r3, #1
 8004324:	d00a      	beq.n	800433c <_raise_r+0x4c>
 8004326:	1c59      	adds	r1, r3, #1
 8004328:	d103      	bne.n	8004332 <_raise_r+0x42>
 800432a:	2316      	movs	r3, #22
 800432c:	6003      	str	r3, [r0, #0]
 800432e:	2001      	movs	r0, #1
 8004330:	e7e7      	b.n	8004302 <_raise_r+0x12>
 8004332:	2100      	movs	r1, #0
 8004334:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004338:	4620      	mov	r0, r4
 800433a:	4798      	blx	r3
 800433c:	2000      	movs	r0, #0
 800433e:	e7e0      	b.n	8004302 <_raise_r+0x12>

08004340 <raise>:
 8004340:	4b02      	ldr	r3, [pc, #8]	@ (800434c <raise+0xc>)
 8004342:	4601      	mov	r1, r0
 8004344:	6818      	ldr	r0, [r3, #0]
 8004346:	f7ff bfd3 	b.w	80042f0 <_raise_r>
 800434a:	bf00      	nop
 800434c:	2000000c 	.word	0x2000000c

08004350 <_kill_r>:
 8004350:	b538      	push	{r3, r4, r5, lr}
 8004352:	4d07      	ldr	r5, [pc, #28]	@ (8004370 <_kill_r+0x20>)
 8004354:	2300      	movs	r3, #0
 8004356:	4604      	mov	r4, r0
 8004358:	4608      	mov	r0, r1
 800435a:	4611      	mov	r1, r2
 800435c:	602b      	str	r3, [r5, #0]
 800435e:	f7fd f933 	bl	80015c8 <_kill>
 8004362:	1c43      	adds	r3, r0, #1
 8004364:	d102      	bne.n	800436c <_kill_r+0x1c>
 8004366:	682b      	ldr	r3, [r5, #0]
 8004368:	b103      	cbz	r3, 800436c <_kill_r+0x1c>
 800436a:	6023      	str	r3, [r4, #0]
 800436c:	bd38      	pop	{r3, r4, r5, pc}
 800436e:	bf00      	nop
 8004370:	20000378 	.word	0x20000378

08004374 <_getpid_r>:
 8004374:	f7fd b920 	b.w	80015b8 <_getpid>

08004378 <__swhatbuf_r>:
 8004378:	b570      	push	{r4, r5, r6, lr}
 800437a:	460c      	mov	r4, r1
 800437c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004380:	2900      	cmp	r1, #0
 8004382:	b096      	sub	sp, #88	@ 0x58
 8004384:	4615      	mov	r5, r2
 8004386:	461e      	mov	r6, r3
 8004388:	da0d      	bge.n	80043a6 <__swhatbuf_r+0x2e>
 800438a:	89a3      	ldrh	r3, [r4, #12]
 800438c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004390:	f04f 0100 	mov.w	r1, #0
 8004394:	bf14      	ite	ne
 8004396:	2340      	movne	r3, #64	@ 0x40
 8004398:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800439c:	2000      	movs	r0, #0
 800439e:	6031      	str	r1, [r6, #0]
 80043a0:	602b      	str	r3, [r5, #0]
 80043a2:	b016      	add	sp, #88	@ 0x58
 80043a4:	bd70      	pop	{r4, r5, r6, pc}
 80043a6:	466a      	mov	r2, sp
 80043a8:	f000 f848 	bl	800443c <_fstat_r>
 80043ac:	2800      	cmp	r0, #0
 80043ae:	dbec      	blt.n	800438a <__swhatbuf_r+0x12>
 80043b0:	9901      	ldr	r1, [sp, #4]
 80043b2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80043b6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80043ba:	4259      	negs	r1, r3
 80043bc:	4159      	adcs	r1, r3
 80043be:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80043c2:	e7eb      	b.n	800439c <__swhatbuf_r+0x24>

080043c4 <__smakebuf_r>:
 80043c4:	898b      	ldrh	r3, [r1, #12]
 80043c6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80043c8:	079d      	lsls	r5, r3, #30
 80043ca:	4606      	mov	r6, r0
 80043cc:	460c      	mov	r4, r1
 80043ce:	d507      	bpl.n	80043e0 <__smakebuf_r+0x1c>
 80043d0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80043d4:	6023      	str	r3, [r4, #0]
 80043d6:	6123      	str	r3, [r4, #16]
 80043d8:	2301      	movs	r3, #1
 80043da:	6163      	str	r3, [r4, #20]
 80043dc:	b003      	add	sp, #12
 80043de:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80043e0:	ab01      	add	r3, sp, #4
 80043e2:	466a      	mov	r2, sp
 80043e4:	f7ff ffc8 	bl	8004378 <__swhatbuf_r>
 80043e8:	9f00      	ldr	r7, [sp, #0]
 80043ea:	4605      	mov	r5, r0
 80043ec:	4639      	mov	r1, r7
 80043ee:	4630      	mov	r0, r6
 80043f0:	f7fe febe 	bl	8003170 <_malloc_r>
 80043f4:	b948      	cbnz	r0, 800440a <__smakebuf_r+0x46>
 80043f6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80043fa:	059a      	lsls	r2, r3, #22
 80043fc:	d4ee      	bmi.n	80043dc <__smakebuf_r+0x18>
 80043fe:	f023 0303 	bic.w	r3, r3, #3
 8004402:	f043 0302 	orr.w	r3, r3, #2
 8004406:	81a3      	strh	r3, [r4, #12]
 8004408:	e7e2      	b.n	80043d0 <__smakebuf_r+0xc>
 800440a:	89a3      	ldrh	r3, [r4, #12]
 800440c:	6020      	str	r0, [r4, #0]
 800440e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004412:	81a3      	strh	r3, [r4, #12]
 8004414:	9b01      	ldr	r3, [sp, #4]
 8004416:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800441a:	b15b      	cbz	r3, 8004434 <__smakebuf_r+0x70>
 800441c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004420:	4630      	mov	r0, r6
 8004422:	f000 f81d 	bl	8004460 <_isatty_r>
 8004426:	b128      	cbz	r0, 8004434 <__smakebuf_r+0x70>
 8004428:	89a3      	ldrh	r3, [r4, #12]
 800442a:	f023 0303 	bic.w	r3, r3, #3
 800442e:	f043 0301 	orr.w	r3, r3, #1
 8004432:	81a3      	strh	r3, [r4, #12]
 8004434:	89a3      	ldrh	r3, [r4, #12]
 8004436:	431d      	orrs	r5, r3
 8004438:	81a5      	strh	r5, [r4, #12]
 800443a:	e7cf      	b.n	80043dc <__smakebuf_r+0x18>

0800443c <_fstat_r>:
 800443c:	b538      	push	{r3, r4, r5, lr}
 800443e:	4d07      	ldr	r5, [pc, #28]	@ (800445c <_fstat_r+0x20>)
 8004440:	2300      	movs	r3, #0
 8004442:	4604      	mov	r4, r0
 8004444:	4608      	mov	r0, r1
 8004446:	4611      	mov	r1, r2
 8004448:	602b      	str	r3, [r5, #0]
 800444a:	f7fd f91d 	bl	8001688 <_fstat>
 800444e:	1c43      	adds	r3, r0, #1
 8004450:	d102      	bne.n	8004458 <_fstat_r+0x1c>
 8004452:	682b      	ldr	r3, [r5, #0]
 8004454:	b103      	cbz	r3, 8004458 <_fstat_r+0x1c>
 8004456:	6023      	str	r3, [r4, #0]
 8004458:	bd38      	pop	{r3, r4, r5, pc}
 800445a:	bf00      	nop
 800445c:	20000378 	.word	0x20000378

08004460 <_isatty_r>:
 8004460:	b538      	push	{r3, r4, r5, lr}
 8004462:	4d06      	ldr	r5, [pc, #24]	@ (800447c <_isatty_r+0x1c>)
 8004464:	2300      	movs	r3, #0
 8004466:	4604      	mov	r4, r0
 8004468:	4608      	mov	r0, r1
 800446a:	602b      	str	r3, [r5, #0]
 800446c:	f7fd f91c 	bl	80016a8 <_isatty>
 8004470:	1c43      	adds	r3, r0, #1
 8004472:	d102      	bne.n	800447a <_isatty_r+0x1a>
 8004474:	682b      	ldr	r3, [r5, #0]
 8004476:	b103      	cbz	r3, 800447a <_isatty_r+0x1a>
 8004478:	6023      	str	r3, [r4, #0]
 800447a:	bd38      	pop	{r3, r4, r5, pc}
 800447c:	20000378 	.word	0x20000378

08004480 <logf>:
 8004480:	b508      	push	{r3, lr}
 8004482:	ed2d 8b02 	vpush	{d8}
 8004486:	eeb0 8a40 	vmov.f32	s16, s0
 800448a:	f000 f82d 	bl	80044e8 <__ieee754_logf>
 800448e:	eeb4 8a48 	vcmp.f32	s16, s16
 8004492:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004496:	d60f      	bvs.n	80044b8 <logf+0x38>
 8004498:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 800449c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044a0:	dc0a      	bgt.n	80044b8 <logf+0x38>
 80044a2:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80044a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044aa:	d108      	bne.n	80044be <logf+0x3e>
 80044ac:	f7fd ff70 	bl	8002390 <__errno>
 80044b0:	2322      	movs	r3, #34	@ 0x22
 80044b2:	ed9f 0a08 	vldr	s0, [pc, #32]	@ 80044d4 <logf+0x54>
 80044b6:	6003      	str	r3, [r0, #0]
 80044b8:	ecbd 8b02 	vpop	{d8}
 80044bc:	bd08      	pop	{r3, pc}
 80044be:	f7fd ff67 	bl	8002390 <__errno>
 80044c2:	ecbd 8b02 	vpop	{d8}
 80044c6:	2321      	movs	r3, #33	@ 0x21
 80044c8:	6003      	str	r3, [r0, #0]
 80044ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80044ce:	4802      	ldr	r0, [pc, #8]	@ (80044d8 <logf+0x58>)
 80044d0:	f000 b804 	b.w	80044dc <nanf>
 80044d4:	ff800000 	.word	0xff800000
 80044d8:	08004986 	.word	0x08004986

080044dc <nanf>:
 80044dc:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 80044e4 <nanf+0x8>
 80044e0:	4770      	bx	lr
 80044e2:	bf00      	nop
 80044e4:	7fc00000 	.word	0x7fc00000

080044e8 <__ieee754_logf>:
 80044e8:	ee10 3a10 	vmov	r3, s0
 80044ec:	f033 4200 	bics.w	r2, r3, #2147483648	@ 0x80000000
 80044f0:	d106      	bne.n	8004500 <__ieee754_logf+0x18>
 80044f2:	ed9f 7a66 	vldr	s14, [pc, #408]	@ 800468c <__ieee754_logf+0x1a4>
 80044f6:	eddf 7a66 	vldr	s15, [pc, #408]	@ 8004690 <__ieee754_logf+0x1a8>
 80044fa:	ee87 0a27 	vdiv.f32	s0, s14, s15
 80044fe:	4770      	bx	lr
 8004500:	2b00      	cmp	r3, #0
 8004502:	461a      	mov	r2, r3
 8004504:	da02      	bge.n	800450c <__ieee754_logf+0x24>
 8004506:	ee30 7a40 	vsub.f32	s14, s0, s0
 800450a:	e7f4      	b.n	80044f6 <__ieee754_logf+0xe>
 800450c:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
 8004510:	db02      	blt.n	8004518 <__ieee754_logf+0x30>
 8004512:	ee30 0a00 	vadd.f32	s0, s0, s0
 8004516:	4770      	bx	lr
 8004518:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 800451c:	bfb8      	it	lt
 800451e:	eddf 7a5d 	vldrlt	s15, [pc, #372]	@ 8004694 <__ieee754_logf+0x1ac>
 8004522:	485d      	ldr	r0, [pc, #372]	@ (8004698 <__ieee754_logf+0x1b0>)
 8004524:	bfbe      	ittt	lt
 8004526:	ee60 7a27 	vmullt.f32	s15, s0, s15
 800452a:	f06f 0118 	mvnlt.w	r1, #24
 800452e:	ee17 2a90 	vmovlt	r2, s15
 8004532:	ea4f 53e2 	mov.w	r3, r2, asr #23
 8004536:	f3c2 0216 	ubfx	r2, r2, #0, #23
 800453a:	4410      	add	r0, r2
 800453c:	bfa8      	it	ge
 800453e:	2100      	movge	r1, #0
 8004540:	3b7f      	subs	r3, #127	@ 0x7f
 8004542:	440b      	add	r3, r1
 8004544:	f400 0100 	and.w	r1, r0, #8388608	@ 0x800000
 8004548:	f081 517e 	eor.w	r1, r1, #1065353216	@ 0x3f800000
 800454c:	4311      	orrs	r1, r2
 800454e:	ee00 1a10 	vmov	s0, r1
 8004552:	4952      	ldr	r1, [pc, #328]	@ (800469c <__ieee754_logf+0x1b4>)
 8004554:	eb03 53d0 	add.w	r3, r3, r0, lsr #23
 8004558:	f102 000f 	add.w	r0, r2, #15
 800455c:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8004560:	4001      	ands	r1, r0
 8004562:	ee30 0a67 	vsub.f32	s0, s0, s15
 8004566:	bb89      	cbnz	r1, 80045cc <__ieee754_logf+0xe4>
 8004568:	eeb5 0a40 	vcmp.f32	s0, #0.0
 800456c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004570:	d10f      	bne.n	8004592 <__ieee754_logf+0xaa>
 8004572:	2b00      	cmp	r3, #0
 8004574:	f000 8087 	beq.w	8004686 <__ieee754_logf+0x19e>
 8004578:	ee07 3a90 	vmov	s15, r3
 800457c:	ed9f 0a48 	vldr	s0, [pc, #288]	@ 80046a0 <__ieee754_logf+0x1b8>
 8004580:	ed9f 7a48 	vldr	s14, [pc, #288]	@ 80046a4 <__ieee754_logf+0x1bc>
 8004584:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004588:	ee27 0a80 	vmul.f32	s0, s15, s0
 800458c:	eea7 0a87 	vfma.f32	s0, s15, s14
 8004590:	4770      	bx	lr
 8004592:	eddf 6a45 	vldr	s13, [pc, #276]	@ 80046a8 <__ieee754_logf+0x1c0>
 8004596:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
 800459a:	eee0 7a66 	vfms.f32	s15, s0, s13
 800459e:	ee20 7a00 	vmul.f32	s14, s0, s0
 80045a2:	ee27 7a27 	vmul.f32	s14, s14, s15
 80045a6:	b913      	cbnz	r3, 80045ae <__ieee754_logf+0xc6>
 80045a8:	ee30 0a47 	vsub.f32	s0, s0, s14
 80045ac:	4770      	bx	lr
 80045ae:	ee07 3a90 	vmov	s15, r3
 80045b2:	eddf 6a3b 	vldr	s13, [pc, #236]	@ 80046a0 <__ieee754_logf+0x1b8>
 80045b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80045ba:	eea7 7ae6 	vfms.f32	s14, s15, s13
 80045be:	ee37 0a40 	vsub.f32	s0, s14, s0
 80045c2:	ed9f 7a38 	vldr	s14, [pc, #224]	@ 80046a4 <__ieee754_logf+0x1bc>
 80045c6:	ee97 0a87 	vfnms.f32	s0, s15, s14
 80045ca:	4770      	bx	lr
 80045cc:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
 80045d0:	ee70 7a27 	vadd.f32	s15, s0, s15
 80045d4:	eddf 5a35 	vldr	s11, [pc, #212]	@ 80046ac <__ieee754_logf+0x1c4>
 80045d8:	eddf 4a35 	vldr	s9, [pc, #212]	@ 80046b0 <__ieee754_logf+0x1c8>
 80045dc:	4935      	ldr	r1, [pc, #212]	@ (80046b4 <__ieee754_logf+0x1cc>)
 80045de:	ee80 6a27 	vdiv.f32	s12, s0, s15
 80045e2:	4411      	add	r1, r2
 80045e4:	f5c2 1257 	rsb	r2, r2, #3522560	@ 0x35c000
 80045e8:	f502 7222 	add.w	r2, r2, #648	@ 0x288
 80045ec:	430a      	orrs	r2, r1
 80045ee:	2a00      	cmp	r2, #0
 80045f0:	ee07 3a90 	vmov	s15, r3
 80045f4:	ee26 5a06 	vmul.f32	s10, s12, s12
 80045f8:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80045fc:	ee25 7a05 	vmul.f32	s14, s10, s10
 8004600:	eddf 7a2d 	vldr	s15, [pc, #180]	@ 80046b8 <__ieee754_logf+0x1d0>
 8004604:	eee7 7a25 	vfma.f32	s15, s14, s11
 8004608:	eddf 5a2c 	vldr	s11, [pc, #176]	@ 80046bc <__ieee754_logf+0x1d4>
 800460c:	eee7 5a87 	vfma.f32	s11, s15, s14
 8004610:	eddf 7a2b 	vldr	s15, [pc, #172]	@ 80046c0 <__ieee754_logf+0x1d8>
 8004614:	eee7 7a24 	vfma.f32	s15, s14, s9
 8004618:	eddf 4a2a 	vldr	s9, [pc, #168]	@ 80046c4 <__ieee754_logf+0x1dc>
 800461c:	eee7 4a87 	vfma.f32	s9, s15, s14
 8004620:	eddf 7a29 	vldr	s15, [pc, #164]	@ 80046c8 <__ieee754_logf+0x1e0>
 8004624:	eee4 7a87 	vfma.f32	s15, s9, s14
 8004628:	ee67 7a85 	vmul.f32	s15, s15, s10
 800462c:	eee5 7a87 	vfma.f32	s15, s11, s14
 8004630:	dd1a      	ble.n	8004668 <__ieee754_logf+0x180>
 8004632:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8004636:	ee20 7a07 	vmul.f32	s14, s0, s14
 800463a:	ee27 7a00 	vmul.f32	s14, s14, s0
 800463e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004642:	ee67 7a86 	vmul.f32	s15, s15, s12
 8004646:	b913      	cbnz	r3, 800464e <__ieee754_logf+0x166>
 8004648:	ee37 7a67 	vsub.f32	s14, s14, s15
 800464c:	e7ac      	b.n	80045a8 <__ieee754_logf+0xc0>
 800464e:	ed9f 6a14 	vldr	s12, [pc, #80]	@ 80046a0 <__ieee754_logf+0x1b8>
 8004652:	eee6 7a86 	vfma.f32	s15, s13, s12
 8004656:	ee37 7a67 	vsub.f32	s14, s14, s15
 800465a:	ee37 0a40 	vsub.f32	s0, s14, s0
 800465e:	eddf 7a11 	vldr	s15, [pc, #68]	@ 80046a4 <__ieee754_logf+0x1bc>
 8004662:	ee96 0aa7 	vfnms.f32	s0, s13, s15
 8004666:	4770      	bx	lr
 8004668:	ee70 7a67 	vsub.f32	s15, s0, s15
 800466c:	ee67 7a86 	vmul.f32	s15, s15, s12
 8004670:	b913      	cbnz	r3, 8004678 <__ieee754_logf+0x190>
 8004672:	ee30 0a67 	vsub.f32	s0, s0, s15
 8004676:	4770      	bx	lr
 8004678:	ed9f 7a09 	vldr	s14, [pc, #36]	@ 80046a0 <__ieee754_logf+0x1b8>
 800467c:	eee6 7ac7 	vfms.f32	s15, s13, s14
 8004680:	ee37 0ac0 	vsub.f32	s0, s15, s0
 8004684:	e7eb      	b.n	800465e <__ieee754_logf+0x176>
 8004686:	ed9f 0a02 	vldr	s0, [pc, #8]	@ 8004690 <__ieee754_logf+0x1a8>
 800468a:	4770      	bx	lr
 800468c:	cc000000 	.word	0xcc000000
 8004690:	00000000 	.word	0x00000000
 8004694:	4c000000 	.word	0x4c000000
 8004698:	004afb20 	.word	0x004afb20
 800469c:	007ffff0 	.word	0x007ffff0
 80046a0:	3717f7d1 	.word	0x3717f7d1
 80046a4:	3f317180 	.word	0x3f317180
 80046a8:	3eaaaaab 	.word	0x3eaaaaab
 80046ac:	3e1cd04f 	.word	0x3e1cd04f
 80046b0:	3e178897 	.word	0x3e178897
 80046b4:	ffcf5c30 	.word	0xffcf5c30
 80046b8:	3e638e29 	.word	0x3e638e29
 80046bc:	3ecccccd 	.word	0x3ecccccd
 80046c0:	3e3a3325 	.word	0x3e3a3325
 80046c4:	3e924925 	.word	0x3e924925
 80046c8:	3f2aaaab 	.word	0x3f2aaaab

080046cc <_init>:
 80046cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046ce:	bf00      	nop
 80046d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80046d2:	bc08      	pop	{r3}
 80046d4:	469e      	mov	lr, r3
 80046d6:	4770      	bx	lr

080046d8 <_fini>:
 80046d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80046da:	bf00      	nop
 80046dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80046de:	bc08      	pop	{r3}
 80046e0:	469e      	mov	lr, r3
 80046e2:	4770      	bx	lr
